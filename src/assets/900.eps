%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Data_processing_02.eps
%%Creator: Adobe Illustrator(R) 21.0
%%For: Руслан Олегович Холяев
%%CreationDate: 12/17/2018
%%BoundingBox: 0 0 600 400
%%HiResBoundingBox: 0 0 600 400
%%CropBox: 0 0 600 400
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.0.0 x223 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 88 8%%BeginData: 11442 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45B8B7B7B7B8B7B7B7B8B7B7B7B8B7B7B7B8B7B7B7B8B7B7B7B8B7B7
%B7B8FD63FFB2B7B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2
%FD04B7FD63FFFD1CB7C4FD63FFB7B7B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7
%B7B2B7B7B7B2B7B7B7B2B7CAFD63FFB7B7B8B7B7B7B8B7B7B7B8B7B7B7B8
%B7B7B7B8B7B7B7B8B7B7B7B8B7FD64FFB7B7B2B7B7B7B2B7B7B7B2B7B7B7
%B2B7B7B7B2B7B7B7B2B7B7B7B2C4FD3AFF5A5A59FD27FFFD1BB7FD3AFFAF
%AFA9852F5AFD25FFB2B7B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2B7
%B7B7B2B7BDFD3AFFAFA9FFA9A9592F7EFD23FFB8B7B7B7B8B7B7B7B8B7B7
%B7B8B7B7B7B8B7B7B7B8B7B7B7B8B7CBFD3AFFAFFD05FF845A2FAFFD21FF
%B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2B7FD3AFFA9
%FD07FFA9852F5AA8FD1FFFFD19B7BEFD43FFAFAF5A305AFD1EFFB7B7B2B7
%B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7CBFD3AFFA9FD09FFAF
%FF845A2F84FD1CFFB7B7B8B7B7B7B8B7B7B7B8B7B7B7B8B7B7B7B8B7B7B7
%B8B7BEFD48FFAFA92F5AA8FD1AFFB7B7B2B7B7B7B2B7B7B7B2B7B7B7B2B7
%B7B7B2B7B7B7B2B7C4FD3BFFA9FFFFFFAFFD09FFA9AF7E2F53FD19FFFD18
%B7FD3BFFAFFD05FFAFFD0BFFA97E2F7EFD17FFB2B7B7B7B2B7B7B7B2B7B7
%B7B2B7B7B7B2B7B7B7B2B7B7C4FD3BFFAFA9FFFFFFA9FFA9AFFD0AFFA9A9
%2F2F84FD15FFB8B7B7B7B8B7B7B7B8B7B7B7B8B7B7B7B8B7B7B7B8B7BEFD
%3CFFA9FD09FFAFFD0BFF845A2FFD14FFB2B7B7B7B2B7B7B7B2B7B7B7B2B7
%B7B7B2B7B7B7B2BECAFD3CFFAFFD0AFFA9FD0BFFA97E2F5AFD12FFFD14B7
%C4FD3EFFAFFD05FFAFFFAFFD05FFAFFD09FFAFAF5A307EFD10FFB7B7B2B7
%B7B7B2B7B7B7B2B7B7B7B2B7B7BEC4FD3FFFA9FD05FFAFAFA9FFA9FD05FF
%A9FD0AFFAF845A2FA9FD0EFFB7B7B8B7B7B7B8B7B7B7B8B7B7B7BEC4FD49
%FFAFFFAFFD07FFAFFD0BFFAF852F5AAFFD0CFFB7B7B2B7B7B7B2B7B7B7B2
%B7BDCBFD44FFA9FD05FFAFAFAFFFA9FD08FFAFA9FD09FFAFAF5A2F59FD0B
%FFBEFD08B7BECBFD50FFA9FFAFFD09FFA9FD0BFFA95A2F84FD0AFFCABDB7
%B2B7B7C4CAFD39FFAFAFA9AFA9FD0BFFA9FD05FFA9AFA9FFA9FFAFFD09FF
%A9AFA9FD09FFA9A92F2FA8FD48FFAFFFAFFFAFFFAFFD09FFAFFD09FFA9FD
%0FFFAFFD0BFF592FFD47FFA9FFAFFFFFFFA9AFA9FD08FFAFFD06FFA9FFA9
%FD05FFA9FD0BFFA9FD09FFAFA906AFFD44FFAFAFAFA9FFAFFFA9FFAFAFA9
%FFA9FD05FFA9FD06FFAFAFFFAFFD1BFFAF2F7EFD44FF84AFA9AFA9AFA9AF
%A9FFA9AF53A9FD04FFAFAFFD04FFAFAFAFFFA9FFAFAFA9FD17FFAFAF06FD
%45FF842F85A9FFAFFFA9FFAFA92959FD0EFFAFFFAFFFFFFFAFFD17FF8453
%FD15FF7E5A7EFF7E5A7EFFFFFF59FF59FF59FF7D7E84FF597E7EFF7EA984
%7E7EFD04A87EFF7E53A9FD0BFFA92F5A84AFA9AF845928A8FD06FFA9FFFF
%FFAFFFA9AFAFFFA9FD1BFFA97E59FD14FFA829532FA829532F7EFFFF2F7E
%297E2F7E29592FA929532F7E53592F59532F7E2FA906A8065A06FD0DFF7E
%305A7E5A2F59FD0DFFAFFFAFFFFFFFAFFD1BFF2FA9FD14FFA906FF065A06
%A82F59FFFF2F5A0653067E06FF06A906A8287E2F2F06FF2F535929530659
%29FF53A8FD0BFFA8AF7E2F065384A9A8FD07FFA9FD05FFAFAFA9FD05FFA9
%FD17FFA929A8FD14FFA82FFFFFA82FA85953FFFF5A062F29597E2FFF2FA8
%2F062FA8530653FF532F84292F068406A87EFD0BFFAFAF85A984A984A984
%AFA9FD07FFAFFD0DFFAFFD16FFAF28FD15FFA906FF2F7E06A82F53FFFF59
%2953282F7E06FF06A9067E06FF2F5306AF2F53595A062859297E2884FD0B
%FF84A97E4E484E4EA984FD05FFA9AFA9AFA9FD0DFFAFFFA9FD13FF7E53FD
%15FFA82F7E29842F7E5359FFFFA806A9067E842F8429A82F84297E597E2F
%53592F7E595A06A806A906A9FD0CFFA979484E4872A9FD05FFA9FF535984
%FFAFFD21FFAF5A7EFD16FF2F2928FF7D2F28A9FFFF8406FF2F7EFF2F292F
%FF06A92F532F7E59292F53597E8429A853282F84FD0DFF4E72777777FFFF
%FFA9AFA859062F2F7E7EAFA9AFA9FD15FFA9FD08FFAF28A9FD4AFF7972CA
%CACAFFFFA9AF53FD042F53532F2985A9FFAFFD15FFA9FD07FFA92FFD4BFF
%4E72C3CA72A3A95A2F2F0628285306292F59292F7EAFA9AFFD12FFA9FFA9
%FD06FF8428FD4AFFCB79CACAA373725A062906532F5306532F29065A2F59
%53FD04AFFD0FFFA9FFAFFD07FF5A7EFD49FF787972A3A2797273282F2806
%065A2F06285A2F530629292F2F7EA8AFA9FD0DFFAFFFA9FFAFAFA9FFFFFF
%A9537EFD17FFA9A8AFA9A9A9FFA9AFA8AFAFA9A8A9A9AFA8A9A9AFA8AFA8
%A9FFAFA9AFA8AFA8A9A8AFA9FD0EFF9D737372797373724E062F2F5A2F30
%77BEB7B771532F2F065A292FA9FFAFFD0DFFA9FFFFFFAFFD05FF2FFD18FF
%A88484A97EA9A8847E847EA97E847E84A8847EFF7EA9848484AFFD04847E
%A9848484A9FD0EFF729D727372737273292F06292F5A5A95B2B7B7B72853
%29282F5359AFA9AFA9AFA9FD09FFA9FFA9AFFFAFA9FFFFFF842FFD19FFA9
%FFA9FFFFFFA8FFAFFFAFFFAFFFA9FFAFFFAFFFFFFFA9FFFFFFA9FFAFFFA9
%FFAFFFA9FD0DFFA99D72737273727972782F532F29065A71FD04B777282F
%2F2F062F5A85A9FFAFAFA9FD0BFFAFFD06FF842FFD18FFA8A9A8A9A8FFA8
%FFA8FFA8A8A8FFA8FF84AFA8FFA8A9A9FFA8FFA8A9A8FFA8AFA8FFA8FD0B
%FFA9AFA9A972794873727372CAC32F062F2F5306297DCAC39B2F2F065306
%530629067E84AFA9AFA9AFAFFD05FFA9FFA9AFA9FD05FF537EFD18FF857E
%A984A984A97E84A8A984FFA9A984A984A9A88484AF84A984A9A8AF848584
%A984AFFD0AFFAFFFA9FFA39D787373737279A9CAC97E292F06535479A8CA
%7E2F065A292F2F532F5A062F5AFFA9FFAFFFAFFD05FFAFFD07FFAF53A8FD
%18FF84A9A8A9A8A9A8A95AFFA8A984FFA8A9A8AFA8FF84A9A8A9A8AFA8AF
%A8AFA8A9A8A9AFFD07FFAFAFA9AFA9AFA9CBA1A24E73727372A9A9CAA159
%0628297372CAC3FF4E2F0629532906292F2F282F067EA9AFA9AFA9FD05FF
%AFAFAFFD04FFAF06FD1CFFAFAFA9FD05FFAFFFA9FD1BFFAFFFAFAFA9FFAF
%AFA9CAA27372797273A9FFAFCAC9A95373727972A972794E2F2F2F28532F
%2F0653062F2F5984AF5AAFA9FD0BFF8453FD19FF7E847E847EA87E7E84AF
%7EAF7EA97E847EA9FD17FF85A9AFA9AFA9AFA9AFC3A37273727372A3A9AF
%A8CAA8A372727273727372720653062F2F2F285306292F29062F2F2F067E
%A9AFA9FD07FFA97E53FD19FFA984A9A8A9A8A984FD05A9A8A9A8AFA9FD17
%FF3085A9FFA9FFAFFFA9CAA37372797373A2FFAFFFA9FFA3734E7973734E
%79735A062F532F0653532F065A2F59062F065A062FA9FFA9FD07FF2FA8FD
%42FFA92F5A7EAFA9A979A3C3A27273727372A8A9AFA9AFA9CAA172727372
%727273292F2F2F06530629065A06292F53285306FD042FA9A9AFAFFFFFFF
%A92FA8FD44FF53302FA9A99D9DCAA2C39BA2A1CDA8AFA9FFAFAFA8CA7273
%72794E737254062F06FD052F062F592F0629FD052F532F5AA9FFAFFFA9AF
%2FFD46FFA8532F5A729D9C9D78C99FC8A5CFA9AF84AFA9CAA1737273729C
%A1A20629062F2F2906FD042F29065A280606530629282F2859A9AFA9AF59
%FD49FF84539D799D799D9CC8C8CDAFFFAFFF7EAFA8CA73737279A2CAA8AF
%5A5A062F2859062F065A062F53532F59282F2F2F062F5AFFAFFFA8FD1DFF
%CBBDBEB7BEBDBEB7BEBDBEB7BEBDBEB7BEBDBEB7BEBDBEB7C4CAFD11FFA8
%A984A9729D799D72A2C7C8C8AFA9AFFFFFA87EA17372739BCA9CAFA9AF84
%2F06292F2F2F5306292F2906532F292853292F065AA9AF5AA8FD1CFFC4FD
%19B7B8CBFD0FFFA9A984AF85A9789D799D9BC8C8CEA9FFAFFD04FFA85479
%C4CA7279AFAFA9FFAFA92F2F062F5A2F2F2F285A0629065306292FAFAF85
%2F53FD1DFFB7B7B2FD04B7CBCAC4C4BEBECAB7CBC4CBC4CBC4B7B2B7B7B7
%B2C4FD0FFFAF84A984A984A97E9D72A29FC8A6AFA9FD06FF7EC3A2727372
%AFA9AFA9AFA9AF5953067EA9530606062F0606065384AF845A0653A8FD1C
%FFCAB7B7B8B7B7B7B8CAFFC4FFB7C4CAB8FFFFCACBFFCBB7B8B7B7B7B8BD
%FD09FFAFFD06FFAF84AF85A984AFA8A2A1C8C8A7A9FFAFFD05FF7EFFFFFF
%9BCAAFFFA9FFAFFFA9FFA95A2F53282F2F2F062F5384AFFF5A2F2FA9FD1F
%FFB7B7B2B7B7B7B2CBCACBCAB7C4CBB2CBCAFFC4CBC4B7B2B7B7B7B2C4FD
%06FFA9AFA9AFA9FD07FF84A984A984A8C8C89FC87C5A7EAFA984A8FFFF7E
%A9FF7DA6A8AFA9AFA9AFA9AFA9AFA9A92F292FA97E5353A9A984282959FD
%21FFC4FD1AB7CBFD05FFAFAFFFFFAFAFA9FD07FFA9AF85A984CDC8C8C8A8
%2F3059A8C8C87EFF7EA87CCEA8AFA9FFAFAFA9FFAFAFA9FFAFAF842F0684
%A9FF8453065A84A984FD21FFCBC4C4BEC4C4C4BEC4C4C4BEC4C4C4BEC4C4
%C4BEC4C4C4BEC4CBFFFFFFA9AFA9FFFFFFA9FFA9AFA9AFA9FD05FFA8AF84
%A9A5C89FC883A97E2F7CC8A6C87C53A6AEA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AF8484A8A953292F8484A984A984AFFD3CFFAFA9FFAFFFAFFFAFFFFF
%FFAF85A8FD07FF84CDC8C8C8AF85A984A7C8C9C8CDC9FFA9FFAFFFA9FFAF
%FFA9FFAFFFA9FFAFFFA9FFAF7E282F5AA984AF85A984AFA9FD3CFF5A7EA9
%AFA9AFA9AFA9AFA87E28FD09FFC8C89FC884A984A9A7C8A6C8C8A8A9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF7E2F065A84A984A984A984A984FD3E
%FF535A7EFFAFAFA9FF7E2F53FD09FFAFCEC8C82E7E84AF85A8C8CEC8C853
%5A85AFA9FFAFAFA9FFAFAFA9FFAFAFA9AF2F292FA985A984AF85A984AFA9
%FD40FFA82F2F8584842F2F84FD09FFA8A97C7C592F068484A984C8A5C8C8
%842F2F5AAFA9AFA9AFA9AFA9AFA9AFA85A062F7EA984A984A984A984A9A8
%FD42FFA97E2F2F287EAFFD0AFFAF857E067E848484AF85A9C8CDC9CDA8AF
%5A302F85AFFFA9FFAFFFA9FF7E2F297E85A984AF85A984AFA9FD15FFAFFF
%FFFFCB789D78A3A2FD25FF84A984A984A984A984FD09FFA8A984297EA984
%A9A9AF84C89FC9C8A884A984532F5A84AFA9AFA984282F538584A984A984
%A984A9A8FD15FFA9AFFFFFCB727372797273729DA3CBFD20FFA9AF85A984
%AF85A984AFA9FD0BFFA9AFA8FFFFFFA9A92E52A7CDA7A984AF85852F3653
%7E5A5A065984AF85A984AF85A9727372A3FD14FFA9FFAFFFCB7273727372
%7372737273727378A3CBFD1DFFA8A984A984A984A9A8FD11FFA8A959292F
%599E5984A984A984A95A2F062F288484A984A984A97E79487348734873A2
%FD0FFFA9AFA9AFA9AFFF72797373727973737279737372797379A9FD1FFF
%84AF85FD14FFAF848553A9292F84A984AF85A984AF85A984AF85A984AF85
%A97E737273729D7373727372CBFD0CFFAFFFAFFFA9FFAF72737273727372
%737273727372737273729DFD20FFA9FD15FFA9A984A97E2F53A9A8A984A9
%84A984A984A984A984A984A97873487372797279727348734EA9FD0AFFA9
%AFA9AFA9AFA9AF797273727972737279727372797273727972FD38FFAFA8
%AFA9FD04FFAF84AF85A984AF85A984AF85A9849D72734E7372734E797373
%4E737FFD08FFAFA9FFAFAFA9FFAFAFA97273727372737273727372737273
%72737273A2FD41FF84A984A984A984A984A9A8FF78734E72487348724873
%484E4ECBFD06FFA9AFA9AFA9AFA9AFA9AFA9AF7973737279737372797373
%72797373727973A3FD42FFAFAF84AF85A984FD05FFA9797273727372734E
%737EFD07FFA9FFAFFFA9FFAFFFA9FFAFFFA9727372737273727372737273
%72737273727372FD44FFAFA8AFA9FD08FFA3727348724879A9FD07FFA9AF
%A9AFA9AFA9AFA9AFA9AFA9AF737279727372797273727972737279727372
%79A9FD4FFFA9A97873727F84FD07FFA9FFAFAFA9FFAFAFA9FFAFAFA9FFAF
%72737273727372737273727372737273727372A3FD4EFF84A984A984A984
%A984A9A9FFFFFFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF73727973737279
%73737279737372797373727979FD4DFFAFAF85A984AF85A984AFA9FD05FF
%A9FFAFFFA9FFAFFFA9FFAFFFA9FFAF727372737273727372737273727372
%7372737273A9FD4EFFAF84A984A984A9A8FD05FFAFAFA9AFA9AFA9AFA9AF
%A9AFA9AFA9AF7972737279727372797273727972737279727372CBFD50FF
%A9A984FD09FFAFAFA9FFAFAFA9FFAFAFA9FFAFAFA9727372737273727372
%73727372737273727372737EFD5DFFA9AFA9AFA9AFA9AFA9AFA9AFA9AF79
%73737279737372797373727973737279737372CBFD5EFFA9FFAFFFA9FFAF
%FFA9FFAFFFA97273727372737273727372737273727372737273A9FD5EFF
%AFA9AFA9AFA9AFA9AFA9AFA9AF7372797273727972737279727372797273
%7279A3FD60FFAFA9FFAFAFA9FFAFAFA9FFAF727372737273727372737273
%727372737273A2FD61FFA9AFA9AFA9AFA9AFA9AFA9AF7372797373727973
%737279737372797373A3FD63FFA9FFAFFFA9FFAFFFA9FFAFA3A3A2A3A3A3
%A2A3A3A3A2A3A3A3A2A3A9FD65FFA9FFAFFFA9FFAFFFA9FDFCFFFD04FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 2 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">600_450_clean</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2018-12-17T15:20:54+10:00</xmp:MetadataDate>
         <xmp:ModifyDate>2018-12-17T15:20:54+10:00</xmp:ModifyDate>
         <xmp:CreateDate>2018-12-17T15:20:54+10:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2017 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>132</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAhAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYqpzq7x8V6kjf5b5KJosZCwuQMBufoPbAUhdgS7FXYqlPmjTta1DSJLfRtROmXxI&#xA;ZbjgJAQAaoa7qD/Mu4zJ0mXHCd5I8ce5sxyETZFozS7a8ttOt7e9uje3UaBZrplVDIw6txXYZVll&#xA;GUiYjhHcwkQTYFIrK0OxV2KuxV2KuxV2KuxV2KuxV2KuxV8yeTvz58z6RerDrDtqunciJEkNZgK/&#xA;aSVvi5D+VjQ/5PXO71vYOHLG4eiX2fJ2+bSRly2L6bzhHUMauvzJ8kWurDSptVhW6rxdhUwo38rz&#xA;Aemp+bbd8z4dmaiUOMRNfb8ubeNPMi6TbVNYh06za9kilmtI43mmmhCuEjReXIgsGII6cQfuzFx4&#xA;jOXCOZNNHUBjHlD83/JvmWSK2huDaahKQqWtx8PNj+yj/ZJrsAaE9hmw1nY+fALI4o94cnLpZQ35&#xA;hm2apxnE0BPh9OJKpfp2u2N9I8KcobhOsEwCyEeIWpqM1+k7TxZyYi4yHSWxcjNppYxZ3HeEwzYO&#xA;O7FWC+b/AM04PLmstpj6c9yyxpJ6qyhB8YrShVsvx4OIXb0nZns7LV4vEE+Hciq/anXkvzYfM+my&#xA;34sms4klMSBnD8yoBJFAuw5UyGTHwmnX9q9m/k8ghxcRq+VUyDK3VoDWtd0rRLF77VJ/q1pHQyTF&#xA;XZVqwUV4BupYZbgwTyyEYC5FlGJkaHNW03VNO1O0S80+5jurWT7MsTBl9wadCO4O4wZcUscuGQor&#xA;KJiaKJyti871/wDOK20fWbvTG0t5mtZDGZRMFDUFa04HMmGnsXb1Wi9l5Z8UcniAcQuq/ay/yvrj&#xA;67osGqG2NotxyMcTMHPFWKhqgL1plM48Jp0XaGjGmzHFxcXD1TXIOE1zTlx5Dl/LXfDSLbwJdirs&#xA;VdirsVdirsVdirsVdirsVdir5i8zfkt5nHnqfTtHtjNpVxKZre5qBFDHKa0k324dPftnd6XtrD4A&#xA;nM1MCiOpr9bt8esiYbncdHuvmnzPDaapa+XggebVLa4NPj51CERhAo4tyIatXWn05yWm0xMTl/hj&#xA;Id34+wuBiwkgy7nytqa3dvfCF7XjeiQxFXRhIGrTiUJC8qkjPQ4mJjxA7U7yMvk+i9Tt9Ut/yNmh&#xA;WJ4b+PR0SaJ1KuAIwZQyncHiWrnEYJRlrwbuPH/Y6ewdQT04ny1b19aMITUn4gB27/PO+Pm7Y0+y&#xA;vJd1qa6Xb6Tq0TLqVhaWxmnMpnEyuHjEhdgrc2MDMykbVG5zzDV8JmZR+kk/B5sZOInamQ5jMlG5&#xA;srS5aNp4lkaI8o2I3U+x65Tl02PIQZxBMeXkzhklG6PNWy5g7FWA+ffImi3t5L5j1GS9ljiSJJbK&#xA;yjWSV/iCDgKE/tVb2zIw5SPSKd9ovaHLpMHhwiDvz36+S/TvPGg6RYW9hp/l/WEtY1+BI7NjQkty&#xA;5EtUtUVb54ThlI2TH5uj1OunmmZzsyKd+Xtan1syamiXVjp8bmJbS8txFKzKoBYHm9Y/i2+EHkOt&#xA;NshkiIitiWiJs30Yt+dEg1f8v9Yh0mdLuSxeJr+GB1dkSORXYOqklaD4jXsM2vYhENTHi2u697l6&#xA;OY8UMI/5x40/X7Vr7Vowy6ZK8Nr9Wk5gS85AGkQgheUI3qUNRVRxqTmz9o8kCIw/i3P497kdoZBY&#xA;AfQGci4LzjzZ+XvlmG9vvM+sTXc9s8iPJZWygsWkdYgPhHIrVt6UoO+ZWPLI1EPQ4vafNg04xwjE&#xA;cIq+f2JhF+Z3laysAsVjfw2ttByjjW0f4Y4+K0Cjw5DB+XkTzHzebyanjJlKyTuUB5u8yzeZPJRu&#xA;/L0NyON9DDLHNDLDIRxWQME+FmVWkQ+G2/TMjSHFhy/vpCMaO9j5X57jv7nL0JjOXwY15nvbF7m4&#xA;16cXttf6enqJqGmSDlLChoqvHLXjzDUEigq3v0zJxRNUOXce90+pxnFKp86BsHoe/uZz+V/nxPN+&#xA;hvdSp9XvYZCJLYkMRGSfSYMPt1AoWApyBHbMDV6c45eTmYTIwBIZlmI2OxV2KuxV2KuxV2KuxV2K&#xA;uxV2KrWjjZlZlBZfssRuK+GNrSR6vaWz+Z9GupLVpHt0uj9a4MY4laMA8n+wvKvfc/flUvG4wIH9&#xA;2b4xfP8Am7dd7b4ZhHHKJ61+1I/P1ydOt21zQ/LkGs67COCTsq+pGp2LgAepJT+Vd82mASI4JSIh&#xA;3OBkzkCo/s+TzLyv+furRXRtPNQh1DTbostzMsRiaAMSrqyKCGVQN1Ir7nMrJoRsYbHo0Y9TOO5Z&#xA;X5M/KX8tJtSXXNGv21KJHE0NuZUdYqmqhlUBvhp+0fmMyNT23qDDgkAPN2ktdLJGgQB9r0vTF532&#xA;o3BAoJEtoHHQxQRg0+azSSDNFM7Bx49Uxytm7FXYq7FUDrsFxPpF1FbRevOyH04eYi5MDUDmQwH3&#xA;ZKBo22YoQlICZ4Ynmauvgx+y0KR7i2iudEVbdlZbm4acBk4r8JCo7cuRFOgy45T3t2TSaYQJjO5D&#xA;kKO/3U8/8w+atS8u+ab/AEO9EMeh6tNMJGQuHSN0KxcAjrxryo1OwrStSdjDTjV6WUtOf3+P0+rl&#xA;xbX79txz3Pds3fk4SgCATy2HXvY3N5H8xaPqH+I/I16AIlZ1jTdQnGrqXkryrvVJQCO1TTNbo9Zn&#xA;vwNVA8f8+O8JfYOE9N+dOn1GCAueI1/RP1D9b0Lyh5t846nNZWmsWtpZ6m6G7skEqxR3PGMq0Y4e&#xA;t8fCb1GoGpxpSteOZl08BEyiSQNjty877un43vjjJwiQ+q9/0PTYRMIl9YqZafGUBC19qk5rSoQX&#xA;mBbo6Pc/VYZLi4AUxQxMqOxDA7M/wjJYzRbcOKOSQjKXBE9edJJZafcSXkNvNp9zFAwcyXQumIQo&#xA;Bx5KwQnn/k198tOT3fJuyaLDGBkMlyFbVz+08vNgfkbz/rvmK/1bSri1gtrWzjF+x/ex+l6csYaN&#xA;pJDLQleRowO48Nhse3+ysGLBGZuW/wA6BPSm7JpxiiDA7nb5pH5g8vtp/l3XJLezaLT2jlNpIVSQ&#xA;u4co7AIQY6U4qBswIFARXMjDqjmjCUpXIxHwBiCPee/nv1dP2tImQvmBX4LLPyI0O+s7K41HUeUV&#xA;7fwxFrRolhMaq8gU8VovxgBqBRSuajW9pjLk/LiO2H+K7viAP2cuZc8ZJS08DLnv+x6vmK0OxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxVZPDHPDJBKvKKVSkinurChH3YQaNoIvZi8+j63pNWsmbVbBf8Aj2lY&#xA;fWkHhHK1BJ8pDX/K7Zlwzxlz2Lizwkct3n2p/l3pPmq/1C81C8aCQosiemEia3lKAOWRizFfg/aI&#xA;r1FDmTg7QE4ARG0SRf6Px827UmPhRgRUhv8ANI/Iv5U+YrfzGuoaXqhNvay1hvYQ8cEiAqQGYlWl&#xA;VqfEq/CQTSTbezPqY8NEOFjxSJ2fQNlZxWdskEZJClmZ2NWZ3Yu7t7szEnNPKVm3YgUr4EuxV2Ku&#xA;xV41+aPl/wA9X3nEXujW93JbwwxrbzQOVCNuW40YU3651XZOp00MHDkMbJN27PS5MYhUqeu6b9c/&#xA;R1r9eoL30Y/rQBBHq8RzoR/lVzmcvDxnh+m9vc66VWa5MN86/lJo3mnUIr6S8uLOYEC59NuYkjG/&#xA;EB68Po29sz9B2nLTQlGMQeLf48r83IwauWPlun9l5fiEyC7srVo7WNYbaUVkkZYiPTLclFOIHQlt&#xA;+h8cOeYnkTvzcIx4pEypS/whplvqs+txQibVpWYJdOq84onrVI+IUD7R+L7RGxJGDBk4ImF+gnir&#xA;z/HTkzy5ZmPCDsnlsrLborCjAbg5XM7sYDZ4r5g8v/mM35i3Op6Xb3RhN0noT8ysRjUrQMeX2PEe&#xA;GdXptTpfyohMxvh+N/rdvjyYvCo1ye3ZyTqlJrO0ZJkMKFbiv1gcRSSo4nnt8WwpvkuI7b8lO6Fs&#xA;NB0iw0+LTra1RbKBi0MLVcKSxfbny/aNcnPNKUuIndZermpTaVDBLJPZwhZpyfXcElzU1oCSaLXf&#xA;iNq4MQiCSeZasvFVBM4wQig9QBkDzbBybwJdirsVdirsVdirsVdirsVdirsVdirsVSd/J/ld/T56&#xA;ZA/pO0kfJA3FmNSRWtNxlgyyHIsDjieYTdERFCooVR0UCgGVs28VdirsVdirsVYr5i/Mny9oGpNp&#xA;18twbhUVyYkVlo243LLlsMMpCw7rQ9g59Tj8SHDw+Z/YmPlfzVpvmSzlu9PSZYIpPSZplC1agY0o&#xA;W6BhkZ4zE0XE7Q7OyaSYjkIsi9k5yDgKc1xbw8PWlSPmwRObBeTMQoUV6kkgYQCUEgKmBLsVYbq/&#xA;5r+V9K1K4066S5NxbPwkKRqVqPAlxl0cEiLd/pvZzU5sYyR4eGXn+xkOga7aa5pcepWaSJbTFhH6&#xA;yhWPElSaAttUZXOJiaLqtbo5afIccyOIdyY5FxXYq7FVK8uorS0nupa+lbxtLJx3PFFLGn0DCBZb&#xA;MWMzmIjnI182Dr+dPlBmCrHeFiaACJSST/s8v/LSehPspqh1h8/2M8U1UGhFRWh6jMd5shvFDsVd&#xA;irCdQ/N3ypYX9zYzpdGa1leCUrGpXlGxVqHmNqjLxp5EW9Dg9mdTkhGcTGpAHn379zKNE1i21jS4&#xA;NStkkS3uAWjEoCvQMVrQE9abZVKPCadPq9LLBkOORHFHuR2RcZ2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV5t+YP5eJqmrza/eamljpkMC/WT6TSSKsQ3IVTvXMrDlocIG71HZntFHSafw+DikCTz2Rehed&#xA;/wAsPLun2+j2urKFTiQXjmLu80YnDMRHSrowYe2CWHJI3Tzuu7SOpynJM7n8UyO386eXbvRRrdnd&#xA;C40vnwa7RXCJQVLPUAhRtU0yAwS4uHq43iAixujVvIby2WSIc0kUEow34OD9pT0DDxwCNHdiZWFG&#xA;aG6063knsv3sMa8hYE/C1AaLCx3jJqAFNU2AAWtcbEuaaI5JplTY8r80/lhaza3f6/rGsRWGkSSC&#xA;SRitGXmQgUuxCrViBXf5Zl48xoRAsvW6b2oGn00cYhcoirJ2ZXbecfy90XTba0TWbK2tIYgsAeZR&#xA;8CsY61J3qynfxyo4ckjyLymo1fizM5n1SNsK/Mj85p/L+qabLoUtvqOnTxyrcJTkvqoy/tCjbK46&#xA;H783nZXZMNRjlx2JAuTpcMMkSx6P8xbbzRN+kV1K98vatYRs6unO7s3jX42JjHCj0U7H4TTpWlJZ&#xA;+zpac8JAlE/B1WtwSxS9R9xZr5S/Nq71w6clrod5dWl3O9sdSbhGAIwtZGjFQv2uVCw2+yWOYE+z&#xA;4CMpGYiY/wAPf+P7acjTSjOBJlRHTveg6naG8027s1bgbmGSEORUAyKVrT2rmriaNuRp8vh5Iz/m&#xA;yB+ReY6H+WXl/wAv6taXXmLWrY3Cv6lnZM6Qq7IQVb94wZ6H9kD78y5ZpSHpD0/aXtWcsDjxx4OI&#xA;VZO/nX62ff408nUr+ntOp4/W4P8AmvMfwZ9x+Tx/iR7wkvmnzjqFtLDHoi2t4hVZpEeb0nmhdQ6v&#xA;byErEy8TVjyJp23rmTg04IuVuPmzkGhTHfL/AJlntHv30XUZ9cjBjMGn3U8Z5SO7CRIrl+Rk4BGH&#xA;w06bc61zIyYRIDiFeYaYZeE7H4Fnvl3zNa61DQQy2d6ih57C5XhNGCSAWQ/EFYg8SwFcwMuEw8w5&#xA;mPJxeRYBrP5UWJ1q+1jW9bhstMurqSYV4xms0hcJ6kjBAd/f5ZdHOaAAsva4/asYdPGEYeqMRGyd&#xA;thTObPzT5Hs7CGC31vTktLdVgipdwcQI/gC159RxplBxTJ5H5PIZdR4kjOR3kbKV+YdavLmFX03U&#xA;YRpF+yW1rqFmTcP65fdR6INAArFnL0A6065kYMcb3HqHft9/3OPOM53w8qY5oX5i63pNpBJrcbaj&#xA;pEigQanECW69GLAb07PQk9CcycujjM+jaXc4mPVSj9W473otp5g0S7itJIb2L/Tq/VEdgjy8SQwR&#xA;H4saEGu2a44Ji9j6efk7KHqHEOSYZUrsVdirsVdirsVdirsVdirsVQes8f0TeFq8RC5aiGQ0Ckn4&#xA;ACW+WShzDKGMzIiOZ23YHbR6XcNAl28jG4aJICkEbsDIoQc1Bd1+EAbr8PemZRnXIOUexcoBsx9N&#xA;/Z5kV7u/ojPOcN7Z+Wn0zTI/VtZVUm5iAMiSiTmGkTjxZDRR8q9hk9PkxwJyZNhEHnyru9/6acbR&#xA;14sRe36Xmd35X84eX9QbWPJckl48LiaW4WYSvcRSopaN468ZVDLt+0QdhtXMuOfFlj6vq7ug3P8A&#xA;Z8D7mjUmHhiUdp8R+R/Q9E/LzznrXnCCSPVtKbT7m1kiaSZSyxuIpPUoI3+NW5KoIY7g1HhmFqMQ&#xA;x8i04chmd3omYTlJT5rSF/L94J4DcxAKzQCH6wW4urU9Ig8un8csxGpBsxYDmkIAgX1lsGKQ6BoN&#xA;3PBYvp8jMyuVL2Vq0Q9P4ipajKnIsePKgJOX+KRv+ks8vZhhAz4omq2679wIF+fc89/ObQYb/Q7f&#xA;VtKtpUj0iaSK7ilRUJil48ZFQKh4qVoTTv7Zv+w9XCGU4ZSHFMWO/b8fY29l5eYra2DeS7C7XTdU&#xA;vHRo7YWUyLMS6Kz8WPAMPhNAeRB9jmy7WmDKI6/2OH25Iekdd/0PVv8AnHm8hgtJNKEiH17VL+FU&#xA;MhLDmUlkbmevqP6daCvH2zmu0OGcBKN+mXDLyNWB8vV/nNsccRp4GL2bNQ1MW85W1nNeaeLi2eev&#xA;qASJbJNwAAP95J8KV+e+X4ZUC3YtCcwJEox4e/nv3IPSfKnl/UZbhns2X0n4yCe0t05llDclcK4c&#xA;b779euSlmkP7WGo0HhVcoy4u79PUMD8zercapr3CKun2UawQSHl6YWKDgiohQxArxPLavxbEdM2+&#xA;LhjCAv1ncjbbfn3+rp09JcftLTxhigf4mO+XbS7g0aykdoWtNT5J6bSVZnE1wEX0/wB4G5A1BY0A&#xA;6MK7SjOEiQL4493LkOf468mrFiidNM16rB5dLrn87Zb+RRJ8z+bO4EiUO/8Av6bxLfrzC7R5RadF&#xA;1em+b1jOhyl4mm4PGyokP1hq8wAQlD0r17ZrsRqTtMWnOaXACAT1JoMbsfLmgX11HZGzdFVHljaS&#xA;ytvTX4hyHJQ4RmJrTauXHKRv+ks83ZphDiMoneqHP5EITVbPRtTt9L06yVYdMstSj+s+oEiZJXI4&#xA;RhVAjqfiDofj3GWfmpacGXOc6iK7idz3ihuDy2YaLNECXQ0paNHcWHmWHy1LHx0i2hkt5EnVz6nq&#xA;GSVHQgmNgQAvJlHQjq1BackJRMgbyeRG3Ln1v9bjw4BhMJCpcW233Hu/TSY6V5b8sX2p2bXGnA3O&#xA;kyzfU5F+wF9Z5AHXpRXYla9D0phnqssIyEZemfP5MNNnlEcANBnmatvdirsVdirsVdirsVdirsVd&#xA;irxr80fMPnmx84iPRp7uO0hhjMccCFoizVLcgFKsfnnVdk6bTzwXkEeIk8+bs9LjxmHqq3rumzXM&#xA;+nWs11GYbmWGN54TsUdlBZfoO2czliBMgGxbrpAAmkNb+X9It7a4tordRBdf3yVO4HRetQB2A6ZG&#xA;czP6t2qMBHkls3kiyd5GivLqH1GLFUlKqoPRVVOA4r25V8OmTw5BjugNzZ97GeLiIs8vuQfk/wAt&#xA;675c066hvb9b8ySj6vwiWMRxio2A/m226DsBmbqtRizSHDHgod/NszSFeiIiyq1LG3QtUsRvXrmv&#xA;nzRDk8X8weaPzBtfzFuEsWvJrGO6SKK0WMtC8YKjiBx4/F/N1986vTaTSy0o4uES4efW3bY8WM4t&#xA;6untuck6tLNS8vWF7I1xvDdkU+sJvUUpxZTVWUjqKb5r9R2dCc/FiTDKOUonf9Tk4tVKA4ece5Zc&#xA;+WtPvdNFlfxpKpT05WiX0Q6+HFSdqZsdPlywA4pcUu+ufw3cTPjhMnZfougWmkPcCzoltNw9K2VF&#xA;VYhGCOKlQCQeu/fImI4jL+KXP7mQsREeg5K+tzXEGjX89tUXMVtK8BA5HmqErQb13y7BEHJEHkSG&#xA;UADIW8q/KTzD56uvMUlnq7Xdzp7wu7vcq1I3BBUh2Fd+nGv6s6PtnTaaOLihwiV9OrsNXjxiNxq3&#xA;sOcu61Kl8vWbXWoPcRQS2t6Ub6uIQpDBSHZ25HmXJ/lH04xuMzO5cRoc+QHIDu5lOQ8YEZbgKH+F&#xA;of06dQ9atkLb6vHp3poFjYspMkUi0ZarGAV+nLITERKh65kEm+dA1t8VJuHB0dpOiafo1y9vp1qt&#xA;tDNIZZmUHlIxqeTsdz1y6eQzjZNlxYQ4ZUBs8t/xP+Ycf5lTRRNeT6f+k3txalGMBthMU2FOI/d/&#xA;tfTnSflNKdICeES4Lvrdfr6O+8LH4XS6e3ZyLqlvoxfyL15dB9rx+eG0UlWo6Ver9dutNmJurpUD&#xA;20zVibgpWilg/p1B68SPFTksQhGVkc+ZY5BIjYtxQ3lnYxREIJn5NcPEvEF2JJ8fHrlwIkSWqVxA&#xA;ATbMZyHYq7FXYq7FXYq7FXYq7FXYqwXzf+acHlzWW0x9Oe5ZY0k9VZQg+MVpQq2X48HELt6Tsz2d&#xA;lq8XiCfDuRVftTryX5sPmfTZb8WTWcSSmJAzh+ZUAkigXYcqZDJj4TTr+1ezfyeQQ4uI1fKqZBlb&#xA;q1NLq2ed7dJka4iAMkIYF1DdCy9RXJGBAutimjVqmRQ7FXnev/nFbaPrN3pjaW8zWshjMomChqCt&#xA;acDmTDT2Lt6rRey8s+KOTxAOIXVftZf5X1x9d0WDVDbG0W45GOJmDnirFQ1QF60ymceE06LtDRjT&#xA;Zji4uLh6prkHCWTzwwQvPPIsUMSl5JXIVVVRUszHYADDGJJoblIFqWnajYalZx3thOlzaTAmKeM8&#xA;kYAkGhHuMlkxShLhkKIWUSDRdqN2LLT7m8K8xbRPMUBpX01LUr70yIFmmzBi8ScYfziB83m0P55w&#xA;zSpDFosjyyMEjQTrUsxoAPg8cyvyvm9bL2QMQScoof0f2vUFJKgkUNNx1ocxHji3ihTiuLebn6Mq&#xA;Sem3GTgwbi1K0NOhocJBCAVTAl2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KsF86/l/5e1C/n&#xA;8x6zfTW1nbQBrpYwKBIgSWrxZunWgzIxZZAcIDvtD7Q5NJg8OMY9TZtdpf5iflbpViun2OqQwW1m&#xA;tOHCbatSWJKb1oSThlp8pNkOj1GuOaZnOVyKte/mh5dm8t6lqugT/pR7BYw6Ro6hGnqI2bmq/CKE&#xA;n5ZdpdDKeWMJem/0Lp+HJKgXmHkvSvN2o+Z5POuo6k2i6RbySNLc3bqryu6AqDCSKBgU+EhfhoF8&#xA;c6HXZ8McX5eEeOfcN6/s+Pm7PVGMYcIG5Hd9vm9k8v8AmGG8lmspp/VvIpCvL0niRhQkBGYAPspN&#xA;R29qE8xmwGIutnR4swJq909zGb3nvmP8t/KQ1O88ya9qLwWMkivMjskUSs7LGoaTrRmIA6fPMmGa&#xA;VcMRu9Fh9ps2HAMcREcIriZFp/nDySDbabYapaVPCC1to5F9kRFH4AZXLFPmQXnZ5+ORkTciVPzR&#xA;5307RY5Iw4a8jeOJhIsgjQyxvIpZlU8hxj3CVIqtaVGW4NKZ79Px+Pm155nHDi70B5k0e28/eUPq&#xA;MlxLZw36q37sK3F4ZAeW4BIPHxG3bL9LmOly8YF8P6WWDUEESCVfk95T81+U/wBJ6Jq08NxpsZjm&#xA;09o2kNBIWDUVxRQSpqK1r88ye19Zh1HDOIIn15OXqM8clECi9Bv7RLyxuLR2KpcxPEzDqA6lSRX5&#xA;5pgaNtWHIccxMfwkH5PO4fKH5f8AkS5ttT1q+kkn5M1o8yMyK0dDyCRI3xLWtWPy6Zk8c8mwDu+0&#xA;fafNmgYbQiedcz8U/m/NXyFDM8L6mTLGzIyJb3LkstQQoWM8vsnpkBpp9zzfjR72C/nJ5s8x6Wbw&#xA;2V0bSKSBIUSNpVmUpdfE4KlVAdQN6dDSu5ruOw8GHNOiOKUbvkRy5Ed46fP3bfR0Y1Idb5c/j+h3&#xA;5Necde1/TbmTV5DNNYT2cNpeAETvHJKFlSVxs6KpBow8T1oRb25o8eGQ4BXEDY6eVOLrccISHDzL&#xA;2GzvLS9to7qznjubWYcop4WWSN18VZSQR8s52cDE0RRDQQRzVcih2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxVD6kJjp10IQ7TGGQRrEQHLcTTiSVHKvTfJR5hlCAkQCeG+vd5sUsIdQlktEnh1NWm4&#xA;rM3ryL6VUJLPzRVoCKHi567Vy+Ux5OVk7PxxBIyg19vuok/Me+ky1m+udBsbl7KzmuvTtZJhPJK0&#xA;iBoVZvjDtsO5oRXt7HBjGWYEjVyA+bhYx6xGti+bPN3mL9P6u66elzO0zNNHbGRpj60rFpOHp8RT&#xA;l0CDf2ztezsJxY7nQ+FbDv8A29HooYxCJFiXD1Hd8ft8/m9b/KHyVrNi1tqGrzJDcWqOq6byDyRi&#xA;QMPiH+6tmrxr8xXOb7W1cJyIhuD1/HN53UxjLUGcSK2+7d6zmkSlnmazmvdDuraGE3ErhSkIKDkV&#xA;dWpVyFHTvk8cqlbKGOMyIylwxPWrr4BIdG8pxG953Wnz2awhZIpfrMTh3qRx/dBHUp1BB75dLMa6&#xA;fJnm0mGABhPjPdRDD/PC3Oi+amml/wBIg1IoklRItYYVqnx1Usyrsw5kNRSwrTM3TZzkiYAUIDbz&#xA;kbv4cum1no4uvzDgxx6b39n7Uq0K0/MvTTLeR6un6LvYp4ng1GaV2jliDemUcvyiJjSoYPsOo+zj&#xA;PNpZVW8bAsd/Uctze1Vu3xxcGoHDZjse9Ofy6/NLUdY84ros9rC6TQembqJnLg26O5dyxZSHYmnc&#xA;V398vtDsuGLB4gJvuP3e8OfqNDGETMH8F67nPOuSjzDaXdyLUW8MswWQ+qIp1t+KlT8RJVi29BQU&#xA;65ZjlVtuPFjnfHLhrltd+SG0rRC7Tm+tZbcKwWEG7aXmtAxb4eHH4tqZKWTu+5GbBijXBIz232Ir&#xA;9aE1HStBfU9UtL24e5TV7eOGfSpQWiPCpUo5oQx5HYN16b0zFx9q4cOaOMERzcV3v1A/zejYIZfD&#xA;4wNopVc6Boelafb6PoKm3Wd5JJY4qhwvptFxP7YYmUfa329s20tTkySM57kcrcCeW5iRPEb+7omn&#xA;5bQavb+XlhvyWEckgjkk+1IS5ZpB/kMzGldz1zG1OoxZiMmOuGUQaHTbkfMdfk7DWCspZZmM4zsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirxr80fL/AJ6vvOIvdGt7uS3hhjW3mgcqEbctxowpv1zq&#xA;uydTpoYOHIY2Sbt2elyYxCpU9d0365+jrX69QXvox/WgCCPV4jnQj/KrnM5eHjPD9N7e510qs1yR&#xA;BAIIIqDsQcrYpJpXknyppOpzanp2mQW19P8AbmRdwKUIQHaMHuFpXMrNrc2SIjORMR+Pj8WyWWUh&#xA;ROyNlsIoBNLZQJFPO3K4eNQrP13JHU1OVQlZ9TjTia9KKtlZbdFYUYDcHITO7OA2eLeYPL/5jN+Y&#xA;txqemW90YTdJ6E/qFYjEpFFJ5fY8R0zq9NqdL+VEJmN8Pxv9btseTF4VGuT23OSdWhr7TNPv1QXl&#xA;tFcemS0RkRXKEihK8gaZKMzHkWMog8wk+qeRNC1TS3sLwSuXDA3iuEn/AHgYOOSgLxbm3wceO/TB&#xA;pqwkcI5SEviDd/NuGWQlxdW9M8p6T5f0+Ky0O0W3iVeEjqKzOASR6kh+JtyepzLnqpZZGWQ393ya&#xA;tTkyZDZNplq6XZ0O9S15fWzayiDgaP6npkLxPjy6ZThMfEjxfTxC/mzx1Yt5Z+Umg+fNK8xSHUre&#xA;4g0uSF/XWd/gMhIKlVqfjr38K50XbOo02TEOAgzvo7DV5Mco7c3sOcu61QvLGzvIjFdQrKh7MNxT&#xA;wPUfRlOfTwyx4ZjiizhklA3E0WodPtIYhEiVCqYw7Es/A/s8z8VPpyeKAxxEY/SPMn72MzxGzzKF&#xA;tNPNnJDbW6stnDX0lLMwANT1Yk9TmQOEQoUGgiXF5JllTc7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq8D84Qeabvzxqdtpy3kpM59OOEyUC0G+2wHvmwxmIgLfTOy56aGjhLJwD&#xA;09aex+TtHutI8u2dldyNLeKpe5dmLn1HPIjka7LXjmFklcrDwfamqjn1EpwFR6dNh+LThmVFLMQq&#xA;jcsTQAZAB15LG/P/AJvl8r+W7vVbeyfULiBVZIF5BPjcJyZwCKKWrx6kfSRm6DSDPlECeEFniiJS&#xA;AJpLvyq/MaPztob3EyRwaraNwvreKvAFieDJUseJA8euX9q9nflpit4S5W26nB4Z8mbZq3HdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVSrzVfapY6Dc3WlmA&#xA;X0Zj9L62rtD8Uqq3IRlW+yTSh65ZiiJSosMkiBYYmNd/NV5gq2dgI240JtL2ooo51JkVeteO4zI8&#xA;PF3/AGhq459yU+a/MGrahNcaRPcxQOn1Vo/ghMLTemyzx8J2oeMrHkrMxXipCndszMGGEQJdd7HW&#xA;uh+I5d++7PXQrFH+dJE+UvzS8pT2/wCibu6aC8soWLx3SpCs4O7CE8ihAPwhSR7CmU5tLkuxHn80&#xA;YcZ4xjO0vP8AHJkXlLTPJ9treoXehQ20Nxe29vNcJA0ZNHaRg3BT8PIFT4dKZDVZc8oRGTi4QTV/&#xA;jo5MvEG0roMszAYOxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KvPde/M/y2Nfn8q6hbXKwmRLeW8jYIA5INfhZWCg0qa/Rm5xdj5ZYRliRyunYafDkhWSJFj4s&#xA;y07Q7DT55JrYOHlVUcFzxopJHwCi1+LrSuagyJac+snlAEq2/HPmxPzz5E1HVdSttQ0poY3Ut66n&#xA;923JlCCTkoqxArWprsKZkaXLGBkZWeIAd42vby5uu1MZzEaP0/ppIL7ybbafoP6StPLw1K7g9eNe&#xA;cTm5dJubAemAknEsVAI3AJ2pyx0+sz5iPEIhIyG/ICIIF8+YG/w9znHhlmEyeg380H+Wn5deYNK1&#xA;u180a0yWI9ORotJQVl5SqyUkpRUADVAqfCgzd9o9oQyY/Bhcq/i933uVrddj4TCO91v972ZTyUHx&#xA;Fc5suuDeBXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq8g8x&#xA;/wDKof8AF91+lvrf6T+sr9Zpz9HnUdeP7PjTOn0v57wBwcPBW3e7LH43AOGqev5zDrXYq7FUNe/V&#xA;eK+vXqeNOvvlmPi6NeTh6ohKcFp0oKZAsw3gS7FXYq7FXYq7FXYq7FXYq7FX/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:fc9e1a62-03bf-0d4b-9dd0-bfa81737cc5e</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:fc9e1a62-03bf-0d4b-9dd0-bfa81737cc5e</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:471e0793-4424-5748-a16a-89b4f44b8205</stRef:instanceID>
            <stRef:documentID>xmp.did:471e0793-4424-5748-a16a-89b4f44b8205</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1fc469ec-54d7-6444-9087-891d1f765b63</stEvt:instanceID>
                  <stEvt:when>2016-07-05T10:25:28+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:65093837-8c70-274d-a0b6-73be46bbcfe1</stEvt:instanceID>
                  <stEvt:when>2018-07-04T15:37:19+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:254258aa-7d0d-c94e-83d9-a2bc49954f99</stEvt:instanceID>
                  <stEvt:when>2018-09-27T09:50:25+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fc9e1a62-03bf-0d4b-9dd0-bfa81737cc5e</stEvt:instanceID>
                  <stEvt:when>2018-12-17T15:20:54+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>600.000000</stDim:w>
            <stDim:h>400.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р‘РµР»С‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р§РµСЂРЅС‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -400 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 400 li
600 400 li
600 0 li
cp
clp
318.562 167.391 mo
298.635 155.797 li
296.953 154.826 297.164 153.13 299.106 152.009 cv
318.099 140.943 li
320.041 139.822 322.978 139.701 324.659 140.671 cv
344.586 152.265 li
346.268 153.236 346.057 154.932 344.115 156.053 cv
325.122 167.119 li
323.181 168.24 320.243 168.362 318.562 167.391 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.280034 .073518 .0233463 0 cmyk
f
352.237 130.228 mo
352.237 130.228 li
352.237 125.155 li
325.299 125.14 li
325.485 125.134 li
323.349 123.9 319.615 124.055 317.148 125.479 cv
317.946 125.146 li
290.983 125.131 li
290.983 130.545 li
290.922 131.38 291.388 132.187 292.415 132.78 cv
317.736 147.512 li
319.873 148.746 323.605 148.591 326.073 147.166 cv
350.208 133.105 li
351.631 132.283 352.317 131.218 352.237 130.228 cv
cp
1 .866484 .240818 .0951247 cmyk
f
321.617 124.307 mo
320.053 124.345 318.43 124.739 317.148 125.479 cv
317.946 125.146 li
290.983 125.131 li
290.983 130.545 li
290.922 131.38 291.388 132.187 292.415 132.78 cv
317.736 147.512 li
318.763 148.105 320.158 148.373 321.605 148.338 cv
321.617 124.307 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
294.035 125.133 mo
290.983 125.131 li
290.983 130.545 li
290.922 131.38 291.388 132.187 292.415 132.78 cv
294.035 133.714 li
294.035 125.133 li
cp
.280034 .073518 .0233463 0 cmyk
f
318.272 147.775 mo
320.115 148.564 322.781 148.52 324.937 147.699 cv
324.937 140.611 li
318.272 140.611 li
318.272 147.775 li
cp
.940612 .760952 .191134 .0482185 cmyk
f
317.736 142.142 mo
292.415 127.41 li
290.278 126.176 290.546 124.021 293.014 122.596 cv
317.148 108.535 li
319.615 107.11 323.349 106.956 325.485 108.189 cv
350.806 122.921 li
352.943 124.155 352.675 126.31 350.208 127.735 cv
326.073 141.796 li
323.605 143.221 319.873 143.376 317.736 142.142 cv
cp
.147219 .0154116 0 0 cmyk
f
322.645 122.367 mo
315.197 118.037 li
314.203 117.462 314.203 116.531 315.197 115.956 cv
316.192 115.382 317.807 115.382 318.801 115.956 cv
326.248 120.286 li
327.243 120.861 327.243 121.792 326.248 122.367 cv
325.254 122.941 323.64 122.941 322.645 122.367 cv
cp
0 0 0 0 cmyk
f
333.469 128.694 mo
328.948 126.027 li
327.953 125.453 327.953 124.521 328.948 123.947 cv
329.942 123.372 331.557 123.372 332.552 123.947 cv
337.072 126.614 li
338.066 127.188 338.066 128.12 337.072 128.695 cv
336.077 129.269 334.463 129.269 333.469 128.694 cv
cp
f
312.206 125.027 mo
307.686 122.36 li
306.69 121.786 306.69 120.853 307.686 120.279 cv
308.68 119.705 310.294 119.705 311.289 120.279 cv
315.81 122.947 li
316.804 123.521 316.804 124.453 315.81 125.027 cv
314.814 125.601 313.2 125.601 312.206 125.027 cv
cp
f
523.558 279.024 mo
382.24 197.434 li
378.242 195.126 371.26 195.415 366.644 198.081 cv
270.417 253.619 li
265.801 256.284 265.299 260.315 269.297 262.623 cv
317.881 290.673 li
314.024 291.012 310.313 292.027 307.343 293.741 cv
299.94 298.015 299.941 304.944 307.343 309.218 cv
314.746 313.492 326.747 313.492 334.149 309.218 cv
337.119 307.503 338.876 305.36 339.463 303.133 cv
350.943 309.761 li
348.554 310.306 346.313 311.132 344.381 312.247 cv
336.829 316.608 336.829 323.676 344.382 328.037 cv
351.934 332.397 364.178 332.397 371.729 328.037 cv
373.662 326.921 375.092 325.627 376.035 324.248 cv
410.614 344.212 li
414.612 346.521 421.595 346.231 426.211 343.566 cv
522.438 288.029 li
527.054 285.364 527.556 281.331 523.558 279.024 cv
cp
.280034 .073518 .0233463 0 cmyk
f
561.889 111.211 mo
414.712 26.2387 li
413.003 25.2524 411.266 25.1 409.725 25.6274 cv
409.734 25.6118 li
409.467 25.7133 li
409.401 25.7377 li
404.083 27.7729 li
408.856 30.1098 li
408.788 30.3696 li
384.815 139.492 li
383.616 144.953 386.019 151.329 390.182 153.732 cv
533.818 236.661 li
533.306 242.747 li
539.119 240.495 li
541.072 239.581 542.636 237.516 543.282 234.574 cv
567.255 125.452 li
568.454 119.991 566.052 113.615 561.889 111.211 cv
cp
1 .866484 .240818 .0951247 cmyk
f
561.889 111.211 mo
414.712 26.2387 li
413.003 25.2524 411.266 25.1 409.725 25.6274 cv
409.734 25.6118 li
409.467 25.7133 li
409.401 25.7377 li
404.083 27.7729 li
408.856 30.1098 li
408.788 30.3696 li
392.989 102.288 li
465 158.392 li
566.537 117.076 li
565.562 114.547 563.94 112.396 561.889 111.211 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
556.339 127.985 mo
567.543 123.215 li
567.748 118.876 565.952 114.394 563.004 111.997 cv
545.27 119.456 li
556.339 127.985 li
cp
.940612 .760952 .191134 .0482185 cmyk
f
528.193 242.169 mo
381.017 157.197 li
376.854 154.793 374.451 148.417 375.65 142.956 cv
399.623 33.8344 li
400.823 28.3735 405.171 25.895 409.334 28.2993 cv
556.51 113.271 li
560.674 115.675 563.076 122.05 561.876 127.511 cv
537.904 236.633 li
536.704 242.094 532.356 244.573 528.193 242.169 cv
cp
.147219 .0154116 0 0 cmyk
f
525.003 234.052 mo
386.586 154.177 li
382.776 151.977 380.578 146.143 381.676 141.146 cv
403.612 41.2905 li
404.711 36.2924 408.688 34.0248 412.499 36.2241 cv
550.915 116.1 li
554.725 118.299 556.924 124.134 555.826 129.131 cv
533.889 228.987 li
532.791 233.984 528.813 236.252 525.003 234.052 cv
cp
0 0 0 0 cmyk
f
525.003 234.052 mo
386.586 154.177 li
382.776 151.977 380.578 146.143 381.676 141.146 cv
403.612 41.2905 li
404.711 36.2924 408.688 34.0248 412.499 36.2241 cv
550.915 116.1 li
554.725 118.299 556.924 124.134 555.826 129.131 cv
533.889 228.987 li
532.791 233.984 528.813 236.252 525.003 234.052 cv
cp
f
530.225 245.87 mo
510.107 243.213 li
380.241 168.236 li
376.078 165.831 368.806 166.133 363.998 168.909 cv
271.976 222.018 li
259.811 220.413 li
259.811 227.314 li
259.823 227.316 li
259.744 228.911 260.652 230.446 262.616 231.58 cv
409.792 316.551 li
413.955 318.956 421.228 318.654 426.035 315.878 cv
526.251 258.038 li
528.956 256.477 530.304 254.465 530.225 252.576 cv
530.225 245.87 li
cp
1 .866484 .240818 .0951247 cmyk
f
432.648 198.493 mo
423.422 193.165 li
321.983 193.165 li
271.976 222.018 li
259.811 220.413 li
259.811 227.314 li
259.823 227.316 li
259.744 228.911 260.652 230.446 262.616 231.58 cv
409.792 316.551 li
411.992 317.822 415.061 318.33 418.175 318.122 cv
432.648 198.493 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
265.209 221.124 mo
259.811 220.413 li
259.811 227.314 li
259.823 227.316 li
259.744 228.911 260.652 230.446 262.616 231.58 cv
265.209 233.077 li
265.209 221.124 li
cp
.657221 .328313 0 0 cmyk
f
411.274 317.241 mo
415.221 318.737 420.862 318.411 425.075 316.383 cv
425.075 300.988 li
411.274 300.988 li
411.274 317.241 li
cp
.940612 .760952 .191134 .0482185 cmyk
f
409.792 309.658 mo
262.616 224.685 li
258.453 222.282 258.975 218.082 263.782 215.307 cv
363.998 157.467 li
368.806 154.691 376.078 154.39 380.241 156.793 cv
527.418 241.766 li
531.581 244.169 531.059 248.369 526.251 251.144 cv
426.035 308.984 li
421.228 311.76 413.955 312.061 409.792 309.658 cv
cp
.147219 .0154116 0 0 cmyk
f
325.212 196.554 mo
318.553 192.709 li
318.019 192.401 318.085 191.862 318.703 191.505 cv
326.563 186.967 li
327.18 186.611 328.114 186.573 328.648 186.881 cv
335.308 190.726 li
335.843 191.035 335.775 191.574 335.158 191.93 cv
327.298 196.468 li
326.681 196.825 325.747 196.864 325.212 196.554 cv
cp
1 .866484 .240818 .0951247 cmyk
f
335.496 202.492 mo
328.837 198.647 li
328.302 198.338 328.369 197.799 328.986 197.443 cv
336.847 192.905 li
337.464 192.548 338.397 192.509 338.933 192.819 cv
345.592 196.663 li
346.126 196.972 346.06 197.511 345.441 197.868 cv
337.582 202.406 li
336.964 202.762 336.03 202.8 335.496 202.492 cv
cp
f
345.779 208.429 mo
339.12 204.584 li
338.586 204.276 338.652 203.737 339.271 203.38 cv
347.13 198.842 li
347.747 198.486 348.682 198.447 349.216 198.755 cv
355.875 202.6 li
356.41 202.909 356.343 203.449 355.726 203.805 cv
347.865 208.342 li
347.248 208.699 346.314 208.738 345.779 208.429 cv
cp
f
360.002 203.526 mo
353.343 199.681 li
352.809 199.372 352.876 198.833 353.493 198.477 cv
360.091 194.667 li
360.708 194.311 361.643 194.272 362.177 194.581 cv
368.836 198.425 li
369.371 198.735 369.304 199.274 368.687 199.63 cv
362.088 203.44 li
361.471 203.796 360.537 203.834 360.002 203.526 cv
cp
f
370.286 209.463 mo
363.627 205.619 li
363.092 205.31 363.159 204.771 363.776 204.414 cv
370.375 200.605 li
370.992 200.248 371.926 200.209 372.461 200.518 cv
379.12 204.363 li
379.654 204.671 379.588 205.21 378.97 205.567 cv
372.372 209.376 li
371.755 209.733 370.82 209.772 370.286 209.463 cv
cp
f
380.569 215.401 mo
373.91 211.556 li
373.376 211.247 373.443 210.707 374.061 210.351 cv
380.658 206.542 li
381.275 206.186 382.21 206.147 382.744 206.456 cv
389.403 210.3 li
389.938 210.609 389.871 211.148 389.254 211.504 cv
382.655 215.314 li
382.038 215.67 381.104 215.709 380.569 215.401 cv
cp
f
390.854 221.337 mo
384.194 217.494 li
383.659 217.184 383.727 216.645 384.344 216.289 cv
390.942 212.479 li
391.56 212.122 392.493 212.084 393.028 212.393 cv
399.688 216.238 li
400.222 216.546 400.155 217.085 399.537 217.442 cv
392.939 221.251 li
392.322 221.608 391.388 221.647 390.854 221.337 cv
cp
f
401.137 227.275 mo
394.478 223.43 li
393.943 223.122 394.011 222.582 394.628 222.226 cv
401.226 218.416 li
401.843 218.06 402.777 218.022 403.312 218.331 cv
409.971 222.175 li
410.506 222.484 410.438 223.023 409.821 223.379 cv
403.223 227.189 li
402.605 227.545 401.672 227.583 401.137 227.275 cv
cp
f
411.421 233.212 mo
404.762 229.368 li
404.227 229.059 404.294 228.52 404.911 228.164 cv
411.51 224.354 li
412.127 223.997 413.061 223.958 413.596 224.267 cv
420.255 228.112 li
420.789 228.421 420.723 228.96 420.104 229.317 cv
413.507 233.125 li
412.89 233.482 411.955 233.521 411.421 233.212 cv
cp
f
421.704 239.15 mo
415.045 235.305 li
414.511 234.997 414.578 234.457 415.195 234.101 cv
421.793 230.291 li
422.41 229.935 423.345 229.896 423.879 230.205 cv
430.538 234.049 li
431.073 234.358 431.006 234.897 430.389 235.253 cv
423.79 239.063 li
423.173 239.419 422.239 239.458 421.704 239.15 cv
cp
f
431.988 245.087 mo
425.329 241.243 li
424.794 240.934 424.861 240.394 425.479 240.038 cv
432.077 236.229 li
432.694 235.872 433.628 235.833 434.163 236.142 cv
440.822 239.987 li
441.356 240.295 441.29 240.834 440.672 241.191 cv
434.074 245 li
433.457 245.357 432.522 245.396 431.988 245.087 cv
cp
f
442.271 251.024 mo
435.612 247.179 li
435.078 246.871 435.146 246.331 435.763 245.975 cv
442.36 242.165 li
442.978 241.809 443.912 241.771 444.446 242.08 cv
451.105 245.924 li
451.641 246.233 451.573 246.772 450.956 247.128 cv
444.357 250.938 li
443.74 251.294 442.807 251.332 442.271 251.024 cv
cp
f
452.556 256.961 mo
445.896 253.117 li
445.361 252.808 445.429 252.269 446.046 251.913 cv
452.645 248.103 li
453.262 247.747 454.195 247.708 454.73 248.017 cv
461.39 251.862 li
461.924 252.17 461.857 252.709 461.239 253.066 cv
454.642 256.875 li
454.024 257.232 453.09 257.27 452.556 256.961 cv
cp
f
375.154 200.715 mo
368.495 196.871 li
367.961 196.562 368.028 196.023 368.646 195.666 cv
375.243 191.857 li
375.86 191.5 376.795 191.461 377.329 191.77 cv
383.988 195.615 li
384.523 195.923 384.456 196.462 383.839 196.819 cv
377.24 200.628 li
376.623 200.985 375.689 201.024 375.154 200.715 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
364.718 194.689 mo
358.059 190.844 li
357.523 190.536 357.591 189.997 358.208 189.64 cv
364.807 185.831 li
365.424 185.474 366.357 185.435 366.893 185.745 cv
373.552 189.589 li
374.086 189.898 374.019 190.437 373.401 190.793 cv
366.804 194.603 li
366.187 194.959 365.252 194.997 364.718 194.689 cv
cp
f
354.264 188.654 mo
339.921 180.372 li
339.387 180.064 339.453 179.525 340.071 179.168 cv
346.669 175.359 li
347.286 175.002 348.221 174.964 348.755 175.273 cv
363.097 183.553 li
363.632 183.862 363.564 184.401 362.947 184.757 cv
356.35 188.567 li
355.731 188.923 354.798 188.962 354.264 188.654 cv
cp
1 .866484 .240818 .0951247 cmyk
f
361.57 181.313 mo
349.932 174.593 li
349.397 174.285 349.464 173.746 350.081 173.389 cv
356.68 169.58 li
357.297 169.223 358.23 169.184 358.766 169.493 cv
370.404 176.213 li
370.939 176.522 370.872 177.061 370.255 177.417 cv
363.656 181.227 li
363.039 181.583 362.105 181.622 361.57 181.313 cv
cp
f
385.438 206.652 mo
378.779 202.808 li
378.244 202.498 378.312 201.959 378.929 201.603 cv
385.527 197.793 li
386.145 197.437 387.078 197.399 387.613 197.707 cv
394.272 201.552 li
394.807 201.861 394.74 202.4 394.122 202.756 cv
387.524 206.566 li
386.907 206.922 385.973 206.961 385.438 206.652 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
395.722 212.589 mo
389.063 208.745 li
388.528 208.436 388.596 207.897 389.213 207.54 cv
395.811 203.731 li
396.428 203.374 397.362 203.336 397.896 203.645 cv
404.556 207.49 li
405.091 207.798 405.023 208.337 404.406 208.694 cv
397.808 212.503 li
397.19 212.86 396.257 212.898 395.722 212.589 cv
cp
1 .866484 .240818 .0951247 cmyk
f
406.006 218.527 mo
399.347 214.682 li
398.812 214.373 398.879 213.834 399.496 213.478 cv
406.095 209.668 li
406.712 209.312 407.646 209.273 408.181 209.581 cv
414.84 213.426 li
415.374 213.736 415.308 214.275 414.689 214.631 cv
408.092 218.44 li
407.475 218.796 406.54 218.835 406.006 218.527 cv
cp
f
416.289 224.464 mo
409.63 220.62 li
409.096 220.311 409.163 219.772 409.78 219.415 cv
416.378 215.606 li
416.995 215.249 417.93 215.21 418.464 215.519 cv
425.123 219.364 li
425.658 219.672 425.591 220.211 424.974 220.568 cv
418.375 224.377 li
417.758 224.734 416.824 224.773 416.289 224.464 cv
cp
f
426.573 230.402 mo
419.914 226.557 li
419.379 226.248 419.446 225.708 420.063 225.352 cv
426.662 221.543 li
427.279 221.187 428.213 221.148 428.748 221.456 cv
435.407 225.301 li
435.941 225.61 435.875 226.149 435.257 226.505 cv
428.659 230.315 li
428.042 230.671 427.107 230.71 426.573 230.402 cv
cp
f
436.856 236.338 mo
430.197 232.494 li
429.663 232.185 429.73 231.646 430.348 231.289 cv
436.945 227.48 li
437.563 227.123 438.497 227.085 439.031 227.394 cv
445.69 231.239 li
446.226 231.547 446.158 232.086 445.541 232.443 cv
438.942 236.252 li
438.325 236.609 437.392 236.648 436.856 236.338 cv
cp
f
447.141 242.276 mo
440.481 238.431 li
439.947 238.122 440.014 237.583 440.631 237.227 cv
447.229 233.417 li
447.847 233.061 448.78 233.023 449.315 233.331 cv
455.975 237.176 li
456.509 237.485 456.442 238.024 455.824 238.38 cv
449.227 242.19 li
448.609 242.546 447.675 242.584 447.141 242.276 cv
cp
f
457.424 248.213 mo
450.766 244.369 li
450.23 244.06 450.298 243.521 450.915 243.164 cv
457.513 239.355 li
458.131 238.998 459.064 238.959 459.599 239.268 cv
466.258 243.113 li
466.793 243.421 466.726 243.961 466.108 244.318 cv
459.51 248.126 li
458.893 248.483 457.959 248.522 457.424 248.213 cv
cp
f
467.708 254.151 mo
461.049 250.306 li
460.515 249.997 460.581 249.458 461.198 249.102 cv
467.797 245.292 li
468.414 244.936 469.348 244.897 469.883 245.206 cv
476.542 249.05 li
477.076 249.359 477.01 249.898 476.392 250.254 cv
469.794 254.064 li
469.177 254.42 468.242 254.459 467.708 254.151 cv
cp
f
485.99 264.706 mo
471.46 256.317 li
470.926 256.008 470.993 255.469 471.61 255.113 cv
478.208 251.303 li
478.826 250.947 479.76 250.909 480.294 251.217 cv
494.824 259.606 li
495.358 259.914 495.292 260.454 494.674 260.81 cv
488.076 264.62 li
487.459 264.976 486.524 265.014 485.99 264.706 cv
cp
f
506.011 253.147 mo
493.748 246.066 li
493.213 245.757 493.28 245.218 493.897 244.862 cv
500.495 241.052 li
501.113 240.696 502.047 240.658 502.581 240.966 cv
514.845 248.046 li
515.38 248.355 515.313 248.894 514.695 249.25 cv
508.097 253.06 li
507.479 253.416 506.546 253.456 506.011 253.147 cv
cp
f
403.447 205.491 mo
396.788 201.646 li
396.254 201.337 396.32 200.798 396.938 200.442 cv
403.536 196.632 li
404.153 196.276 405.087 196.237 405.622 196.545 cv
412.281 200.39 li
412.815 200.699 412.749 201.239 412.132 201.595 cv
405.533 205.404 li
404.916 205.76 403.982 205.799 403.447 205.491 cv
cp
f
392.908 199.406 mo
386.249 195.561 li
385.714 195.252 385.781 194.713 386.398 194.357 cv
392.996 190.547 li
393.614 190.191 394.548 190.152 395.083 190.46 cv
401.741 194.305 li
402.276 194.614 402.209 195.153 401.592 195.509 cv
394.994 199.319 li
394.376 199.675 393.442 199.714 392.908 199.406 cv
cp
f
382.368 193.321 mo
375.709 189.476 li
375.175 189.167 375.241 188.628 375.859 188.272 cv
382.457 184.462 li
383.074 184.106 384.009 184.067 384.543 184.375 cv
391.202 188.22 li
391.737 188.529 391.67 189.068 391.053 189.424 cv
384.454 193.234 li
383.837 193.59 382.903 193.629 382.368 193.321 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
371.829 187.236 mo
365.17 183.391 li
364.635 183.082 364.702 182.543 365.319 182.187 cv
371.918 178.377 li
372.535 178.021 373.469 177.982 374.004 178.29 cv
380.663 182.135 li
381.197 182.444 381.13 182.983 380.513 183.339 cv
373.915 187.149 li
373.298 187.505 372.363 187.544 371.829 187.236 cv
cp
1 .866484 .240818 .0951247 cmyk
f
413.731 211.428 mo
407.072 207.583 li
406.537 207.275 406.604 206.736 407.222 206.379 cv
413.819 202.57 li
414.438 202.213 415.371 202.174 415.905 202.483 cv
422.564 206.328 li
423.1 206.636 423.032 207.175 422.415 207.532 cv
415.817 211.341 li
415.199 211.698 414.266 211.737 413.731 211.428 cv
cp
f
424.015 217.365 mo
417.355 213.521 li
416.821 213.211 416.888 212.672 417.506 212.316 cv
424.104 208.506 li
424.721 208.15 425.654 208.112 426.189 208.42 cv
432.849 212.265 li
433.383 212.574 433.316 213.113 432.699 213.469 cv
426.101 217.279 li
425.483 217.635 424.55 217.674 424.015 217.365 cv
cp
f
434.299 223.302 mo
427.64 219.457 li
427.104 219.149 427.172 218.61 427.789 218.253 cv
434.387 214.444 li
435.005 214.087 435.938 214.049 436.474 214.358 cv
443.132 218.203 li
443.667 218.511 443.6 219.05 442.982 219.407 cv
436.385 223.216 li
435.767 223.573 434.833 223.611 434.299 223.302 cv
cp
f
444.582 229.24 mo
437.923 225.395 li
437.389 225.086 437.455 224.547 438.073 224.191 cv
444.671 220.381 li
445.288 220.025 446.223 219.986 446.757 220.295 cv
453.416 224.139 li
453.95 224.449 453.884 224.988 453.267 225.344 cv
446.668 229.154 li
446.051 229.51 445.117 229.548 444.582 229.24 cv
cp
f
454.866 235.177 mo
448.207 231.332 li
447.672 231.024 447.739 230.485 448.356 230.128 cv
454.954 226.319 li
455.572 225.962 456.506 225.923 457.041 226.232 cv
463.699 230.077 li
464.234 230.385 464.167 230.924 463.55 231.281 cv
456.952 235.09 li
456.334 235.447 455.4 235.486 454.866 235.177 cv
cp
f
465.149 241.115 mo
458.49 237.27 li
457.956 236.961 458.022 236.421 458.641 236.065 cv
465.238 232.256 li
465.855 231.9 466.79 231.861 467.324 232.169 cv
473.983 236.014 li
474.518 236.323 474.451 236.862 473.834 237.218 cv
467.235 241.028 li
466.618 241.384 465.685 241.423 465.149 241.115 cv
cp
f
475.434 247.051 mo
468.774 243.207 li
468.239 242.898 468.307 242.359 468.924 242.002 cv
475.522 238.193 li
476.14 237.836 477.073 237.798 477.608 238.107 cv
484.267 241.952 li
484.802 242.26 484.734 242.799 484.117 243.156 cv
477.52 246.965 li
476.901 247.322 475.968 247.361 475.434 247.051 cv
cp
f
485.717 252.989 mo
479.058 249.144 li
478.523 248.835 478.59 248.296 479.208 247.94 cv
485.806 244.13 li
486.423 243.774 487.357 243.736 487.892 244.044 cv
494.551 247.889 li
495.085 248.198 495.019 248.737 494.401 249.093 cv
487.803 252.903 li
487.186 253.259 486.252 253.297 485.717 252.989 cv
cp
f
496.001 258.926 mo
489.342 255.081 li
488.807 254.773 488.874 254.234 489.491 253.877 cv
496.09 250.068 li
496.707 249.711 497.641 249.672 498.176 249.981 cv
504.834 253.826 li
505.369 254.134 505.302 254.674 504.685 255.031 cv
498.087 258.839 li
497.469 259.196 496.535 259.235 496.001 258.926 cv
cp
f
398.032 190.805 mo
391.373 186.96 li
390.839 186.652 390.905 186.113 391.523 185.756 cv
398.121 181.947 li
398.738 181.59 399.673 181.551 400.207 181.86 cv
406.866 185.705 li
407.4 186.013 407.334 186.553 406.717 186.91 cv
400.118 190.718 li
399.501 191.075 398.567 191.114 398.032 190.805 cv
cp
f
387.8 184.897 mo
381.141 181.052 li
380.606 180.744 380.673 180.205 381.29 179.848 cv
387.889 176.039 li
388.506 175.682 389.439 175.644 389.975 175.953 cv
396.634 179.797 li
397.168 180.106 397.102 180.645 396.483 181.001 cv
389.886 184.811 li
389.269 185.167 388.335 185.206 387.8 184.897 cv
cp
f
377.567 178.99 mo
370.908 175.145 li
370.373 174.836 370.44 174.297 371.058 173.941 cv
377.656 170.131 li
378.273 169.775 379.207 169.736 379.742 170.044 cv
386.401 173.889 li
386.936 174.198 386.869 174.737 386.251 175.093 cv
379.653 178.903 li
379.036 179.259 378.102 179.298 377.567 178.99 cv
cp
f
367.335 173.081 mo
360.676 169.237 li
360.141 168.928 360.208 168.389 360.825 168.033 cv
367.424 164.223 li
368.041 163.867 368.975 163.829 369.51 164.137 cv
376.169 167.982 li
376.703 168.29 376.636 168.83 376.019 169.186 cv
369.421 172.996 li
368.804 173.352 367.869 173.39 367.335 173.081 cv
cp
f
377.856 167.007 mo
371.198 163.163 li
370.663 162.853 370.73 162.314 371.348 161.957 cv
373.528 160.699 li
374.146 160.342 375.08 160.303 375.614 160.612 cv
382.273 164.456 li
382.809 164.765 382.741 165.304 382.124 165.661 cv
379.942 166.92 li
379.325 167.277 378.392 167.316 377.856 167.007 cv
cp
f
391.21 174.716 mo
384.551 170.872 li
384.017 170.563 384.084 170.024 384.701 169.667 cv
386.882 168.408 li
387.5 168.051 388.434 168.013 388.968 168.322 cv
395.627 172.166 li
396.162 172.475 396.095 173.014 395.478 173.371 cv
393.296 174.63 li
392.679 174.987 391.745 175.025 391.21 174.716 cv
cp
f
401.4 180.6 mo
394.741 176.755 li
394.206 176.446 394.273 175.907 394.891 175.55 cv
397.072 174.291 li
397.689 173.935 398.623 173.896 399.158 174.205 cv
405.817 178.049 li
406.352 178.358 406.285 178.897 405.667 179.253 cv
403.486 180.513 li
402.869 180.87 401.935 180.909 401.4 180.6 cv
cp
f
411.59 186.483 mo
404.931 182.638 li
404.396 182.33 404.464 181.79 405.081 181.434 cv
407.262 180.174 li
407.879 179.818 408.813 179.78 409.348 180.088 cv
416.007 183.933 li
416.542 184.242 416.475 184.781 415.857 185.137 cv
413.676 186.396 li
413.059 186.752 412.125 186.791 411.59 186.483 cv
cp
f
421.78 192.366 mo
415.121 188.521 li
414.586 188.212 414.653 187.673 415.271 187.317 cv
417.452 186.057 li
418.069 185.701 419.003 185.663 419.538 185.971 cv
426.197 189.816 li
426.731 190.124 426.665 190.664 426.047 191.02 cv
423.866 192.28 li
423.249 192.636 422.314 192.674 421.78 192.366 cv
cp
f
478.669 225.21 mo
472.01 221.366 li
471.475 221.057 471.542 220.518 472.159 220.162 cv
474.341 218.902 li
474.958 218.545 475.892 218.507 476.427 218.816 cv
483.086 222.661 li
483.62 222.969 483.553 223.508 482.936 223.865 cv
480.755 225.124 li
480.138 225.481 479.203 225.519 478.669 225.21 cv
cp
f
488.858 231.093 mo
482.199 227.249 li
481.665 226.94 481.731 226.401 482.35 226.044 cv
484.53 224.786 li
485.147 224.429 486.082 224.39 486.616 224.699 cv
493.275 228.543 li
493.811 228.852 493.743 229.391 493.126 229.747 cv
490.944 231.007 li
490.327 231.364 489.394 231.403 488.858 231.093 cv
cp
f
499.049 236.977 mo
492.39 233.132 li
491.854 232.824 491.922 232.285 492.539 231.928 cv
494.721 230.668 li
495.338 230.312 496.271 230.273 496.807 230.582 cv
503.466 234.426 li
504 234.736 503.933 235.275 503.315 235.631 cv
501.135 236.89 li
500.517 237.247 499.583 237.286 499.049 236.977 cv
cp
f
509.238 242.86 mo
502.579 239.015 li
502.045 238.706 502.111 238.167 502.729 237.811 cv
504.91 236.551 li
505.527 236.195 506.462 236.157 506.996 236.465 cv
513.655 240.31 li
514.19 240.619 514.123 241.158 513.506 241.514 cv
511.324 242.774 li
510.707 243.13 509.773 243.168 509.238 242.86 cv
cp
f
408.316 196.743 mo
401.657 192.898 li
401.122 192.589 401.189 192.05 401.807 191.694 cv
408.404 187.884 li
409.022 187.528 409.956 187.489 410.491 187.797 cv
417.149 191.642 li
417.685 191.951 417.617 192.49 417 192.846 cv
410.402 196.656 li
409.784 197.012 408.851 197.051 408.316 196.743 cv
cp
f
418.6 202.679 mo
411.94 198.835 li
411.406 198.526 411.473 197.987 412.091 197.63 cv
418.688 193.821 li
419.306 193.464 420.24 193.426 420.774 193.735 cv
427.434 197.58 li
427.968 197.888 427.901 198.427 427.284 198.784 cv
420.686 202.593 li
420.068 202.95 419.135 202.989 418.6 202.679 cv
cp
f
428.884 208.617 mo
422.225 204.772 li
421.689 204.463 421.757 203.924 422.374 203.568 cv
428.973 199.758 li
429.59 199.402 430.523 199.364 431.059 199.672 cv
437.717 203.517 li
438.252 203.826 438.185 204.365 437.567 204.721 cv
430.97 208.531 li
430.352 208.887 429.418 208.925 428.884 208.617 cv
cp
f
439.167 214.554 mo
432.508 210.709 li
431.974 210.401 432.04 209.862 432.658 209.505 cv
439.256 205.696 li
439.873 205.339 440.808 205.3 441.342 205.61 cv
448.001 209.454 li
448.535 209.763 448.469 210.302 447.852 210.659 cv
441.253 214.468 li
440.636 214.825 439.702 214.863 439.167 214.554 cv
cp
f
449.451 220.492 mo
442.792 216.647 li
442.257 216.338 442.324 215.799 442.941 215.443 cv
449.54 211.633 li
450.157 211.277 451.091 211.238 451.626 211.546 cv
458.284 215.391 li
458.819 215.7 458.752 216.239 458.135 216.595 cv
451.537 220.405 li
450.919 220.761 449.985 220.8 449.451 220.492 cv
cp
f
459.734 226.429 mo
453.075 222.584 li
452.541 222.276 452.607 221.736 453.226 221.379 cv
459.823 217.571 li
460.44 217.214 461.375 217.175 461.909 217.484 cv
468.568 221.329 li
469.104 221.637 469.036 222.176 468.419 222.533 cv
461.82 226.342 li
461.203 226.699 460.27 226.738 459.734 226.429 cv
cp
f
470.019 232.366 mo
463.359 228.522 li
462.824 228.212 462.892 227.673 463.509 227.317 cv
470.107 223.507 li
470.725 223.151 471.658 223.113 472.193 223.421 cv
478.853 227.266 li
479.387 227.575 479.319 228.114 478.702 228.47 cv
472.104 232.28 li
471.486 232.636 470.553 232.675 470.019 232.366 cv
cp
f
480.302 238.303 mo
473.643 234.458 li
473.108 234.15 473.175 233.611 473.793 233.254 cv
480.391 229.445 li
481.008 229.088 481.942 229.05 482.477 229.359 cv
489.136 233.204 li
489.671 233.512 489.604 234.051 488.986 234.408 cv
482.388 238.217 li
481.771 238.574 480.837 238.612 480.302 238.303 cv
cp
f
490.586 244.241 mo
483.927 240.396 li
483.392 240.087 483.459 239.548 484.076 239.192 cv
490.675 235.382 li
491.292 235.026 492.226 234.987 492.761 235.295 cv
499.42 239.14 li
499.954 239.45 499.887 239.989 499.27 240.345 cv
492.672 244.154 li
492.055 244.51 491.12 244.549 490.586 244.241 cv
cp
f
349.522 197.475 mo
329.911 186.153 li
329.376 185.844 329.443 185.304 330.061 184.948 cv
336.658 181.139 li
337.276 180.783 338.21 180.744 338.744 181.052 cv
358.356 192.375 li
358.891 192.684 358.824 193.223 358.207 193.58 cv
351.608 197.389 li
350.991 197.746 350.058 197.784 349.522 197.475 cv
cp
f
475.86 270.416 mo
456.248 259.093 li
455.714 258.785 455.78 258.246 456.398 257.889 cv
462.996 254.08 li
463.613 253.723 464.548 253.685 465.082 253.994 cv
484.694 265.316 li
485.229 265.624 485.162 266.164 484.544 266.521 cv
477.946 270.33 li
477.329 270.686 476.395 270.725 475.86 270.416 cv
cp
f
434.734 259.788 mo
428.075 255.943 li
427.54 255.634 427.607 255.095 428.225 254.739 cv
436.085 250.201 li
436.702 249.844 437.637 249.805 438.171 250.114 cv
444.83 253.958 li
445.364 254.267 445.298 254.806 444.681 255.163 cv
436.82 259.701 li
436.203 260.057 435.269 260.096 434.734 259.788 cv
cp
f
360.054 216.67 mo
349.404 210.522 li
348.869 210.213 348.937 209.674 349.554 209.318 cv
357.414 204.78 li
358.031 204.423 358.965 204.384 359.5 204.693 cv
370.149 210.841 li
370.685 211.15 370.617 211.69 370 212.046 cv
362.14 216.584 li
361.522 216.941 360.589 216.979 360.054 216.67 cv
cp
f
424.826 254.067 mo
414.176 247.917 li
413.642 247.609 413.708 247.07 414.326 246.713 cv
422.186 242.175 li
422.803 241.819 423.737 241.781 424.271 242.089 cv
434.922 248.238 li
435.456 248.546 435.39 249.085 434.771 249.442 cv
426.912 253.98 li
426.294 254.336 425.36 254.375 424.826 254.067 cv
cp
f
374.891 225.237 mo
364.241 219.088 li
363.706 218.78 363.773 218.24 364.391 217.883 cv
372.251 213.346 li
372.868 212.99 373.803 212.951 374.337 213.259 cv
384.986 219.408 li
385.521 219.716 385.454 220.255 384.837 220.612 cv
376.977 225.15 li
376.359 225.506 375.426 225.545 374.891 225.237 cv
cp
f
374.409 213.301 mo
420.711 240.034 li
421.286 240.366 421.286 240.903 420.711 241.235 cv
412.696 245.863 li
412.122 246.194 411.19 246.194 410.615 245.863 cv
364.313 219.129 li
374.409 213.301 li
cp
f
463.476 270.552 mo
470.894 274.834 li
471.331 275.087 471.276 275.53 470.771 275.822 cv
467.555 277.678 li
467.049 277.97 466.283 278.002 465.845 277.749 cv
458.428 273.466 li
457.989 273.213 458.044 272.772 458.551 272.48 cv
461.766 270.623 li
462.271 270.331 463.037 270.299 463.476 270.552 cv
cp
f
453.106 264.566 mo
460.524 268.848 li
460.962 269.101 460.907 269.543 460.401 269.835 cv
457.186 271.692 li
456.68 271.984 455.914 272.016 455.477 271.762 cv
448.059 267.48 li
447.62 267.227 447.676 266.785 448.182 266.493 cv
451.396 264.636 li
451.902 264.344 452.668 264.313 453.106 264.566 cv
cp
f
442.823 258.628 mo
450.24 262.911 li
450.679 263.164 450.624 263.606 450.117 263.898 cv
446.902 265.754 li
446.396 266.046 445.631 266.079 445.192 265.826 cv
437.775 261.542 li
437.337 261.289 437.392 260.848 437.897 260.556 cv
441.113 258.7 li
441.619 258.407 442.385 258.375 442.823 258.628 cv
cp
f
458.785 261.287 mo
466.203 265.57 li
466.642 265.823 466.586 266.264 466.08 266.557 cv
462.865 268.414 li
462.358 268.706 461.594 268.737 461.155 268.484 cv
453.737 264.202 li
453.299 263.949 453.354 263.506 453.86 263.214 cv
457.075 261.358 li
457.582 261.066 458.348 261.034 458.785 261.287 cv
cp
f
310.74 166.464 mo
310.74 166.464 311.234 176.658 312.01 183.507 cv
312.786 190.358 329.284 178.246 329.284 178.246 cv
329.284 170.447 li
310.74 166.464 li
cp
.743191 .853178 0 0 cmyk
f
319.527 293.284 mo
319.775 293.904 324.05 299.108 328.324 300.409 cv
330.183 300.974 331.433 301.047 332.251 300.951 cv
333.073 300.853 333.581 300.005 333.304 299.226 cv
332.567 297.156 330.459 292.842 325.103 290.187 cv
317.854 286.593 319.527 293.284 319.527 293.284 cv
cp
1 .866484 .240818 .0951247 cmyk
f
318.103 295.283 mo
318.103 295.283 319.713 299.062 320.209 302.221 cv
320.511 304.149 319.453 306.652 318.582 308.312 cv
318.042 309.341 316.672 309.573 315.811 308.791 cv
314.413 307.524 312.635 305.322 312.341 302.16 cv
311.846 296.831 312.341 295.903 312.341 295.903 cv
318.103 295.283 li
cp
f
307.805 230.889 mo
307.805 230.889 307.247 237.61 307.805 245.043 cv
308.362 252.478 310.358 287.244 310.73 295.607 cv
310.73 295.607 310.544 298.139 315.446 297.581 cv
320.348 297.024 319.953 294.213 319.953 294.213 cv
319.953 294.213 326.837 294.121 327.054 290.063 cv
327.271 286.005 334.104 241.607 334.104 225.645 cv
307.805 230.889 li
cp
.0114137 .138521 .731472 0 cmyk
f
336.651 196.14 mo
340.024 201.364 li
351.618 215.368 li
351.618 215.368 351.22 216.666 349.776 217.007 cv
348.648 217.273 338.897 207.969 334.687 203.887 cv
333.567 202.803 333.381 201.077 334.242 199.778 cv
336.651 196.14 li
cp
0 .286015 .250584 0 cmyk
f
330.071 174.698 mo
330.071 174.698 335.43 174.559 337.295 182.302 cv
339.16 190.045 340.619 199.741 338.996 200.546 cv
334.127 202.965 331.045 200.134 331.045 200.134 cv
330.071 174.698 li
cp
.634821 .805264 0 0 cmyk
f
331.675 175.027 mo
330.761 174.645 329.735 174.594 328.783 174.868 cv
324.219 176.178 307.056 181.215 304.228 183.633 cv
300.959 186.426 309.128 202.123 309.011 207.269 cv
308.893 212.415 308.313 218.483 307.858 224.078 cv
307.403 229.672 306.788 232.74 311.364 235.118 cv
315.939 237.497 323.753 237.606 329.602 233.15 cv
335.449 228.694 334.389 225.644 334.146 222.41 cv
333.902 219.174 331.91 205.182 332.083 201.21 cv
332.083 201.21 334.144 199.692 335.67 197.088 cv
337.196 194.485 334.5 189.7 333.381 186.588 cv
332.262 183.477 334.013 179.919 333.666 177.381 cv
333.487 176.075 332.653 175.435 331.675 175.027 cv
cp
.587366 .778347 0 0 cmyk
f
326.188 180.377 mo
326.551 183.205 323.957 185.867 320.396 186.323 cv
316.835 186.779 313.654 184.857 313.292 182.03 cv
312.931 179.203 315.523 176.541 319.085 176.085 cv
322.646 175.628 325.826 177.551 326.188 180.377 cv
cp
0 0 0 0 cmyk
f
324.349 180.614 mo
324.607 182.634 322.754 184.537 320.209 184.862 cv
317.664 185.188 315.391 183.815 315.132 181.794 cv
314.873 179.774 316.727 177.872 319.271 177.545 cv
321.817 177.219 324.09 178.593 324.349 180.614 cv
cp
0 .286015 .250584 0 cmyk
f
321.819 173.979 mo
321.819 173.979 318.722 171.431 318.113 172.722 cv
317.504 174.012 317.003 179.55 317.003 179.55 cv
323.155 181.204 li
322.222 175.592 li
322.222 175.592 323.453 174.548 321.819 173.979 cv
cp
f
331.436 167.911 mo
331.136 172.975 326.788 176.838 321.723 176.539 cv
316.658 176.24 312.795 171.892 313.094 166.827 cv
313.394 161.762 317.741 157.899 322.807 158.199 cv
327.871 158.497 331.734 162.846 331.436 167.911 cv
cp
f
317.684 174.328 mo
317.629 174.617 317.577 174.926 317.527 175.244 cv
318.146 178.439 322.928 179.838 322.928 179.838 cv
322.222 175.592 li
322.222 175.592 322.801 175.101 322.637 174.608 cv
320.747 174.011 318.365 173.483 317.684 174.328 cv
cp
.0520027 .456916 .352453 0 cmyk
f
331.436 167.911 mo
331.136 172.975 326.788 176.838 321.723 176.539 cv
316.658 176.24 312.795 171.892 313.094 166.827 cv
313.394 161.762 317.741 157.899 322.807 158.199 cv
327.871 158.497 331.734 162.846 331.436 167.911 cv
cp
0 .286015 .250584 0 cmyk
f
299.63 206.254 mo
300.659 230.837 li
304.253 231.208 li
306.592 209.079 li
299.63 206.254 li
cp
f
311.441 204.2 mo
310.252 198.951 307.902 187.353 307.902 187.353 cv
306.898 198.888 li
308.057 202.309 309.052 205.45 309.011 207.269 cv
308.941 210.289 308.712 213.629 308.443 217.002 cv
308.443 217.012 li
308.443 217.012 312.631 209.45 311.441 204.2 cv
cp
.634821 .805264 0 0 cmyk
f
304.914 183.129 mo
304.914 183.129 302.04 184.227 300.414 193.054 cv
298.787 201.881 297.571 210.724 300.47 211.864 cv
303.37 213.002 305.793 213.86 306.646 211.498 cv
307.498 209.137 308.026 197.761 308.133 193.669 cv
308.24 189.579 308.396 183.938 304.914 183.129 cv
cp
.474891 .687251 0 0 cmyk
f
350.758 214.344 mo
350.758 214.344 352.314 214.915 353.439 216.141 cv
354.362 217.147 354.868 217.999 355.271 218.601 cv
356.166 219.936 356.921 222.823 356.376 223.182 cv
355.83 223.541 352.708 218.349 352.204 219.557 cv
351.701 220.765 352.209 221.881 351.563 221.899 cv
350.918 221.917 348.675 216.68 346.91 215.056 cv
345.146 213.432 350.758 214.344 350.758 214.344 cv
cp
0 .286015 .250584 0 cmyk
f
319.953 294.213 mo
319.953 294.213 320.807 294.201 321.92 294.009 cv
323.268 239.967 li
319.953 294.213 li
cp
.134188 .51693 .984039 .0105287 cmyk
f
314.751 265.021 mo
312.839 262.525 li
292.729 250.881 li
292.084 250.508 291.563 249.508 291.563 248.648 cv
291.581 232.184 li
290.425 230.674 li
291.511 230.045 li
291.512 230.046 li
291.72 229.913 291.997 229.915 292.301 230.092 cv
315.092 243.288 li
315.736 243.661 316.258 244.661 316.257 245.521 cv
316.237 263.452 li
316.237 263.935 316.071 264.272 315.812 264.407 cv
314.751 265.021 li
cp
.587366 .778347 0 0 cmyk
f
300.844 255.581 mo
299.416 254.753 li
291.573 241.13 li
291.581 232.184 li
290.425 230.674 li
291.511 230.045 li
291.512 230.046 li
291.72 229.913 291.997 229.915 292.301 230.092 cv
315.092 243.288 li
315.433 243.485 315.737 243.857 315.95 244.291 cv
300.844 255.581 li
cp
.238346 .384222 0 0 cmyk
f
290.938 231.344 mo
290.425 230.674 li
291.511 230.045 li
291.512 230.046 li
291.72 229.913 291.997 229.915 292.301 230.092 cv
292.703 230.325 li
290.938 231.344 li
cp
f
315.299 243.433 mo
315.805 243.847 316.197 244.63 316.251 245.353 cv
314.023 246.638 li
312.956 244.785 li
315.299 243.433 li
cp
.587366 .778347 0 0 cmyk
f
314.006 243.915 mo
291.215 230.72 li
290.571 230.347 290.047 230.742 290.046 231.602 cv
290.027 249.533 li
290.026 250.393 290.548 251.393 291.192 251.766 cv
313.983 264.961 li
314.628 265.334 315.151 264.94 315.152 264.08 cv
315.172 246.149 li
315.173 245.289 314.65 244.289 314.006 243.915 cv
cp
.474891 .687251 0 0 cmyk
f
300.688 230.632 mo
300.688 230.632 299.737 236.37 299.88 238.208 cv
300.023 240.046 301.007 243.078 301.754 243.013 cv
302.5 242.949 301.778 235.622 303.09 236.352 cv
304.4 237.082 304.538 238.333 305.132 237.892 cv
305.726 237.45 304.097 231.187 304.531 228.472 cv
304.966 225.756 300.688 230.632 300.688 230.632 cv
cp
0 .286015 .250584 0 cmyk
f
325.793 168.17 mo
330.401 169.808 331.299 168.809 331.343 168.755 cv
331.385 168.478 331.418 168.197 331.436 167.911 cv
331.495 166.893 331.381 165.908 331.129 164.975 cv
319.173 163.361 li
319.173 163.361 321.061 166.49 325.793 168.17 cv
cp
.0520027 .456916 .352453 0 cmyk
f
331.767 158.758 mo
330.68 157.828 326.761 153.224 319.74 154.311 cv
315.353 154.99 311.654 157.983 310.834 164.811 cv
310.28 169.412 311.97 173.943 315.08 177.292 cv
315.248 177.215 315.423 177.143 315.579 177.04 cv
317.337 175.883 317.526 175.247 317.526 175.241 cv
317.915 171.756 li
317.902 171.262 317.532 170.822 317.039 170.791 cv
316.657 170.767 316.193 170.583 315.753 170.007 cv
314.744 168.688 315.21 166.632 317.227 166.555 cv
318.28 166.514 318.688 165.944 318.838 165.409 cv
318.968 164.943 319.459 164.684 319.914 164.849 cv
322.208 165.679 327.861 167.469 331.501 166.438 cv
336.155 165.12 332.853 159.689 331.767 158.758 cv
cp
.743191 .853178 0 0 cmyk
f
326.531 172.321 mo
329.341 171.548 li
329.341 171.548 328 173.659 326.041 174.197 cv
324.082 174.735 323.777 173.077 323.777 173.077 cv
326.531 172.321 li
cp
0 0 0 0 cmyk
f
305.466 237.713 mo
303.07 236.343 li
303.971 237.811 li
305.181 238.258 li
305.466 237.713 li
cp
.238346 .384222 0 0 cmyk
f
369.884 313.28 mo
369.884 313.28 366.863 311.756 365.008 314.024 cv
363.153 316.292 360.501 321.647 360.419 325.265 cv
360.337 328.883 363.282 328.639 365.033 327.783 cv
366.784 326.926 371.898 319.507 372.209 318.053 cv
372.519 316.6 371.844 314.634 371.352 314.249 cv
370.859 313.865 369.884 313.28 369.884 313.28 cv
cp
1 .866484 .240818 .0951247 cmyk
f
370.543 312.551 mo
370.683 315.681 li
370.713 316.346 370.378 316.98 369.799 317.309 cv
369.271 317.608 368.505 317.837 367.469 317.671 cv
365.193 317.305 364.99 316.656 364.827 313.527 cv
364.665 310.398 370.543 312.551 370.543 312.551 cv
cp
.0860304 .38764 1 0 cmyk
f
358.827 307.262 mo
358.827 307.262 355.807 305.739 353.951 308.007 cv
352.096 310.275 349.444 315.63 349.362 319.247 cv
349.28 322.866 352.226 322.622 353.977 321.766 cv
355.728 320.91 360.842 313.49 361.151 312.037 cv
361.461 310.582 360.786 308.617 360.294 308.232 cv
359.802 307.848 358.827 307.262 358.827 307.262 cv
cp
1 .866484 .240818 .0951247 cmyk
f
359.486 306.535 mo
359.626 309.664 li
359.655 310.33 359.321 310.963 358.741 311.291 cv
358.214 311.591 357.447 311.821 356.411 311.654 cv
354.136 311.289 353.933 310.638 353.771 307.509 cv
353.607 304.38 359.486 306.535 359.486 306.535 cv
cp
.0860304 .38764 1 0 cmyk
f
386.439 249.08 mo
385.545 234.533 370.686 251.219 370.686 251.219 cv
360.516 261.188 li
351.357 271.248 li
349.568 273.213 348.736 275.866 349.082 278.5 cv
352.787 306.71 li
352.97 308.103 354.162 309.13 355.567 309.12 cv
355.964 309.117 356.419 309.081 356.939 308.999 cv
360.244 308.485 360.001 305.342 360.001 305.342 cv
359.323 278.958 li
378.557 267.364 li
378.557 267.364 387.333 263.625 386.439 249.08 cv
cp
.0114137 .138521 .731472 0 cmyk
f
397.496 254.622 mo
396.603 240.075 381.742 256.762 381.742 256.762 cv
371.572 266.73 li
362.414 276.79 li
360.626 278.755 359.794 281.409 360.14 284.042 cv
363.844 312.252 li
364.027 313.646 365.219 314.673 366.624 314.662 cv
367.021 314.659 367.476 314.622 367.997 314.541 cv
371.302 314.027 371.058 310.884 371.058 310.884 cv
370.381 284.5 li
389.613 272.907 li
389.613 272.907 398.39 269.168 397.496 254.622 cv
cp
f
388.705 207.927 mo
399.971 212.597 399.745 219.256 399.745 219.256 cv
399.745 219.256 397.538 243.67 398.291 259.975 cv
398.606 266.791 362.077 267.312 367.525 249.127 cv
373.948 227.686 371.541 210.329 374.548 207.711 cv
377.555 205.093 385.791 206.718 388.705 207.927 cv
cp
.587366 .778347 0 0 cmyk
f
392.33 213.831 mo
391.74 216.119 388.743 217.325 385.636 216.524 cv
382.528 215.723 380.487 213.22 381.076 210.933 cv
381.665 208.645 384.662 207.44 387.77 208.241 cv
390.877 209.041 392.919 211.544 392.33 213.831 cv
cp
0 .286015 .250584 0 cmyk
f
385.845 208.53 mo
385.075 208.53 384.338 208.664 383.68 208.928 cv
382.578 209.372 381.839 210.131 381.598 211.067 cv
381.084 213.063 382.956 215.277 385.771 216.002 cv
388.58 216.727 391.293 215.694 391.809 213.697 cv
392.322 211.702 390.45 209.488 387.635 208.762 cv
387.034 208.607 386.43 208.53 385.845 208.53 cv
cp
387.537 217.307 mo
386.877 217.307 386.191 217.223 385.501 217.045 cv
382.111 216.172 379.893 213.37 380.555 210.798 cv
380.883 209.522 381.851 208.503 383.277 207.929 cv
384.647 207.377 386.29 207.303 387.904 207.719 cv
391.294 208.593 393.514 211.395 392.852 213.966 cv
392.323 216.014 390.124 217.307 387.537 217.307 cv
cp
0 0 0 0 cmyk
f
384.188 207.418 mo
384.188 207.418 384.285 207.871 384.091 211.441 cv
384.029 212.563 387.959 213.611 388.975 212.595 cv
389.99 211.58 389.584 210.523 389.828 206.704 cv
390.072 202.884 384.188 207.418 384.188 207.418 cv
cp
0 .286015 .250584 0 cmyk
f
389.828 206.704 mo
389.828 206.704 388.86 210.245 384.09 211.603 cv
384.162 208.384 li
389.828 206.704 li
cp
.0520027 .456916 .352453 0 cmyk
f
392.851 197.706 mo
394.049 202.342 391.262 207.073 386.625 208.272 cv
381.988 209.471 377.258 206.684 376.059 202.047 cv
374.86 197.411 377.647 192.679 382.284 191.481 cv
386.921 190.282 391.651 193.069 392.851 197.706 cv
cp
0 .286015 .250584 0 cmyk
f
386.446 200.195 mo
386.446 200.195 381.672 202.24 378.366 202.263 cv
375.06 202.287 375.788 199.518 375.788 199.518 cv
385.602 198.1 li
386.446 200.195 li
cp
.0520027 .456916 .352453 0 cmyk
f
377.38 200.734 mo
377.38 200.734 381.539 198.968 385.188 199.704 cv
386.046 199.877 386.841 200.335 387.393 201.014 cv
387.573 201.236 387.802 201.439 388.061 201.497 cv
388.707 201.644 389.767 198.959 391.023 198.898 cv
392.281 198.837 393.121 199.727 392.09 201.378 cv
391.059 203.029 391.407 204.876 391.881 205.141 cv
392.355 205.407 397.388 201.552 392.949 192.759 cv
388.511 183.965 377.234 188.702 375.48 190.484 cv
375.48 190.484 373.633 192.093 372.131 190.661 cv
372.131 190.661 370.446 203.277 377.38 200.734 cv
cp
0 .912535 0 0 cmyk
f
393.426 237.093 mo
393.426 243.69 li
393.426 244.447 393.107 245.167 392.549 245.676 cv
378.996 258.032 li
380.536 260.386 li
398.355 248.144 li
399.191 247.539 399.729 246.606 399.838 245.58 cv
401.125 233.337 li
393.426 237.093 li
cp
0 .286015 .250584 0 cmyk
f
398.791 215.958 mo
398.791 215.958 402.902 222.141 404.435 238.416 cv
404.435 238.416 397.411 240.688 393.426 239.398 cv
389.439 238.109 398.791 215.958 398.791 215.958 cv
cp
.587366 .778347 0 0 cmyk
f
392.675 223.776 mo
392.675 223.776 391.065 232.39 390.974 236.439 cv
390.948 237.551 391.628 238.556 392.675 238.934 cv
392.675 223.776 li
cp
.743191 .853178 0 0 cmyk
f
389.158 266.61 mo
386.163 266.214 li
366.828 255.051 li
366.209 254.694 365.126 254.739 364.41 255.152 cv
350.709 263.059 li
348.898 262.82 li
348.898 264.622 li
348.9 264.622 li
348.888 264.861 349.023 265.088 349.315 265.257 cv
371.228 277.909 li
371.848 278.267 372.931 278.222 373.646 277.808 cv
388.567 269.197 li
388.97 268.964 389.17 268.664 389.158 268.383 cv
389.158 266.61 li
cp
1 .866484 .240818 .0951247 cmyk
f
374.631 259.556 mo
373.257 258.763 li
358.154 258.763 li
350.709 263.059 li
348.898 262.82 li
348.898 264.622 li
348.9 264.622 li
348.888 264.861 349.023 265.088 349.315 265.257 cv
371.228 277.909 li
371.556 278.098 372.013 278.173 372.477 278.143 cv
374.631 259.556 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
349.702 262.925 mo
348.898 262.82 li
348.898 264.622 li
348.9 264.622 li
348.888 264.861 349.023 265.088 349.315 265.257 cv
349.702 265.481 li
349.702 262.925 li
cp
.657221 .328313 0 0 cmyk
f
371.448 278.011 mo
372.036 278.234 372.876 278.186 373.504 277.883 cv
373.504 274.816 li
371.448 274.816 li
371.448 278.011 li
cp
.940612 .760952 .191134 .0482185 cmyk
f
371.228 276.107 mo
349.315 263.456 li
348.696 263.098 348.773 262.473 349.489 262.06 cv
364.41 253.448 li
365.126 253.035 366.209 252.99 366.828 253.348 cv
388.74 265.998 li
389.36 266.357 389.283 266.982 388.567 267.395 cv
373.646 276.006 li
372.931 276.419 371.848 276.464 371.228 276.107 cv
cp
0 0 0 0 cmyk
f
370.857 274.189 mo
352.638 263.67 li
352.122 263.372 352.187 262.853 352.782 262.509 cv
360.777 258.013 li
361.372 257.669 362.272 257.632 362.788 257.929 cv
381.008 268.449 li
381.523 268.747 381.459 269.266 380.863 269.61 cv
372.868 274.106 li
372.273 274.45 371.373 274.487 370.857 274.189 cv
cp
.147219 .0154116 0 0 cmyk
f
365.257 253.033 mo
365.03 254.544 li
364.837 255.832 364.871 257.145 365.129 258.421 cv
365.399 259.753 li
365.551 260.505 366.146 261.088 366.9 261.225 cv
367.489 261.332 368.046 260.918 368.112 260.324 cv
368.474 257.091 li
368.474 257.091 369.301 258.175 369.7 258.175 cv
370.1 258.175 369.254 254.938 368.351 253.106 cv
367.447 251.274 365.257 253.033 365.257 253.033 cv
cp
0 .286015 .250584 0 cmyk
f
372.685 229.003 mo
370.334 233.657 li
369.777 234.757 369.45 235.958 369.371 237.189 cv
368.351 253.106 li
365.257 253.033 li
363.854 235.158 li
363.81 234.606 363.837 234.05 363.934 233.505 cv
365.537 224.441 li
372.685 229.003 li
cp
f
370.485 277.322 mo
368.648 274.923 li
349.327 263.737 li
348.708 263.378 348.206 262.417 348.207 261.591 cv
348.225 245.772 li
347.113 244.322 li
348.157 243.717 li
348.158 243.719 li
348.358 243.59 348.624 243.593 348.916 243.762 cv
370.813 256.44 li
371.432 256.799 371.934 257.759 371.933 258.586 cv
371.914 275.814 li
371.913 276.279 371.754 276.602 371.504 276.732 cv
370.485 277.322 li
cp
1 .866484 .240818 .0951247 cmyk
f
357.124 268.251 mo
355.752 267.456 li
348.216 254.368 li
348.225 245.772 li
347.113 244.322 li
348.157 243.717 li
348.158 243.719 li
348.358 243.59 348.624 243.593 348.916 243.762 cv
370.813 256.44 li
371.14 256.629 371.434 256.988 371.638 257.405 cv
357.124 268.251 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
347.606 244.965 mo
347.113 244.322 li
348.157 243.717 li
348.158 243.719 li
348.358 243.59 348.624 243.593 348.916 243.762 cv
349.302 243.986 li
347.606 244.965 li
cp
.657221 .328313 0 0 cmyk
f
371.012 256.581 mo
371.498 256.978 371.875 257.731 371.926 258.425 cv
369.786 259.661 li
368.761 257.879 li
371.012 256.581 li
cp
.940612 .760952 .191134 .0482185 cmyk
f
369.77 257.044 mo
347.873 244.367 li
347.254 244.008 346.751 244.387 346.75 245.213 cv
346.731 262.441 li
346.73 263.267 347.231 264.228 347.851 264.586 cv
369.748 277.264 li
370.367 277.623 370.87 277.244 370.871 276.417 cv
370.89 259.19 li
370.891 258.364 370.39 257.403 369.77 257.044 cv
cp
0 0 0 0 cmyk
f
380.536 260.386 mo
380.186 261.114 li
379.781 261.951 379.146 262.655 378.355 263.142 cv
376.18 264.483 li
375.504 264.9 374.646 264.934 373.96 264.535 cv
373.886 264.49 li
373.194 264.056 373.132 263.064 373.701 262.479 cv
375.974 260.143 li
375.974 260.143 374.696 261.121 374.339 260.727 cv
374.076 260.438 375.577 259.029 376.729 258.983 cv
377.882 258.937 378.996 258.032 378.996 258.032 cv
380.536 260.386 li
cp
0 .286015 .250584 0 cmyk
f
374.773 207.677 mo
374.773 207.677 366.44 216.743 363.08 225.06 cv
363.08 225.06 365.929 230.193 372.903 232.207 cv
379.878 234.222 374.773 207.677 374.773 207.677 cv
cp
.587366 .778347 0 0 cmyk
f
371.334 231.669 mo
372.685 218.623 li
369.503 230.846 li
370.069 231.142 370.684 231.417 371.334 231.669 cv
cp
.743191 .853178 0 0 cmyk
f
381.014 205.847 mo
378.774 205.232 li
378.774 205.232 379.844 206.914 381.404 207.342 cv
382.965 207.771 383.208 206.45 383.208 206.45 cv
381.014 205.847 li
cp
0 0 0 0 cmyk
f
233.933 323.987 mo
213.742 312.24 li
212.038 311.256 212.251 309.538 214.219 308.402 cv
233.464 297.189 li
235.431 296.053 238.408 295.929 240.111 296.914 cv
260.302 308.661 li
262.006 309.645 261.792 311.363 259.825 312.499 cv
240.58 323.711 li
238.613 324.848 235.636 324.971 233.933 323.987 cv
cp
.280034 .073518 .0233463 0 cmyk
f
267.649 286.647 mo
267.649 286.647 li
267.649 281.575 li
240.711 281.559 li
240.896 281.553 li
238.76 280.32 235.027 280.474 232.56 281.899 cv
233.357 281.566 li
206.395 281.55 li
206.395 286.965 li
206.334 287.8 206.8 288.606 207.827 289.199 cv
233.147 303.931 li
235.284 305.165 239.017 305.01 241.484 303.585 cv
265.619 289.524 li
267.042 288.703 267.729 287.638 267.649 286.647 cv
cp
1 .866484 .240818 .0951247 cmyk
f
237.028 280.727 mo
235.464 280.764 233.842 281.159 232.56 281.899 cv
233.357 281.566 li
206.395 281.55 li
206.395 286.965 li
206.334 287.8 206.8 288.606 207.827 289.199 cv
233.147 303.931 li
234.174 304.524 235.57 304.793 237.017 304.758 cv
237.028 280.727 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
209.446 281.552 mo
206.395 281.55 li
206.395 286.965 li
206.334 287.8 206.8 288.606 207.827 289.199 cv
209.446 290.134 li
209.446 281.552 li
cp
.280034 .073518 .0233463 0 cmyk
f
233.684 304.194 mo
235.527 304.984 238.193 304.94 240.348 304.118 cv
240.348 297.031 li
233.684 297.031 li
233.684 304.194 li
cp
.940612 .760952 .191134 .0482185 cmyk
f
233.147 298.562 mo
207.826 283.829 li
205.689 282.595 205.958 280.44 208.425 279.016 cv
232.56 264.954 li
235.027 263.529 238.76 263.374 240.896 264.608 cv
266.218 279.34 li
268.354 280.575 268.086 282.73 265.619 284.154 cv
241.484 298.216 li
239.017 299.641 235.284 299.795 233.147 298.562 cv
cp
.147219 .0154116 0 0 cmyk
f
238.056 278.786 mo
230.609 274.456 li
229.614 273.881 229.614 272.95 230.609 272.375 cv
231.604 271.801 233.218 271.801 234.212 272.375 cv
241.66 276.706 li
242.654 277.28 242.654 278.211 241.66 278.786 cv
240.665 279.36 239.051 279.36 238.056 278.786 cv
cp
0 0 0 0 cmyk
f
248.88 285.114 mo
244.359 282.446 li
243.365 281.872 243.365 280.94 244.359 280.366 cv
245.354 279.791 246.968 279.791 247.963 280.366 cv
252.483 283.034 li
253.478 283.608 253.479 284.539 252.483 285.114 cv
251.489 285.688 249.875 285.688 248.88 285.114 cv
cp
f
227.617 281.447 mo
223.097 278.779 li
222.102 278.205 222.102 277.273 223.097 276.699 cv
224.091 276.124 225.706 276.124 226.7 276.699 cv
231.221 279.366 li
232.215 279.94 232.215 280.872 231.221 281.447 cv
230.226 282.021 228.612 282.021 227.617 281.447 cv
cp
f
73.062 168.089 mo
71.8047 168.089 70.6943 167.93 69.7314 167.614 cv
68.7681 167.296 67.9717 166.856 67.3438 166.291 cv
66.7148 165.728 66.2041 165.029 65.8105 164.195 cv
65.417 163.361 65.1411 162.465 64.9824 161.507 cv
64.8237 160.55 64.7446 159.472 64.7446 158.274 cv
64.7446 148.089 li
64.7446 146.82 64.8267 145.696 64.9912 144.714 cv
65.1553 143.734 65.4316 142.823 65.8193 141.983 cv
66.207 141.143 66.7148 140.453 67.3438 139.913 cv
67.9717 139.372 68.7646 138.95 69.7227 138.644 cv
70.6797 138.338 71.793 138.186 73.062 138.186 cv
74.5181 138.186 75.7637 138.379 76.7974 138.767 cv
77.8311 139.155 78.6479 139.725 79.2471 140.476 cv
79.8462 141.228 80.2803 142.106 80.5508 143.111 cv
80.8208 144.116 80.9561 145.287 80.9561 146.626 cv
80.9561 149.128 li
75.8281 149.128 li
75.8281 146.644 li
75.8281 145.187 75.752 144.206 75.5991 143.701 cv
75.2935 142.714 74.5479 142.186 73.3613 142.115 cv
73.2671 142.115 73.1733 142.115 73.0796 142.115 cv
72.6328 142.115 72.2422 142.168 71.9077 142.274 cv
71.5728 142.379 71.2998 142.547 71.0884 142.776 cv
70.877 143.005 70.7061 143.249 70.5771 143.507 cv
70.4478 143.766 70.3506 144.104 70.2866 144.521 cv
70.2217 144.938 70.1807 145.323 70.1631 145.674 cv
70.1455 146.027 70.1367 146.474 70.1367 147.014 cv
70.1367 159.384 li
70.1367 161.099 70.3506 162.321 70.7798 163.049 cv
71.2085 163.778 71.9751 164.142 73.0796 164.142 cv
73.4551 164.142 73.7871 164.098 74.0752 164.01 cv
74.3628 163.921 74.6035 163.81 74.7974 163.675 cv
74.9912 163.54 75.1558 163.346 75.291 163.093 cv
75.4258 162.841 75.5288 162.606 75.5991 162.389 cv
75.6699 162.171 75.7227 161.869 75.7578 161.481 cv
75.793 161.093 75.8135 160.765 75.8193 160.495 cv
75.8252 160.224 75.8281 159.854 75.8281 159.384 cv
75.8281 156.776 li
80.9561 156.776 li
80.9561 159.172 li
80.9561 160.265 80.8799 161.247 80.7271 162.116 cv
80.5742 162.985 80.313 163.801 79.9429 164.565 cv
79.5728 165.329 79.0942 165.963 78.5068 166.468 cv
77.9194 166.973 77.1675 167.37 76.2515 167.658 cv
75.335 167.945 74.2715 168.089 73.062 168.089 cv
cp
1 .866484 .240818 .0951247 cmyk
f
91.2559 163.913 mo
91.626 164.066 92.0693 164.142 92.5864 164.142 cv
93.103 164.142 93.5439 164.066 93.9082 163.913 cv
94.272 163.76 94.563 163.56 94.7803 163.314 cv
94.9976 163.067 95.168 162.745 95.2915 162.344 cv
95.4146 161.946 95.4966 161.546 95.5381 161.146 cv
95.5791 160.747 95.5996 160.271 95.5996 159.719 cv
95.5996 146.45 li
95.5996 145.746 95.5645 145.158 95.4941 144.688 cv
95.4233 144.218 95.2852 143.775 95.0801 143.358 cv
94.874 142.941 94.5659 142.629 94.1548 142.423 cv
93.7432 142.218 93.2207 142.115 92.5864 142.115 cv
91.9521 142.115 91.4263 142.218 91.0093 142.423 cv
90.5923 142.629 90.2837 142.941 90.084 143.358 cv
89.8843 143.775 89.7495 144.218 89.6787 144.688 cv
89.6084 145.158 89.5732 145.746 89.5732 146.45 cv
89.5732 159.719 li
89.5732 160.271 89.5938 160.747 89.6348 161.146 cv
89.6758 161.546 89.7583 161.946 89.8813 162.344 cv
90.0049 162.745 90.1724 163.067 90.3838 163.314 cv
90.5952 163.56 90.8857 163.76 91.2559 163.913 cv
cp
92.5864 168.089 mo
89.5791 168.089 87.4233 167.273 86.1191 165.64 cv
84.8154 164.007 84.1636 161.617 84.1636 158.468 cv
84.1636 147.683 li
84.1636 146.133 84.3101 144.788 84.604 143.648 cv
84.8975 142.509 85.3706 141.522 86.0225 140.688 cv
86.6743 139.854 87.5469 139.228 88.6392 138.811 cv
89.7319 138.394 91.0474 138.186 92.5864 138.186 cv
95.582 138.186 97.7349 138.991 99.0449 140.6 cv
100.354 142.209 101.009 144.571 101.009 147.683 cv
101.009 158.468 li
101.009 159.996 100.86 161.337 100.56 162.495 cv
100.261 163.652 99.7847 164.656 99.1328 165.507 cv
98.481 166.36 97.6084 167.002 96.5161 167.437 cv
95.4233 167.872 94.1133 168.089 92.5864 168.089 cv
cp
f
116.886 167.737 mo
112.71 138.52 li
117.186 138.52 li
119.583 157.358 li
122.701 138.52 li
126.278 138.52 li
129.468 157.375 li
131.864 138.52 li
136.252 138.52 li
132.076 167.737 li
127.829 167.737 li
124.534 148.23 li
121.256 167.737 li
116.886 167.737 li
cp
f
146.006 163.913 mo
146.376 164.066 146.819 164.142 147.336 164.142 cv
147.853 164.142 148.294 164.066 148.658 163.913 cv
149.022 163.76 149.313 163.56 149.53 163.314 cv
149.748 163.067 149.918 162.745 150.042 162.344 cv
150.165 161.946 150.247 161.546 150.288 161.146 cv
150.329 160.747 150.35 160.271 150.35 159.719 cv
150.35 146.45 li
150.35 145.746 150.314 145.158 150.244 144.688 cv
150.173 144.218 150.035 143.775 149.83 143.358 cv
149.624 142.941 149.316 142.629 148.905 142.423 cv
148.493 142.218 147.971 142.115 147.336 142.115 cv
146.702 142.115 146.176 142.218 145.759 142.423 cv
145.342 142.629 145.034 142.941 144.834 143.358 cv
144.634 143.775 144.5 144.218 144.429 144.688 cv
144.358 145.158 144.323 145.746 144.323 146.45 cv
144.323 159.719 li
144.323 160.271 144.344 160.747 144.385 161.146 cv
144.426 161.546 144.508 161.946 144.631 162.344 cv
144.755 162.745 144.922 163.067 145.134 163.314 cv
145.345 163.56 145.636 163.76 146.006 163.913 cv
cp
147.336 168.089 mo
144.329 168.089 142.173 167.273 140.869 165.64 cv
139.565 164.007 138.914 161.617 138.914 158.468 cv
138.914 147.683 li
138.914 146.133 139.06 144.788 139.354 143.648 cv
139.647 142.509 140.121 141.522 140.772 140.688 cv
141.424 139.854 142.297 139.228 143.389 138.811 cv
144.482 138.394 145.797 138.186 147.336 138.186 cv
150.332 138.186 152.485 138.991 153.795 140.6 cv
155.104 142.209 155.759 144.571 155.759 147.683 cv
155.759 158.468 li
155.759 159.996 155.61 161.337 155.31 162.495 cv
155.011 163.652 154.535 164.656 153.883 165.507 cv
153.231 166.36 152.358 167.002 151.266 167.437 cv
150.173 167.872 148.863 168.089 147.336 168.089 cv
cp
f
164.976 150.997 mo
166.262 150.997 li
167.836 150.997 168.955 150.662 169.619 149.992 cv
170.282 149.323 170.614 148.177 170.614 146.556 cv
170.614 144.994 170.326 143.874 169.751 143.199 cv
169.175 142.524 168.118 142.186 166.579 142.186 cv
164.976 142.186 li
164.976 150.997 li
cp
159.654 167.737 mo
159.654 138.52 li
166.35 138.52 li
167.889 138.52 169.21 138.647 170.315 138.899 cv
171.419 139.152 172.379 139.575 173.196 140.168 cv
174.012 140.761 174.623 141.566 175.028 142.582 cv
175.434 143.598 175.637 144.84 175.637 146.309 cv
175.637 148.142 175.363 149.639 174.817 150.802 cv
174.271 151.965 173.369 152.811 172.112 153.34 cv
176.165 167.737 li
170.826 167.737 li
167.337 154.397 li
164.976 154.397 li
164.976 167.737 li
159.654 167.737 li
cp
f
179.671 167.737 mo
179.671 138.52 li
184.993 138.52 li
184.993 151.207 li
190.738 138.52 li
195.813 138.52 li
190.227 151.595 li
196.394 167.737 li
191.09 167.737 li
186.05 153.992 li
184.993 155.895 li
184.993 167.737 li
179.671 167.737 li
cp
f
198.95 167.737 mo
198.95 138.52 li
204.201 138.52 li
204.201 167.737 li
198.95 167.737 li
cp
f
208.694 167.737 mo
208.694 138.52 li
212.359 138.52 li
219.514 155.067 li
219.514 138.52 li
223.919 138.52 li
223.919 167.737 li
220.43 167.737 li
213.206 150.344 li
213.206 167.737 li
208.694 167.737 li
cp
f
235.602 168.124 mo
232.841 168.124 230.853 167.261 229.637 165.534 cv
228.421 163.807 227.813 161.293 227.813 157.992 cv
227.813 148.476 li
227.813 146.796 227.945 145.349 228.21 144.133 cv
228.474 142.916 228.917 141.851 229.54 140.934 cv
230.163 140.018 231.021 139.331 232.113 138.872 cv
233.206 138.414 234.545 138.186 236.131 138.186 cv
239.021 138.186 241.094 138.893 242.351 140.309 cv
243.608 141.725 244.236 143.872 244.236 146.749 cv
244.236 148.177 li
239.144 148.177 li
239.144 146.662 li
239.144 146.015 239.129 145.487 239.1 145.076 cv
239.07 144.664 239 144.25 238.888 143.833 cv
238.776 143.416 238.615 143.096 238.404 142.872 cv
238.192 142.65 237.904 142.467 237.541 142.327 cv
237.176 142.186 236.73 142.115 236.201 142.115 cv
235.802 142.115 235.446 142.165 235.135 142.265 cv
234.824 142.365 234.563 142.489 234.351 142.635 cv
234.139 142.782 233.96 142.991 233.813 143.26 cv
233.667 143.531 233.555 143.792 233.479 144.044 cv
233.402 144.297 233.343 144.623 233.302 145.023 cv
233.261 145.422 233.235 145.775 233.223 146.08 cv
233.211 146.385 233.206 146.779 233.206 147.26 cv
233.206 159.049 li
233.206 160.812 233.423 162.101 233.857 162.917 cv
234.292 163.734 235.12 164.142 236.342 164.142 cv
236.977 164.142 237.508 164.022 237.937 163.781 cv
238.366 163.54 238.7 163.176 238.941 162.688 cv
239.182 162.201 239.353 161.643 239.452 161.014 cv
239.552 160.386 239.602 159.625 239.602 158.732 cv
239.602 156.335 li
236.448 156.335 li
236.448 152.9 li
244.395 152.9 li
244.395 167.737 li
240.941 167.737 li
240.554 164.777 li
239.672 167.008 238.022 168.124 235.602 168.124 cv
cp
f
0 .000427246 mo
0 104.767 li
9.55518 112.079 22.3101 114.072 33.77 109.749 cv
91.6782 87.9086 li
101.138 84.3403 108.605 76.8735 112.173 67.4135 cv
134.014 9.50531 li
135.185 6.40277 135.88 3.20453 136.146 .000427246 cv
0 .000427246 li
cp
0 .912535 0 0 cmyk
f
600 301.404 mo
533.847 342.424 li
526.469 346.981 524.182 356.656 528.738 364.034 cv
550.951 400 li
600 400 li
600 301.404 li
cp
.147219 .0154116 0 0 cmyk
f
84.146 329.555 mo
82.3755 323.196 77.3477 318.265 70.9561 316.619 cv
31.9551 306.572 li
25.5635 304.925 18.7788 306.814 14.1567 311.527 cv
0 325.96 li
0 400 li
76.8457 400 li
90.3374 386.245 li
94.959 381.533 96.7158 374.712 94.9458 368.354 cv
84.146 329.555 li
cp
.587366 .778347 0 0 cmyk
f
180.801 278.811 mo
79.3076 278.811 li
71.4863 278.811 65.146 272.47 65.146 264.649 cv
65.146 256.827 71.4863 250.487 79.3076 250.487 cv
180.801 250.487 li
188.623 250.487 194.963 256.827 194.963 264.649 cv
194.963 272.47 188.623 278.811 180.801 278.811 cv
cp
0 .912535 0 0 cmyk
f
99.103 270.954 mo
99.103 260.608 li
97.0986 260.608 li
97.0986 259 li
103.22 259 li
103.22 260.608 li
101.28 260.608 li
101.28 270.954 li
99.103 270.954 li
cp
0 0 0 0 cmyk
f
106.349 264.104 mo
106.875 264.104 li
107.519 264.104 107.977 263.967 108.249 263.694 cv
108.52 263.419 108.656 262.951 108.656 262.288 cv
108.656 261.649 108.538 261.191 108.302 260.914 cv
108.067 260.638 107.634 260.499 107.005 260.499 cv
106.349 260.499 li
106.349 264.104 li
cp
104.171 270.954 mo
104.171 259 li
106.911 259 li
107.541 259 108.082 259.051 108.533 259.155 cv
108.985 259.258 109.378 259.431 109.712 259.674 cv
110.046 259.916 110.296 260.247 110.462 260.662 cv
110.627 261.078 110.71 261.585 110.71 262.187 cv
110.71 262.936 110.599 263.549 110.375 264.025 cv
110.152 264.501 109.783 264.847 109.269 265.063 cv
110.927 270.954 li
108.742 270.954 li
107.315 265.496 li
106.349 265.496 li
106.349 270.954 li
104.171 270.954 li
cp
f
114.02 270.954 mo
114.02 266.405 li
111.583 259 li
113.616 259 li
115.094 263.758 li
116.507 259 li
118.519 259 li
116.096 266.405 li
116.096 270.954 li
114.02 270.954 li
cp
f
123.227 270.954 mo
123.227 259 li
125.375 259 li
125.375 270.954 li
123.227 270.954 li
cp
f
128.381 270.954 mo
128.381 260.608 li
126.377 260.608 li
126.377 259 li
132.498 259 li
132.498 260.608 li
130.559 260.608 li
130.559 270.954 li
128.381 270.954 li
cp
f
137.055 270.954 mo
137.055 259 li
138.554 259 li
141.481 265.77 li
141.481 259 li
143.284 259 li
143.284 270.954 li
141.856 270.954 li
138.9 263.837 li
138.9 270.954 li
137.055 270.954 li
cp
f
147.779 269.389 mo
147.93 269.452 148.112 269.483 148.323 269.483 cv
148.535 269.483 148.715 269.452 148.864 269.389 cv
149.013 269.327 149.132 269.245 149.221 269.144 cv
149.31 269.043 149.379 268.911 149.43 268.747 cv
149.48 268.584 149.514 268.42 149.531 268.257 cv
149.548 268.094 149.556 267.899 149.556 267.673 cv
149.556 262.245 li
149.556 261.956 149.542 261.715 149.513 261.523 cv
149.484 261.331 149.427 261.15 149.343 260.979 cv
149.259 260.808 149.133 260.681 148.965 260.597 cv
148.797 260.513 148.583 260.471 148.323 260.471 cv
148.064 260.471 147.849 260.513 147.678 260.597 cv
147.507 260.681 147.381 260.808 147.299 260.979 cv
147.218 261.15 147.163 261.331 147.134 261.523 cv
147.105 261.715 147.09 261.956 147.09 262.245 cv
147.09 267.673 li
147.09 267.899 147.099 268.094 147.116 268.257 cv
147.132 268.42 147.166 268.584 147.217 268.747 cv
147.267 268.911 147.335 269.043 147.422 269.144 cv
147.509 269.245 147.627 269.327 147.779 269.389 cv
cp
148.323 271.098 mo
147.093 271.098 146.211 270.764 145.677 270.095 cv
145.144 269.427 144.877 268.45 144.877 267.162 cv
144.877 262.749 li
144.877 262.115 144.937 261.564 145.057 261.098 cv
145.177 260.632 145.371 260.228 145.638 259.887 cv
145.904 259.545 146.261 259.289 146.708 259.119 cv
147.155 258.949 147.693 258.863 148.323 258.863 cv
149.549 258.863 150.43 259.192 150.966 259.851 cv
151.501 260.509 151.77 261.475 151.77 262.749 cv
151.77 267.162 li
151.77 267.787 151.708 268.335 151.585 268.809 cv
151.463 269.282 151.269 269.693 151.001 270.041 cv
150.735 270.39 150.378 270.653 149.931 270.831 cv
149.484 271.009 148.948 271.098 148.323 271.098 cv
cp
f
154.661 270.954 mo
152.952 259 li
154.783 259 li
155.764 266.707 li
157.04 259 li
158.503 259 li
159.808 266.714 li
160.789 259 li
162.584 259 li
160.875 270.954 li
159.138 270.954 li
157.79 262.972 li
156.448 270.954 li
154.661 270.954 li
cp
f
gsave
69.8794 197.728 mo
66.0278 197.728 li
66.0278 187.576 li
66.9892 187.576 li
66.9892 197.011 li
69.8794 197.011 li
69.8794 197.728 li
clp
66.0278 187.576 mo
69.8794 187.576 li
69.8794 197.728 li
66.0278 197.728 li
cp
.472602 .264286 .0650339 0 cmyk
f
grestore
72.4389 197.844 mo
72.0675 197.844 71.7549 197.785 71.5019 197.666 cv
71.2485 197.548 71.0498 197.369 70.9047 197.128 cv
70.7598 196.887 70.6567 196.604 70.5957 196.28 cv
70.5342 195.955 70.5038 195.564 70.5038 195.107 cv
70.5038 193.099 li
70.5038 192.176 70.6465 191.491 70.9327 191.041 cv
71.2182 190.592 71.7202 190.368 72.4389 190.368 cv
73.1611 190.368 73.6646 190.591 73.9483 191.039 cv
74.2319 191.485 74.374 192.172 74.374 193.099 cv
74.374 195.107 li
74.374 195.564 74.3432 195.955 74.2818 196.28 cv
74.2208 196.604 74.1177 196.887 73.9726 197.128 cv
73.8277 197.369 73.629 197.548 73.3754 197.666 cv
73.1226 197.785 72.8101 197.844 72.4389 197.844 cv
72.4389 191.053 mo
72.2837 191.053 72.1489 191.074 72.0347 191.115 cv
71.9204 191.156 71.8267 191.222 71.7529 191.314 cv
71.6796 191.406 71.6201 191.503 71.5752 191.608 cv
71.5303 191.711 71.4965 191.847 71.4741 192.015 cv
71.4516 192.182 71.4375 192.34 71.4316 192.49 cv
71.4253 192.638 71.4223 192.826 71.4223 193.049 cv
71.4223 195.156 li
71.4223 195.38 71.4253 195.568 71.4316 195.716 cv
71.4375 195.866 71.4516 196.024 71.4741 196.191 cv
71.4965 196.359 71.5303 196.495 71.5752 196.598 cv
71.6201 196.703 71.6796 196.8 71.7529 196.892 cv
71.8267 196.984 71.9204 197.05 72.0347 197.091 cv
72.1489 197.132 72.2837 197.153 72.4389 197.153 cv
72.6226 197.153 72.7778 197.119 72.9042 197.051 cv
73.0307 196.984 73.1298 196.899 73.2012 196.797 cv
73.2724 196.695 73.3266 196.55 73.3633 196.363 cv
73.4004 196.174 73.4238 195.995 73.4342 195.824 cv
73.4439 195.652 73.4492 195.43 73.4492 195.156 cv
73.4492 193.049 li
73.4492 192.776 73.4439 192.554 73.4342 192.382 cv
73.4238 192.21 73.4004 192.031 73.3633 191.843 cv
73.3266 191.656 73.2724 191.51 73.2012 191.409 cv
73.1298 191.307 73.0307 191.222 72.9042 191.155 cv
72.7778 191.087 72.6226 191.053 72.4389 191.053 cv
.472602 .264286 .0650339 0 cmyk
f
76.6269 197.728 mo
75.7085 197.728 li
75.7085 190.478 li
76.6269 190.478 li
76.6269 191.476 li
76.8477 191.109 77.1054 190.837 77.4018 190.662 cv
77.6977 190.486 77.9966 190.398 78.2988 190.398 cv
78.458 190.405 li
78.458 191.396 li
78.3272 191.343 78.1801 191.317 78.017 191.317 cv
77.4291 191.317 76.9657 191.598 76.6269 192.161 cv
76.6269 197.728 li
f
81.1953 197.844 mo
80.5009 197.844 80.0009 197.63 79.6948 197.202 cv
79.3887 196.773 79.2358 196.04 79.2358 195.003 cv
79.2358 193.172 li
79.2358 192.466 79.3082 191.906 79.4531 191.492 cv
79.5982 191.077 79.81 190.787 80.0898 190.619 cv
80.3697 190.452 80.7398 190.368 81.2012 190.368 cv
81.5073 190.368 81.7685 190.408 81.9854 190.487 cv
82.2017 190.567 82.3809 190.68 82.5239 190.827 cv
82.667 190.974 82.7803 191.173 82.8638 191.424 cv
82.9473 191.675 83.0059 191.953 83.0386 192.256 cv
83.0708 192.561 83.0874 192.927 83.0874 193.356 cv
83.081 194.011 li
80.1543 194.011 li
80.1543 195.095 li
80.1543 195.846 80.2265 196.376 80.3716 196.687 cv
80.5166 196.997 80.789 197.153 81.189 197.153 cv
81.5073 197.153 81.7524 197.051 81.9238 196.849 cv
82.0952 196.647 82.1811 196.281 82.1811 195.75 cv
82.1811 195.247 li
83.081 195.247 li
83.081 195.652 li
83.081 196.354 82.9341 196.895 82.6401 197.275 cv
82.3462 197.655 81.8648 197.844 81.1953 197.844 cv
81.1953 191.053 mo
80.8071 191.053 80.5371 191.188 80.3838 191.457 cv
80.231 191.727 80.1543 192.24 80.1543 192.995 cv
80.1543 193.485 li
82.1811 193.485 li
82.1811 192.884 li
82.1811 192.631 82.1748 192.421 82.1626 192.253 cv
82.1503 192.086 82.1249 191.92 82.0859 191.754 cv
82.0473 191.589 81.9932 191.459 81.9238 191.366 cv
81.8544 191.272 81.7587 191.197 81.6362 191.139 cv
81.5136 191.082 81.3667 191.053 81.1953 191.053 cv
f
91.0536 197.728 mo
90.1841 197.728 li
90.1841 192.034 li
90.1841 191.637 90.123 191.362 90.0004 191.206 cv
89.8779 191.051 89.7026 190.974 89.4737 190.974 cv
89.0127 190.982 88.5571 191.233 88.1085 191.727 cv
88.1167 191.849 88.1206 191.944 88.1206 192.008 cv
88.1206 197.728 li
87.2631 197.728 li
87.2631 192.034 li
87.2631 191.637 87.2002 191.362 87.0732 191.206 cv
86.9468 191.051 86.7695 190.974 86.5405 190.974 cv
86.0797 190.982 85.6284 191.233 85.1874 191.727 cv
85.1874 197.728 li
84.3242 197.728 li
84.3242 190.478 li
85.1874 190.478 li
85.1874 191.212 li
85.6734 190.637 86.2426 190.349 86.896 190.349 cv
87.5 190.349 87.8798 190.667 88.0347 191.304 cv
88.541 190.667 89.1372 190.349 89.8227 190.349 cv
90.1822 190.349 90.477 190.479 90.7076 190.738 cv
90.9384 190.998 91.0536 191.42 91.0536 192.008 cv
91.0536 197.728 li
f
95.9829 197.728 mo
95.0644 197.728 li
95.0644 190.478 li
95.9829 190.478 li
95.9829 197.728 li
95.9892 189.48 mo
95.0644 189.48 li
95.0644 188.231 li
95.9892 188.231 li
95.9892 189.48 li
f
98.4443 200.116 mo
97.5259 200.116 li
97.5259 190.478 li
98.4443 190.478 li
98.4443 191.084 li
98.8321 190.607 99.2955 190.368 99.8344 190.368 cv
100.104 190.368 100.34 190.422 100.542 190.533 cv
100.744 190.643 100.903 190.787 101.02 190.961 cv
101.136 191.137 101.229 191.356 101.301 191.617 cv
101.372 191.878 101.419 192.136 101.442 192.391 cv
101.464 192.647 101.476 192.935 101.476 193.258 cv
101.476 194.789 li
101.476 195.172 101.459 195.515 101.427 195.818 cv
101.394 196.12 101.337 196.4 101.255 196.66 cv
101.173 196.918 101.066 197.133 100.934 197.302 cv
100.801 197.472 100.635 197.605 100.435 197.701 cv
100.234 197.796 100.002 197.844 99.7363 197.844 cv
99.2671 197.844 98.8365 197.614 98.4443 197.153 cv
98.4443 200.116 li
99.5713 191.09 mo
99.1997 191.09 98.8241 191.276 98.4443 191.647 cv
98.4443 196.589 li
98.7792 196.94 99.1612 197.116 99.5893 197.116 cv
99.753 197.116 99.8916 197.081 100.006 197.014 cv
100.12 196.948 100.213 196.855 100.285 196.739 cv
100.356 196.623 100.412 196.464 100.453 196.264 cv
100.494 196.065 100.521 195.851 100.536 195.624 cv
100.55 195.398 100.557 195.124 100.557 194.801 cv
100.557 193.258 li
100.557 192.482 100.492 191.927 100.361 191.592 cv
100.23 191.257 99.9673 191.09 99.5713 191.09 cv
f
104.415 197.844 mo
103.839 197.844 103.379 197.659 103.034 197.287 cv
102.689 196.915 102.492 196.413 102.443 195.781 cv
103.214 195.548 li
103.264 196.099 103.39 196.504 103.594 196.763 cv
103.798 197.023 104.084 197.153 104.451 197.153 cv
104.77 197.153 105.021 197.058 105.205 196.871 cv
105.38 196.691 105.468 196.451 105.468 196.148 cv
105.468 196.105 li
105.456 195.624 105.162 195.142 104.586 194.661 cv
103.6 193.821 li
103.253 193.532 103 193.247 102.841 192.97 cv
102.686 192.701 102.608 192.386 102.608 192.027 cv
102.608 191.497 102.768 191.086 103.086 190.796 cv
103.396 190.51 103.815 190.368 104.341 190.368 cv
104.876 190.368 105.287 190.539 105.575 190.882 cv
105.863 191.225 106.023 191.688 106.056 192.272 cv
105.407 192.487 li
105.378 192 105.279 191.64 105.11 191.406 cv
104.94 191.17 104.696 191.053 104.378 191.053 cv
104.092 191.053 103.864 191.133 103.692 191.292 cv
103.524 191.448 103.441 191.656 103.441 191.917 cv
103.441 192.154 103.484 192.357 103.57 192.526 cv
103.655 192.696 103.813 192.878 104.041 193.074 cv
105.064 193.993 li
105.248 194.152 105.398 194.291 105.514 194.413 cv
105.63 194.533 105.753 194.681 105.884 194.859 cv
106.015 195.037 106.112 195.229 106.175 195.435 cv
106.238 195.641 106.272 195.863 106.276 196.099 cv
106.276 196.655 106.109 197.084 105.774 197.388 cv
105.439 197.692 104.986 197.844 104.415 197.844 cv
f
108.371 197.838 mo
108.007 197.838 107.729 197.704 107.538 197.434 cv
107.346 197.164 107.25 196.783 107.25 196.288 cv
107.25 190.478 li
108.174 190.478 li
108.174 196.099 li
108.174 196.466 108.229 196.728 108.34 196.883 cv
108.45 197.038 108.624 197.116 108.86 197.116 cv
109.272 197.116 109.701 196.879 110.146 196.406 cv
110.146 190.478 li
111.065 190.478 li
111.065 197.728 li
110.146 197.728 li
110.146 196.926 li
109.607 197.535 109.016 197.838 108.371 197.838 cv
f
119.197 197.728 mo
118.327 197.728 li
118.327 192.034 li
118.327 191.637 118.266 191.362 118.143 191.206 cv
118.021 191.051 117.846 190.974 117.617 190.974 cv
117.156 190.982 116.7 191.233 116.252 191.727 cv
116.26 191.849 116.264 191.944 116.264 192.008 cv
116.264 197.728 li
115.406 197.728 li
115.406 192.034 li
115.406 191.637 115.343 191.362 115.216 191.206 cv
115.09 191.051 114.913 190.974 114.684 190.974 cv
114.223 190.982 113.772 191.233 113.331 191.727 cv
113.331 197.728 li
112.467 197.728 li
112.467 190.478 li
113.331 190.478 li
113.331 191.212 li
113.816 190.637 114.386 190.349 115.039 190.349 cv
115.643 190.349 116.023 190.667 116.178 191.304 cv
116.684 190.667 117.28 190.349 117.966 190.349 cv
118.325 190.349 118.62 190.479 118.851 190.738 cv
119.082 190.998 119.197 191.42 119.197 192.008 cv
119.197 197.728 li
f
124.72 197.844 mo
124.095 197.844 123.647 197.61 123.376 197.14 cv
123.104 196.67 122.969 195.891 122.969 194.801 cv
122.969 193.46 li
122.969 193.06 122.983 192.708 123.012 192.407 cv
123.04 192.105 123.093 191.821 123.171 191.555 cv
123.248 191.29 123.35 191.074 123.477 190.907 cv
123.604 190.739 123.767 190.608 123.967 190.511 cv
124.167 190.416 124.403 190.368 124.677 190.368 cv
125.155 190.372 125.581 190.581 125.957 190.998 cv
125.957 187.576 li
126.875 187.576 li
126.875 197.728 li
125.957 197.728 li
125.957 197.213 li
125.589 197.63 125.177 197.84 124.72 197.844 cv
124.879 191.09 mo
124.491 191.09 124.229 191.252 124.092 191.577 cv
123.956 191.902 123.887 192.431 123.887 193.167 cv
123.887 194.874 li
123.887 195.666 123.957 196.238 124.095 196.589 cv
124.234 196.94 124.503 197.116 124.904 197.116 cv
125.259 197.116 125.61 196.956 125.957 196.638 cv
125.957 191.605 li
125.589 191.261 125.23 191.09 124.879 191.09 cv
f
130.078 197.844 mo
129.706 197.844 129.394 197.785 129.141 197.666 cv
128.888 197.548 128.689 197.369 128.544 197.128 cv
128.399 196.887 128.296 196.604 128.235 196.28 cv
128.173 195.955 128.143 195.564 128.143 195.107 cv
128.143 193.099 li
128.143 192.176 128.286 191.491 128.572 191.041 cv
128.857 190.592 129.359 190.368 130.078 190.368 cv
130.8 190.368 131.304 190.591 131.587 191.039 cv
131.871 191.485 132.013 192.172 132.013 193.099 cv
132.013 195.107 li
132.013 195.564 131.982 195.955 131.921 196.28 cv
131.86 196.604 131.757 196.887 131.612 197.128 cv
131.467 197.369 131.268 197.548 131.015 197.666 cv
130.762 197.785 130.449 197.844 130.078 197.844 cv
130.078 191.053 mo
129.923 191.053 129.788 191.074 129.674 191.115 cv
129.56 191.156 129.466 191.222 129.392 191.314 cv
129.319 191.406 129.259 191.503 129.214 191.608 cv
129.169 191.711 129.136 191.847 129.113 192.015 cv
129.091 192.182 129.077 192.34 129.071 192.49 cv
129.064 192.638 129.062 192.826 129.062 193.049 cv
129.062 195.156 li
129.062 195.38 129.064 195.568 129.071 195.716 cv
129.077 195.866 129.091 196.024 129.113 196.191 cv
129.136 196.359 129.169 196.495 129.214 196.598 cv
129.259 196.703 129.319 196.8 129.392 196.892 cv
129.466 196.984 129.56 197.05 129.674 197.091 cv
129.788 197.132 129.923 197.153 130.078 197.153 cv
130.262 197.153 130.417 197.119 130.543 197.051 cv
130.67 196.984 130.769 196.899 130.84 196.797 cv
130.912 196.695 130.966 196.55 131.002 196.363 cv
131.04 196.174 131.063 195.995 131.073 195.824 cv
131.083 195.652 131.088 195.43 131.088 195.156 cv
131.088 193.049 li
131.088 192.776 131.083 192.554 131.073 192.382 cv
131.063 192.21 131.04 192.031 131.002 191.843 cv
130.966 191.656 130.912 191.51 130.84 191.409 cv
130.769 191.307 130.67 191.222 130.543 191.155 cv
130.417 191.087 130.262 191.053 130.078 191.053 cv
f
134.328 197.728 mo
133.403 197.728 li
133.403 187.576 li
134.328 187.576 li
134.328 197.728 li
f
137.61 197.844 mo
137.238 197.844 136.926 197.785 136.673 197.666 cv
136.419 197.548 136.221 197.369 136.076 197.128 cv
135.931 196.887 135.828 196.604 135.767 196.28 cv
135.705 195.955 135.675 195.564 135.675 195.107 cv
135.675 193.099 li
135.675 192.176 135.817 191.491 136.104 191.041 cv
136.389 190.592 136.891 190.368 137.61 190.368 cv
138.332 190.368 138.835 190.591 139.119 191.039 cv
139.403 191.485 139.545 192.172 139.545 193.099 cv
139.545 195.107 li
139.545 195.564 139.514 195.955 139.453 196.28 cv
139.392 196.604 139.289 196.887 139.143 197.128 cv
138.999 197.369 138.8 197.548 138.546 197.666 cv
138.293 197.785 137.981 197.844 137.61 197.844 cv
137.61 191.053 mo
137.455 191.053 137.32 191.074 137.206 191.115 cv
137.091 191.156 136.998 191.222 136.924 191.314 cv
136.851 191.406 136.791 191.503 136.746 191.608 cv
136.701 191.711 136.668 191.847 136.645 192.015 cv
136.623 192.182 136.608 192.34 136.602 192.49 cv
136.596 192.638 136.593 192.826 136.593 193.049 cv
136.593 195.156 li
136.593 195.38 136.596 195.568 136.602 195.716 cv
136.608 195.866 136.623 196.024 136.645 196.191 cv
136.668 196.359 136.701 196.495 136.746 196.598 cv
136.791 196.703 136.851 196.8 136.924 196.892 cv
136.998 196.984 137.091 197.05 137.206 197.091 cv
137.32 197.132 137.455 197.153 137.61 197.153 cv
137.793 197.153 137.949 197.119 138.075 197.051 cv
138.202 196.984 138.301 196.899 138.372 196.797 cv
138.443 196.695 138.498 196.55 138.534 196.363 cv
138.571 196.174 138.595 195.995 138.605 195.824 cv
138.615 195.652 138.62 195.43 138.62 195.156 cv
138.62 193.049 li
138.62 192.776 138.615 192.554 138.605 192.382 cv
138.595 192.21 138.571 192.031 138.534 191.843 cv
138.498 191.656 138.443 191.51 138.372 191.409 cv
138.301 191.307 138.202 191.222 138.075 191.155 cv
137.949 191.087 137.793 191.053 137.61 191.053 cv
f
141.798 197.728 mo
140.879 197.728 li
140.879 190.478 li
141.798 190.478 li
141.798 191.476 li
142.019 191.109 142.276 190.837 142.573 190.662 cv
142.869 190.486 143.167 190.398 143.47 190.398 cv
143.629 190.405 li
143.629 191.396 li
143.498 191.343 143.351 191.317 143.188 191.317 cv
142.6 191.317 142.137 191.598 141.798 192.161 cv
141.798 197.728 li
f
148.76 197.844 mo
148.185 197.844 147.725 197.659 147.379 197.287 cv
147.035 196.915 146.837 196.413 146.789 195.781 cv
147.56 195.548 li
147.609 196.099 147.736 196.504 147.94 196.763 cv
148.144 197.023 148.43 197.153 148.797 197.153 cv
149.116 197.153 149.367 197.058 149.55 196.871 cv
149.726 196.691 149.813 196.451 149.813 196.148 cv
149.813 196.105 li
149.801 195.624 149.507 195.142 148.932 194.661 cv
147.946 193.821 li
147.599 193.532 147.346 193.247 147.187 192.97 cv
147.031 192.701 146.954 192.386 146.954 192.027 cv
146.954 191.497 147.113 191.086 147.432 190.796 cv
147.742 190.51 148.16 190.368 148.687 190.368 cv
149.222 190.368 149.633 190.539 149.921 190.882 cv
150.209 191.225 150.369 191.688 150.401 192.272 cv
149.752 192.487 li
149.724 192 149.625 191.64 149.456 191.406 cv
149.286 191.17 149.042 191.053 148.724 191.053 cv
148.438 191.053 148.209 191.133 148.038 191.292 cv
147.87 191.448 147.787 191.656 147.787 191.917 cv
147.787 192.154 147.83 192.357 147.916 192.526 cv
148.001 192.696 148.158 192.878 148.387 193.074 cv
149.41 193.993 li
149.593 194.152 149.743 194.291 149.859 194.413 cv
149.976 194.533 150.099 194.681 150.23 194.859 cv
150.36 195.037 150.458 195.229 150.521 195.435 cv
150.584 195.641 150.618 195.863 150.622 196.099 cv
150.622 196.655 150.455 197.084 150.12 197.388 cv
149.785 197.692 149.332 197.844 148.76 197.844 cv
f
152.673 197.728 mo
151.755 197.728 li
151.755 190.478 li
152.673 190.478 li
152.673 197.728 li
152.68 189.48 mo
151.755 189.48 li
151.755 188.231 li
152.68 188.231 li
152.68 189.48 li
f
155.931 197.82 mo
155.437 197.82 155.096 197.684 154.908 197.412 cv
154.721 197.141 154.625 196.745 154.621 196.221 cv
154.621 191.09 li
153.745 191.09 li
153.745 190.478 li
154.621 190.478 li
154.621 188.237 li
155.539 188.237 li
155.539 190.478 li
156.746 190.478 li
156.746 191.09 li
155.539 191.09 li
155.539 196.136 li
155.539 196.503 155.582 196.755 155.668 196.892 cv
155.753 197.029 155.927 197.097 156.188 197.097 cv
156.355 197.097 156.527 197.081 156.703 197.048 cv
156.703 197.741 li
156.429 197.793 156.172 197.82 155.931 197.82 cv
f
161.534 197.844 mo
161.109 197.844 160.76 197.688 160.487 197.375 cv
160.213 197.064 160.077 196.677 160.077 196.215 cv
160.077 195.975 160.097 195.759 160.138 195.57 cv
160.179 195.379 160.255 195.201 160.367 195.034 cv
160.479 194.867 160.602 194.718 160.735 194.589 cv
160.868 194.461 161.056 194.325 161.301 194.179 cv
161.546 194.035 161.791 193.901 162.036 193.779 cv
162.281 193.656 162.602 193.507 162.997 193.331 cv
162.997 192.811 li
162.997 192.146 162.934 191.687 162.808 191.436 cv
162.681 191.185 162.444 191.06 162.097 191.06 cv
161.428 191.06 161.093 191.474 161.093 192.302 cv
161.093 192.566 li
160.187 192.536 li
160.187 192.417 160.189 192.343 160.193 192.315 cv
160.221 191.633 160.399 191.138 160.726 190.829 cv
161.052 190.522 161.526 190.368 162.146 190.368 cv
162.787 190.368 163.242 190.557 163.512 190.937 cv
163.781 191.317 163.916 191.925 163.916 192.762 cv
163.916 196.288 li
163.916 196.872 163.939 197.352 163.983 197.728 cv
163.169 197.728 li
163.034 196.724 li
162.924 197.042 162.737 197.308 162.474 197.523 cv
162.21 197.737 161.897 197.844 161.534 197.844 cv
162.997 193.938 mo
162.881 193.998 li
162.681 194.105 162.528 194.187 162.422 194.244 cv
162.315 194.301 162.188 194.372 162.039 194.458 cv
161.89 194.543 161.779 194.616 161.706 194.672 cv
161.632 194.73 161.547 194.799 161.451 194.88 cv
161.355 194.962 161.286 195.038 161.243 195.11 cv
161.2 195.182 161.156 195.264 161.111 195.358 cv
161.066 195.453 161.036 195.551 161.019 195.655 cv
161.003 195.759 160.995 195.874 160.995 196.001 cv
160.995 196.356 161.075 196.621 161.234 196.794 cv
161.393 196.967 161.593 197.054 161.834 197.054 cv
162.079 197.054 162.304 196.97 162.511 196.8 cv
162.717 196.631 162.879 196.43 162.997 196.197 cv
162.997 193.938 li
f
171.987 197.728 mo
171.117 197.728 li
171.117 192.034 li
171.117 191.637 171.056 191.362 170.934 191.206 cv
170.811 191.051 170.636 190.974 170.407 190.974 cv
169.946 190.982 169.49 191.233 169.042 191.727 cv
169.05 191.849 169.054 191.944 169.054 192.008 cv
169.054 197.728 li
168.196 197.728 li
168.196 192.034 li
168.196 191.637 168.133 191.362 168.006 191.206 cv
167.88 191.051 167.703 190.974 167.474 190.974 cv
167.013 190.982 166.562 191.233 166.121 191.727 cv
166.121 197.728 li
165.257 197.728 li
165.257 190.478 li
166.121 190.478 li
166.121 191.212 li
166.606 190.637 167.176 190.349 167.829 190.349 cv
168.433 190.349 168.813 190.667 168.968 191.304 cv
169.474 190.667 170.07 190.349 170.756 190.349 cv
171.115 190.349 171.41 190.479 171.641 190.738 cv
171.872 190.998 171.987 191.42 171.987 192.008 cv
171.987 197.728 li
f
175.159 197.844 mo
174.464 197.844 173.964 197.63 173.658 197.202 cv
173.352 196.773 173.199 196.04 173.199 195.003 cv
173.199 193.172 li
173.199 192.466 173.271 191.906 173.417 191.492 cv
173.561 191.077 173.773 190.787 174.053 190.619 cv
174.333 190.452 174.703 190.368 175.165 190.368 cv
175.471 190.368 175.732 190.408 175.949 190.487 cv
176.165 190.567 176.344 190.68 176.487 190.827 cv
176.63 190.974 176.744 191.173 176.827 191.424 cv
176.911 191.675 176.969 191.953 177.002 192.256 cv
177.034 192.561 177.051 192.927 177.051 193.356 cv
177.044 194.011 li
174.118 194.011 li
174.118 195.095 li
174.118 195.846 174.19 196.376 174.335 196.687 cv
174.48 196.997 174.752 197.153 175.152 197.153 cv
175.471 197.153 175.716 197.051 175.887 196.849 cv
176.059 196.647 176.145 196.281 176.145 195.75 cv
176.145 195.247 li
177.044 195.247 li
177.044 195.652 li
177.044 196.354 176.897 196.895 176.604 197.275 cv
176.31 197.655 175.828 197.844 175.159 197.844 cv
175.159 191.053 mo
174.77 191.053 174.501 191.188 174.347 191.457 cv
174.194 191.727 174.118 192.24 174.118 192.995 cv
174.118 193.485 li
176.145 193.485 li
176.145 192.884 li
176.145 192.631 176.138 192.421 176.126 192.253 cv
176.114 192.086 176.088 191.92 176.049 191.754 cv
176.011 191.589 175.957 191.459 175.887 191.366 cv
175.818 191.272 175.722 191.197 175.6 191.139 cv
175.477 191.082 175.33 191.053 175.159 191.053 cv
f
180.008 197.82 mo
179.514 197.82 179.173 197.684 178.985 197.412 cv
178.798 197.141 178.702 196.745 178.698 196.221 cv
178.698 191.09 li
177.822 191.09 li
177.822 190.478 li
178.698 190.478 li
178.698 188.237 li
179.616 188.237 li
179.616 190.478 li
180.823 190.478 li
180.823 191.09 li
179.616 191.09 li
179.616 196.136 li
179.616 196.503 179.659 196.755 179.745 196.892 cv
179.831 197.029 180.004 197.097 180.265 197.097 cv
180.433 197.097 180.604 197.081 180.78 197.048 cv
180.78 197.741 li
180.506 197.793 180.249 197.82 180.008 197.82 cv
f
181.906 199.192 mo
181.717 198.788 li
181.933 198.664 182.087 198.522 182.179 198.359 cv
182.271 198.196 182.317 197.985 182.317 197.728 cv
181.766 197.728 li
181.766 196.363 li
182.794 196.363 li
182.794 197.63 li
182.794 198.039 182.727 198.36 182.592 198.594 cv
182.458 198.829 182.229 199.028 181.906 199.192 cv
f
188.428 197.844 mo
188.097 197.844 187.814 197.795 187.577 197.698 cv
187.34 197.599 187.152 197.472 187.013 197.315 cv
186.874 197.158 186.765 196.951 186.686 196.693 cv
186.606 196.436 186.553 196.175 186.526 195.913 cv
186.5 195.649 186.487 195.337 186.487 194.979 cv
186.487 193.288 li
186.487 192.762 186.515 192.324 186.572 191.975 cv
186.629 191.626 186.73 191.327 186.876 191.078 cv
187.02 190.829 187.218 190.648 187.47 190.536 cv
187.721 190.423 188.038 190.368 188.422 190.368 cv
188.724 190.368 188.985 190.405 189.206 190.478 cv
189.426 190.551 189.604 190.653 189.741 190.781 cv
189.878 190.91 189.986 191.074 190.066 191.274 cv
190.145 191.474 190.201 191.685 190.231 191.908 cv
190.262 192.13 190.277 192.39 190.277 192.688 cv
190.277 193.032 li
189.426 193.032 li
189.426 192.688 li
189.426 192.068 189.353 191.64 189.206 191.406 cv
189.059 191.17 188.801 191.053 188.434 191.053 cv
188.018 191.053 187.742 191.202 187.607 191.497 cv
187.473 191.793 187.405 192.339 187.405 193.135 cv
187.405 195.168 li
187.405 195.912 187.478 196.428 187.622 196.717 cv
187.768 197.007 188.04 197.153 188.44 197.153 cv
188.611 197.153 188.756 197.128 188.875 197.079 cv
188.993 197.03 189.088 196.962 189.16 196.876 cv
189.231 196.791 189.287 196.672 189.328 196.522 cv
189.369 196.37 189.395 196.21 189.408 196.041 cv
189.42 195.872 189.426 195.659 189.426 195.401 cv
189.426 195.003 li
190.277 195.003 li
190.277 195.358 li
190.277 195.676 190.264 195.953 190.237 196.185 cv
190.211 196.417 190.158 196.643 190.078 196.862 cv
189.999 197.079 189.892 197.257 189.76 197.394 cv
189.627 197.531 189.448 197.64 189.224 197.722 cv
189 197.803 188.734 197.844 188.428 197.844 cv
f
193.296 197.844 mo
192.924 197.844 192.612 197.785 192.359 197.666 cv
192.105 197.548 191.907 197.369 191.762 197.128 cv
191.617 196.887 191.514 196.604 191.453 196.28 cv
191.391 195.955 191.361 195.564 191.361 195.107 cv
191.361 193.099 li
191.361 192.176 191.503 191.491 191.79 191.041 cv
192.075 190.592 192.577 190.368 193.296 190.368 cv
194.018 190.368 194.521 190.591 194.805 191.039 cv
195.089 191.485 195.231 192.172 195.231 193.099 cv
195.231 195.107 li
195.231 195.564 195.2 195.955 195.139 196.28 cv
195.078 196.604 194.975 196.887 194.83 197.128 cv
194.685 197.369 194.486 197.548 194.232 197.666 cv
193.98 197.785 193.667 197.844 193.296 197.844 cv
193.296 191.053 mo
193.141 191.053 193.006 191.074 192.892 191.115 cv
192.777 191.156 192.684 191.222 192.61 191.314 cv
192.537 191.406 192.477 191.503 192.432 191.608 cv
192.387 191.711 192.353 191.847 192.331 192.015 cv
192.309 192.182 192.294 192.34 192.289 192.49 cv
192.282 192.638 192.279 192.826 192.279 193.049 cv
192.279 195.156 li
192.279 195.38 192.282 195.568 192.289 195.716 cv
192.294 195.866 192.309 196.024 192.331 196.191 cv
192.353 196.359 192.387 196.495 192.432 196.598 cv
192.477 196.703 192.537 196.8 192.61 196.892 cv
192.684 196.984 192.777 197.05 192.892 197.091 cv
193.006 197.132 193.141 197.153 193.296 197.153 cv
193.48 197.153 193.635 197.119 193.761 197.051 cv
193.888 196.984 193.987 196.899 194.058 196.797 cv
194.129 196.695 194.184 196.55 194.22 196.363 cv
194.257 196.174 194.281 195.995 194.291 195.824 cv
194.301 195.652 194.306 195.43 194.306 195.156 cv
194.306 193.049 li
194.306 192.776 194.301 192.554 194.291 192.382 cv
194.281 192.21 194.257 192.031 194.22 191.843 cv
194.184 191.656 194.129 191.51 194.058 191.409 cv
193.987 191.307 193.888 191.222 193.761 191.155 cv
193.635 191.087 193.48 191.053 193.296 191.053 cv
f
200.27 197.728 mo
199.352 197.728 li
199.352 192.107 li
199.352 191.74 199.295 191.478 199.183 191.323 cv
199.071 191.167 198.896 191.09 198.66 191.09 cv
198.264 191.09 197.847 191.313 197.411 191.757 cv
197.411 197.728 li
196.492 197.728 li
196.492 190.478 li
197.411 190.478 li
197.411 191.231 li
197.945 190.656 198.527 190.368 199.156 190.368 cv
199.515 190.368 199.79 190.501 199.982 190.769 cv
200.174 191.037 200.27 191.416 200.27 191.911 cv
200.27 197.728 li
f
203.283 197.844 mo
202.707 197.844 202.247 197.659 201.902 197.287 cv
201.557 196.915 201.36 196.413 201.311 195.781 cv
202.082 195.548 li
202.132 196.099 202.258 196.504 202.462 196.763 cv
202.666 197.023 202.952 197.153 203.319 197.153 cv
203.638 197.153 203.889 197.058 204.073 196.871 cv
204.248 196.691 204.336 196.451 204.336 196.148 cv
204.336 196.105 li
204.324 195.624 204.03 195.142 203.454 194.661 cv
202.468 193.821 li
202.122 193.532 201.868 193.247 201.709 192.97 cv
201.554 192.701 201.477 192.386 201.477 192.027 cv
201.477 191.497 201.636 191.086 201.954 190.796 cv
202.264 190.51 202.683 190.368 203.209 190.368 cv
203.744 190.368 204.155 190.539 204.443 190.882 cv
204.731 191.225 204.891 191.688 204.924 192.272 cv
204.275 192.487 li
204.246 192 204.147 191.64 203.978 191.406 cv
203.809 191.17 203.565 191.053 203.246 191.053 cv
202.96 191.053 202.732 191.133 202.56 191.292 cv
202.393 191.448 202.309 191.656 202.309 191.917 cv
202.309 192.154 202.352 192.357 202.438 192.526 cv
202.523 192.696 202.681 192.878 202.909 193.074 cv
203.932 193.993 li
204.116 194.152 204.266 194.291 204.382 194.413 cv
204.498 194.533 204.622 194.681 204.752 194.859 cv
204.883 195.037 204.98 195.229 205.043 195.435 cv
205.106 195.641 205.14 195.863 205.145 196.099 cv
205.145 196.655 204.977 197.084 204.642 197.388 cv
204.308 197.692 203.855 197.844 203.283 197.844 cv
f
207.998 197.844 mo
207.304 197.844 206.804 197.63 206.498 197.202 cv
206.191 196.773 206.039 196.04 206.039 195.003 cv
206.039 193.172 li
206.039 192.466 206.111 191.906 206.256 191.492 cv
206.401 191.077 206.613 190.787 206.893 190.619 cv
207.172 190.452 207.542 190.368 208.004 190.368 cv
208.31 190.368 208.571 190.408 208.788 190.487 cv
209.004 190.567 209.184 190.68 209.327 190.827 cv
209.47 190.974 209.583 191.173 209.667 191.424 cv
209.75 191.675 209.809 191.953 209.841 192.256 cv
209.874 192.561 209.89 192.927 209.89 193.356 cv
209.884 194.011 li
206.957 194.011 li
206.957 195.095 li
206.957 195.846 207.029 196.376 207.174 196.687 cv
207.319 196.997 207.592 197.153 207.992 197.153 cv
208.31 197.153 208.555 197.051 208.727 196.849 cv
208.898 196.647 208.984 196.281 208.984 195.75 cv
208.984 195.247 li
209.884 195.247 li
209.884 195.652 li
209.884 196.354 209.737 196.895 209.443 197.275 cv
209.149 197.655 208.668 197.844 207.998 197.844 cv
207.998 191.053 mo
207.61 191.053 207.34 191.188 207.187 191.457 cv
207.034 191.727 206.957 192.24 206.957 192.995 cv
206.957 193.485 li
208.984 193.485 li
208.984 192.884 li
208.984 192.631 208.978 192.421 208.965 192.253 cv
208.953 192.086 208.928 191.92 208.889 191.754 cv
208.85 191.589 208.796 191.459 208.727 191.366 cv
208.657 191.272 208.561 191.197 208.439 191.139 cv
208.316 191.082 208.169 191.053 207.998 191.053 cv
f
212.933 197.844 mo
212.603 197.844 212.319 197.795 212.082 197.698 cv
211.845 197.599 211.657 197.472 211.519 197.315 cv
211.38 197.158 211.271 196.951 211.191 196.693 cv
211.111 196.436 211.059 196.175 211.032 195.913 cv
211.005 195.649 210.992 195.337 210.992 194.979 cv
210.992 193.288 li
210.992 192.762 211.02 192.324 211.078 191.975 cv
211.135 191.626 211.236 191.327 211.381 191.078 cv
211.526 190.829 211.724 190.648 211.975 190.536 cv
212.226 190.423 212.543 190.368 212.927 190.368 cv
213.229 190.368 213.49 190.405 213.711 190.478 cv
213.931 190.551 214.11 190.653 214.247 190.781 cv
214.383 190.91 214.492 191.074 214.571 191.274 cv
214.651 191.474 214.706 191.685 214.736 191.908 cv
214.767 192.13 214.783 192.39 214.783 192.688 cv
214.783 193.032 li
213.931 193.032 li
213.931 192.688 li
213.931 192.068 213.858 191.64 213.711 191.406 cv
213.564 191.17 213.307 191.053 212.939 191.053 cv
212.523 191.053 212.247 191.202 212.113 191.497 cv
211.978 191.793 211.911 192.339 211.911 193.135 cv
211.911 195.168 li
211.911 195.912 211.983 196.428 212.128 196.717 cv
212.273 197.007 212.545 197.153 212.945 197.153 cv
213.117 197.153 213.262 197.128 213.38 197.079 cv
213.499 197.03 213.593 196.962 213.665 196.876 cv
213.736 196.791 213.792 196.672 213.833 196.522 cv
213.874 196.37 213.901 196.21 213.913 196.041 cv
213.925 195.872 213.931 195.659 213.931 195.401 cv
213.931 195.003 li
214.783 195.003 li
214.783 195.358 li
214.783 195.676 214.769 195.953 214.743 196.185 cv
214.716 196.417 214.663 196.643 214.583 196.862 cv
214.504 197.079 214.398 197.257 214.265 197.394 cv
214.132 197.531 213.954 197.64 213.729 197.722 cv
213.505 197.803 213.239 197.844 212.933 197.844 cv
f
217.722 197.82 mo
217.227 197.82 216.887 197.684 216.699 197.412 cv
216.511 197.141 216.415 196.745 216.411 196.221 cv
216.411 191.09 li
215.536 191.09 li
215.536 190.478 li
216.411 190.478 li
216.411 188.237 li
217.33 188.237 li
217.33 190.478 li
218.536 190.478 li
218.536 191.09 li
217.33 191.09 li
217.33 196.136 li
217.33 196.503 217.373 196.755 217.458 196.892 cv
217.544 197.029 217.717 197.097 217.979 197.097 cv
218.146 197.097 218.317 197.081 218.493 197.048 cv
218.493 197.741 li
218.22 197.793 217.962 197.82 217.722 197.82 cv
f
221.335 197.844 mo
220.64 197.844 220.14 197.63 219.834 197.202 cv
219.528 196.773 219.375 196.04 219.375 195.003 cv
219.375 193.172 li
219.375 192.466 219.447 191.906 219.592 191.492 cv
219.737 191.077 219.949 190.787 220.229 190.619 cv
220.509 190.452 220.879 190.368 221.34 190.368 cv
221.646 190.368 221.908 190.408 222.124 190.487 cv
222.341 190.567 222.52 190.68 222.663 190.827 cv
222.806 190.974 222.919 191.173 223.003 191.424 cv
223.086 191.675 223.145 191.953 223.178 192.256 cv
223.21 192.561 223.227 192.927 223.227 193.356 cv
223.22 194.011 li
220.293 194.011 li
220.293 195.095 li
220.293 195.846 220.366 196.376 220.511 196.687 cv
220.656 196.997 220.928 197.153 221.328 197.153 cv
221.646 197.153 221.892 197.051 222.063 196.849 cv
222.234 196.647 222.32 196.281 222.32 195.75 cv
222.32 195.247 li
223.22 195.247 li
223.22 195.652 li
223.22 196.354 223.073 196.895 222.779 197.275 cv
222.485 197.655 222.004 197.844 221.335 197.844 cv
221.335 191.053 mo
220.946 191.053 220.676 191.188 220.523 191.457 cv
220.37 191.727 220.293 192.24 220.293 192.995 cv
220.293 193.485 li
222.32 193.485 li
222.32 192.884 li
222.32 192.631 222.314 192.421 222.302 192.253 cv
222.29 192.086 222.264 191.92 222.225 191.754 cv
222.186 191.589 222.132 191.459 222.063 191.366 cv
221.994 191.272 221.898 191.197 221.775 191.139 cv
221.653 191.082 221.506 191.053 221.335 191.053 cv
f
226.184 197.82 mo
225.69 197.82 225.349 197.684 225.161 197.412 cv
224.974 197.141 224.877 196.745 224.873 196.221 cv
224.873 191.09 li
223.998 191.09 li
223.998 190.478 li
224.873 190.478 li
224.873 188.237 li
225.792 188.237 li
225.792 190.478 li
226.999 190.478 li
226.999 191.09 li
225.792 191.09 li
225.792 196.136 li
225.792 196.503 225.835 196.755 225.92 196.892 cv
226.006 197.029 226.18 197.097 226.441 197.097 cv
226.608 197.097 226.78 197.081 226.956 197.048 cv
226.956 197.741 li
226.682 197.793 226.425 197.82 226.184 197.82 cv
f
229.038 197.838 mo
228.674 197.838 228.396 197.704 228.205 197.434 cv
228.013 197.164 227.917 196.783 227.917 196.288 cv
227.917 190.478 li
228.841 190.478 li
228.841 196.099 li
228.841 196.466 228.897 196.728 229.007 196.883 cv
229.117 197.038 229.29 197.116 229.527 197.116 cv
229.939 197.116 230.368 196.879 230.813 196.406 cv
230.813 190.478 li
231.732 190.478 li
231.732 197.728 li
230.813 197.728 li
230.813 196.926 li
230.274 197.535 229.683 197.838 229.038 197.838 cv
f
234.126 197.728 mo
233.208 197.728 li
233.208 190.478 li
234.126 190.478 li
234.126 191.476 li
234.347 191.109 234.605 190.837 234.901 190.662 cv
235.197 190.486 235.496 190.398 235.798 190.398 cv
235.957 190.405 li
235.957 191.396 li
235.826 191.343 235.679 191.317 235.516 191.317 cv
234.928 191.317 234.465 191.598 234.126 192.161 cv
234.126 197.728 li
f
67.0996 212.893 mo
66.6748 212.893 66.3256 212.737 66.0522 212.424 cv
65.7789 212.113 65.642 211.726 65.642 211.264 cv
65.642 211.024 65.6626 210.808 65.7032 210.619 cv
65.7442 210.428 65.8203 210.249 65.9327 210.082 cv
66.0449 209.915 66.1674 209.767 66.3002 209.638 cv
66.4332 209.51 66.6215 209.373 66.8666 209.228 cv
67.1118 209.083 67.3565 208.95 67.6016 208.827 cv
67.8461 208.704 68.167 208.556 68.563 208.38 cv
68.563 207.86 li
68.563 207.195 68.4995 206.736 68.373 206.485 cv
68.2466 206.234 68.0097 206.109 67.6626 206.109 cv
66.9931 206.109 66.6588 206.523 66.6588 207.351 cv
66.6588 207.615 li
65.7524 207.584 li
65.7524 207.466 65.7544 207.392 65.7583 207.364 cv
65.7867 206.682 65.9644 206.187 66.2911 205.878 cv
66.6176 205.571 67.0913 205.416 67.7118 205.416 cv
68.3526 205.416 68.8076 205.606 69.0772 205.986 cv
69.3467 206.366 69.4814 206.974 69.4814 207.811 cv
69.4814 211.337 li
69.4814 211.921 69.5039 212.401 69.5488 212.777 cv
68.7344 212.777 li
68.5995 211.773 li
68.4893 212.091 68.3027 212.357 68.0396 212.572 cv
67.7758 212.786 67.463 212.893 67.0996 212.893 cv
68.563 208.987 mo
68.4463 209.047 li
68.2466 209.154 68.0932 209.236 67.9873 209.292 cv
67.8808 209.35 67.7534 209.421 67.6044 209.507 cv
67.4556 209.592 67.3443 209.664 67.271 209.721 cv
67.1972 209.779 67.1128 209.848 67.0165 209.929 cv
66.9209 210.011 66.8516 210.087 66.8085 210.159 cv
66.7656 210.231 66.7217 210.313 66.6768 210.407 cv
66.6319 210.501 66.6011 210.6 66.585 210.704 cv
66.5688 210.808 66.5605 210.923 66.5605 211.05 cv
66.5605 211.405 66.6401 211.669 66.7994 211.843 cv
66.9584 212.016 67.1586 212.103 67.3994 212.103 cv
67.6445 212.103 67.8696 212.019 68.0762 211.849 cv
68.2822 211.68 68.4444 211.479 68.563 211.245 cv
68.563 208.987 li
f
72.4389 212.893 mo
71.8145 212.893 71.3667 212.659 71.0952 212.189 cv
70.8238 211.719 70.688 210.94 70.688 209.85 cv
70.688 208.509 li
70.688 208.109 70.7021 207.757 70.7309 207.456 cv
70.7593 207.154 70.8125 206.87 70.8902 206.604 cv
70.9674 206.339 71.0693 206.122 71.1963 205.955 cv
71.3227 205.788 71.4859 205.657 71.6861 205.56 cv
71.8857 205.464 72.1226 205.416 72.3965 205.416 cv
72.874 205.42 73.3003 205.63 73.6763 206.047 cv
73.6763 202.624 li
74.5948 202.624 li
74.5948 212.777 li
73.6763 212.777 li
73.6763 212.262 li
73.3086 212.679 72.8964 212.889 72.4389 212.893 cv
72.5981 206.139 mo
72.2104 206.139 71.9482 206.301 71.8115 206.625 cv
71.6748 206.951 71.6065 207.48 71.6065 208.215 cv
71.6065 209.923 li
71.6065 210.715 71.6757 211.286 71.8145 211.638 cv
71.9531 211.989 72.2226 212.164 72.6231 212.164 cv
72.978 212.164 73.3292 212.005 73.6763 211.687 cv
73.6763 206.654 li
73.3086 206.31 72.9491 206.139 72.5981 206.139 cv
f
77.0195 212.777 mo
76.101 212.777 li
76.101 205.527 li
77.0195 205.527 li
77.0195 212.777 li
77.0258 204.529 mo
76.101 204.529 li
76.101 203.28 li
77.0258 203.28 li
77.0258 204.529 li
f
79.4809 215.164 mo
78.5626 215.164 li
78.5626 205.527 li
79.4809 205.527 li
79.4809 206.133 li
79.8686 205.656 80.332 205.416 80.871 205.416 cv
81.1407 205.416 81.3765 205.471 81.5787 205.581 cv
81.7802 205.692 81.9394 205.835 82.0561 206.01 cv
82.1724 206.186 82.2661 206.405 82.3379 206.665 cv
82.4091 206.927 82.456 207.185 82.4785 207.44 cv
82.5009 207.696 82.5122 207.984 82.5122 208.307 cv
82.5122 209.837 li
82.5122 210.221 82.4956 210.564 82.4633 210.867 cv
82.4306 211.168 82.3735 211.449 82.292 211.708 cv
82.21 211.967 82.103 212.182 81.9702 212.351 cv
81.8374 212.521 81.6713 212.654 81.4713 212.749 cv
81.271 212.845 81.0385 212.893 80.773 212.893 cv
80.3037 212.893 79.8731 212.662 79.4809 212.202 cv
79.4809 215.164 li
80.6079 206.139 mo
80.2363 206.139 79.8608 206.325 79.4809 206.696 cv
79.4809 211.638 li
79.8159 211.989 80.1977 212.164 80.6259 212.164 cv
80.7895 212.164 80.9283 212.13 81.0424 212.063 cv
81.1567 211.996 81.2495 211.904 81.3214 211.788 cv
81.3925 211.671 81.4487 211.513 81.4897 211.313 cv
81.5303 211.114 81.5581 210.9 81.5722 210.673 cv
81.5865 210.447 81.5938 210.172 81.5938 209.85 cv
81.5938 208.307 li
81.5938 207.531 81.5283 206.976 81.398 206.641 cv
81.2671 206.306 81.004 206.139 80.6079 206.139 cv
f
84.8145 212.777 mo
83.896 212.777 li
83.896 205.527 li
84.8145 205.527 li
84.8145 212.777 li
84.8208 204.529 mo
83.896 204.529 li
83.896 203.28 li
84.8208 203.28 li
84.8208 204.529 li
f
88.0107 212.893 mo
87.4351 212.893 86.975 212.707 86.6299 212.336 cv
86.2851 211.964 86.0879 211.462 86.0391 210.83 cv
86.8105 210.597 li
86.8598 211.148 86.9863 211.553 87.1904 211.812 cv
87.3945 212.072 87.6802 212.202 88.0473 212.202 cv
88.3662 212.202 88.6172 212.107 88.8007 211.919 cv
88.976 211.74 89.0639 211.499 89.0639 211.197 cv
89.0639 211.154 li
89.0517 210.672 88.7578 210.191 88.1821 209.709 cv
87.1963 208.87 li
86.8496 208.581 86.5962 208.296 86.437 208.019 cv
86.2817 207.749 86.2046 207.435 86.2046 207.076 cv
86.2046 206.545 86.3638 206.135 86.6821 205.845 cv
86.9921 205.559 87.4106 205.416 87.9375 205.416 cv
88.4721 205.416 88.8834 205.588 89.1714 205.931 cv
89.4589 206.274 89.6192 206.737 89.6518 207.321 cv
89.0029 207.536 li
88.9741 207.049 88.8749 206.689 88.7061 206.455 cv
88.5367 206.219 88.2925 206.102 87.9742 206.102 cv
87.6885 206.102 87.46 206.182 87.288 206.341 cv
87.1206 206.496 87.0371 206.705 87.0371 206.965 cv
87.0371 207.203 87.08 207.406 87.1661 207.575 cv
87.2514 207.745 87.4087 207.927 87.6373 208.122 cv
88.6602 209.041 li
88.8437 209.201 88.9936 209.34 89.1099 209.461 cv
89.2266 209.582 89.3496 209.73 89.4804 209.908 cv
89.6108 210.085 89.708 210.278 89.7715 210.484 cv
89.8344 210.69 89.8681 210.912 89.8726 211.148 cv
89.8726 211.704 89.7051 212.133 89.3702 212.437 cv
89.0357 212.741 88.5825 212.893 88.0107 212.893 cv
f
92.7075 212.893 mo
92.3769 212.893 92.0932 212.844 91.8565 212.746 cv
91.6196 212.648 91.4316 212.521 91.2929 212.364 cv
91.1543 212.206 91.0449 211.999 90.9653 211.742 cv
90.8857 211.485 90.833 211.224 90.8061 210.961 cv
90.7798 210.698 90.7666 210.386 90.7666 210.028 cv
90.7666 208.337 li
90.7666 207.811 90.7949 207.372 90.8521 207.024 cv
90.9092 206.675 91.0102 206.375 91.1553 206.126 cv
91.3003 205.877 91.4981 205.697 91.7495 205.584 cv
92.0005 205.472 92.3179 205.416 92.7017 205.416 cv
93.0034 205.416 93.2646 205.454 93.4853 205.527 cv
93.7055 205.6 93.8842 205.702 94.0209 205.83 cv
94.1578 205.958 94.2661 206.122 94.3457 206.323 cv
94.4253 206.523 94.4804 206.734 94.5107 206.956 cv
94.5415 207.179 94.5572 207.439 94.5572 207.737 cv
94.5572 208.081 li
93.7055 208.081 li
93.7055 207.737 li
93.7055 207.117 93.6323 206.689 93.4853 206.455 cv
93.3384 206.219 93.0811 206.102 92.7139 206.102 cv
92.2973 206.102 92.022 206.25 91.8871 206.546 cv
91.7524 206.842 91.6851 207.388 91.6851 208.184 cv
91.6851 210.217 li
91.6851 210.96 91.7574 211.477 91.9023 211.766 cv
92.0474 212.056 92.3199 212.202 92.7197 212.202 cv
92.8911 212.202 93.0362 212.177 93.1549 212.127 cv
93.2729 212.079 93.3677 212.011 93.4395 211.925 cv
93.5107 211.84 93.5669 211.721 93.6079 211.571 cv
93.6484 211.419 93.6753 211.259 93.6875 211.09 cv
93.6996 210.92 93.7055 210.707 93.7055 210.45 cv
93.7055 210.052 li
94.5572 210.052 li
94.5572 210.407 li
94.5572 210.725 94.5435 211.001 94.5171 211.234 cv
94.4908 211.466 94.4374 211.692 94.3578 211.911 cv
94.2784 212.128 94.1719 212.306 94.0396 212.443 cv
93.9068 212.58 93.728 212.689 93.5035 212.771 cv
93.2792 212.852 93.0137 212.893 92.7075 212.893 cv
f
96.7979 212.777 mo
95.8794 212.777 li
95.8794 205.527 li
96.7979 205.527 li
96.7979 212.777 li
96.8042 204.529 mo
95.8794 204.529 li
95.8794 203.28 li
96.8042 203.28 li
96.8042 204.529 li
f
102.113 212.777 mo
101.194 212.777 li
101.194 207.156 li
101.194 206.788 101.138 206.527 101.026 206.372 cv
100.914 206.216 100.739 206.139 100.502 206.139 cv
100.106 206.139 99.6899 206.362 99.2534 206.806 cv
99.2534 212.777 li
98.3349 212.777 li
98.3349 205.527 li
99.2534 205.527 li
99.2534 206.28 li
99.7881 205.704 100.37 205.416 100.998 205.416 cv
101.357 205.416 101.633 205.55 101.825 205.818 cv
102.017 206.085 102.113 206.465 102.113 206.959 cv
102.113 212.777 li
f
105.456 215.159 mo
105.072 215.159 104.735 215.138 104.443 215.097 cv
104.151 215.057 103.893 214.99 103.668 214.896 cv
103.444 214.801 103.272 214.674 103.154 214.513 cv
103.035 214.351 102.976 214.159 102.976 213.934 cv
102.976 213.583 103.093 213.261 103.325 212.97 cv
103.558 212.678 103.842 212.444 104.176 212.269 cv
103.956 212.207 103.766 212.119 103.607 212.002 cv
103.448 211.886 103.368 211.76 103.368 211.625 cv
103.368 211.242 103.656 210.754 104.231 210.163 cv
103.628 209.721 103.325 208.983 103.325 207.946 cv
103.325 207.594 103.366 207.269 103.448 206.969 cv
103.529 206.668 103.651 206.402 103.812 206.166 cv
103.973 205.932 104.185 205.748 104.446 205.616 cv
104.707 205.483 105.007 205.416 105.346 205.416 cv
106.077 205.416 106.597 205.716 106.908 206.317 cv
106.985 206.182 107.116 206.036 107.299 205.878 cv
107.483 205.722 107.679 205.598 107.887 205.508 cv
108.077 205.429 li
108.322 206.072 li
108.122 206.121 107.898 206.208 107.651 206.335 cv
107.404 206.461 107.23 206.584 107.128 206.703 cv
107.189 206.849 107.243 207.053 107.29 207.315 cv
107.337 207.576 107.361 207.794 107.361 207.97 cv
107.361 208.749 107.2 209.367 106.88 209.823 cv
106.56 210.278 106.052 210.505 105.358 210.505 cv
105.248 210.505 105.113 210.492 104.954 210.465 cv
104.795 210.439 104.685 210.413 104.624 210.389 cv
104.611 210.41 104.565 210.479 104.486 210.597 cv
104.406 210.715 104.347 210.806 104.308 210.87 cv
104.269 210.933 104.23 211.01 104.189 211.102 cv
104.148 211.194 104.127 211.27 104.127 211.332 cv
104.127 211.45 104.33 211.542 104.734 211.607 cv
104.819 211.631 105.023 211.667 105.346 211.714 cv
105.668 211.761 105.852 211.79 105.897 211.803 cv
106.493 211.91 106.944 212.095 107.25 212.361 cv
107.557 212.625 107.709 212.997 107.709 213.475 cv
107.709 214.05 107.508 214.475 107.104 214.749 cv
106.699 215.022 106.15 215.159 105.456 215.159 cv
104.685 212.391 mo
104.072 212.771 103.766 213.185 103.766 213.634 cv
103.766 213.912 103.897 214.113 104.158 214.237 cv
104.419 214.362 104.848 214.424 105.444 214.424 cv
105.918 214.424 106.292 214.347 106.568 214.195 cv
106.843 214.041 106.981 213.81 106.981 213.499 cv
106.981 213.234 106.887 213.028 106.699 212.881 cv
106.512 212.734 106.15 212.612 105.615 212.513 cv
104.685 212.391 li
105.364 206.072 mo
105.172 206.072 105.002 206.112 104.853 206.191 cv
104.704 206.271 104.586 206.372 104.498 206.495 cv
104.41 206.617 104.339 206.763 104.284 206.935 cv
104.228 207.107 104.192 207.273 104.173 207.434 cv
104.155 207.595 104.146 207.766 104.146 207.946 cv
104.146 209.211 104.55 209.843 105.358 209.843 cv
105.562 209.843 105.74 209.805 105.891 209.727 cv
106.042 209.65 106.158 209.552 106.24 209.433 cv
106.322 209.315 106.387 209.167 106.436 208.99 cv
106.485 208.812 106.517 208.645 106.531 208.488 cv
106.545 208.33 106.552 208.15 106.552 207.946 cv
106.552 206.696 106.156 206.072 105.364 206.072 cv
f
113.258 212.893 mo
112.563 212.893 112.063 212.679 111.757 212.25 cv
111.451 211.822 111.298 211.089 111.298 210.052 cv
111.298 208.221 li
111.298 207.515 111.371 206.954 111.516 206.54 cv
111.661 206.125 111.872 205.835 112.152 205.667 cv
112.432 205.5 112.802 205.416 113.264 205.416 cv
113.57 205.416 113.831 205.456 114.048 205.536 cv
114.264 205.616 114.443 205.729 114.586 205.875 cv
114.73 206.023 114.843 206.222 114.926 206.473 cv
115.01 206.724 115.068 207.001 115.101 207.305 cv
115.133 207.61 115.15 207.976 115.15 208.405 cv
115.143 209.06 li
112.217 209.06 li
112.217 210.144 li
112.217 210.895 112.289 211.425 112.434 211.736 cv
112.579 212.046 112.852 212.202 113.252 212.202 cv
113.57 212.202 113.815 212.1 113.986 211.898 cv
114.158 211.696 114.244 211.33 114.244 210.799 cv
114.244 210.296 li
115.143 210.296 li
115.143 210.701 li
115.143 211.403 114.997 211.944 114.703 212.324 cv
114.409 212.704 113.927 212.893 113.258 212.893 cv
113.258 206.102 mo
112.87 206.102 112.6 206.237 112.446 206.506 cv
112.294 206.776 112.217 207.289 112.217 208.043 cv
112.217 208.534 li
114.244 208.534 li
114.244 207.933 li
114.244 207.68 114.237 207.47 114.225 207.302 cv
114.213 207.135 114.187 206.969 114.148 206.803 cv
114.11 206.638 114.056 206.508 113.986 206.414 cv
113.917 206.321 113.821 206.245 113.699 206.188 cv
113.576 206.131 113.429 206.102 113.258 206.102 cv
f
117.44 212.777 mo
116.515 212.777 li
116.515 202.624 li
117.44 202.624 li
117.44 212.777 li
f
119.944 212.777 mo
119.026 212.777 li
119.026 205.527 li
119.944 205.527 li
119.944 212.777 li
119.951 204.529 mo
119.026 204.529 li
119.026 203.28 li
119.951 203.28 li
119.951 204.529 li
f
123.202 212.869 mo
122.708 212.869 122.367 212.733 122.179 212.461 cv
121.992 212.19 121.895 211.793 121.892 211.27 cv
121.892 206.139 li
121.016 206.139 li
121.016 205.527 li
121.892 205.527 li
121.892 203.286 li
122.81 203.286 li
122.81 205.527 li
124.017 205.527 li
124.017 206.139 li
122.81 206.139 li
122.81 211.185 li
122.81 211.552 122.853 211.804 122.938 211.941 cv
123.024 212.078 123.198 212.146 123.459 212.146 cv
123.627 212.146 123.798 212.129 123.974 212.097 cv
123.974 212.789 li
123.7 212.842 123.443 212.869 123.202 212.869 cv
f
125.1 214.241 mo
124.911 213.836 li
125.127 213.713 125.281 213.571 125.372 213.408 cv
125.465 213.245 125.511 213.034 125.511 212.777 cv
124.959 212.777 li
124.959 211.412 li
125.988 211.412 li
125.988 212.679 li
125.988 213.087 125.921 213.409 125.786 213.643 cv
125.651 213.878 125.423 214.077 125.1 214.241 cv
f
131.475 212.893 mo
130.899 212.893 130.439 212.707 130.094 212.336 cv
129.749 211.964 129.552 211.462 129.503 210.83 cv
130.274 210.597 li
130.324 211.148 130.45 211.553 130.654 211.812 cv
130.858 212.072 131.144 212.202 131.511 212.202 cv
131.83 212.202 132.081 212.107 132.265 211.919 cv
132.44 211.74 132.528 211.499 132.528 211.197 cv
132.528 211.154 li
132.516 210.672 132.222 210.191 131.646 209.709 cv
130.66 208.87 li
130.313 208.581 130.06 208.296 129.901 208.019 cv
129.746 207.749 129.668 207.435 129.668 207.076 cv
129.668 206.545 129.828 206.135 130.146 205.845 cv
130.456 205.559 130.874 205.416 131.401 205.416 cv
131.936 205.416 132.347 205.588 132.635 205.931 cv
132.923 206.274 133.083 206.737 133.116 207.321 cv
132.467 207.536 li
132.438 207.049 132.339 206.689 132.17 206.455 cv
132.001 206.219 131.756 206.102 131.438 206.102 cv
131.152 206.102 130.924 206.182 130.752 206.341 cv
130.584 206.496 130.501 206.705 130.501 206.965 cv
130.501 207.203 130.544 207.406 130.63 207.575 cv
130.715 207.745 130.873 207.927 131.101 208.122 cv
132.124 209.041 li
132.308 209.201 132.457 209.34 132.574 209.461 cv
132.69 209.582 132.813 209.73 132.944 209.908 cv
133.075 210.085 133.172 210.278 133.235 210.484 cv
133.298 210.69 133.332 210.912 133.336 211.148 cv
133.336 211.704 133.169 212.133 132.834 212.437 cv
132.5 212.741 132.046 212.893 131.475 212.893 cv
f
136.19 212.893 mo
135.496 212.893 134.996 212.679 134.689 212.25 cv
134.383 211.822 134.23 211.089 134.23 210.052 cv
134.23 208.221 li
134.23 207.515 134.303 206.954 134.448 206.54 cv
134.593 206.125 134.805 205.835 135.085 205.667 cv
135.364 205.5 135.734 205.416 136.196 205.416 cv
136.502 205.416 136.763 205.456 136.98 205.536 cv
137.196 205.616 137.375 205.729 137.519 205.875 cv
137.662 206.023 137.775 206.222 137.858 206.473 cv
137.942 206.724 138 207.001 138.033 207.305 cv
138.065 207.61 138.082 207.976 138.082 208.405 cv
138.076 209.06 li
135.149 209.06 li
135.149 210.144 li
135.149 210.895 135.221 211.425 135.366 211.736 cv
135.511 212.046 135.784 212.202 136.184 212.202 cv
136.502 212.202 136.747 212.1 136.919 211.898 cv
137.09 211.696 137.176 211.33 137.176 210.799 cv
137.176 210.296 li
138.076 210.296 li
138.076 210.701 li
138.076 211.403 137.929 211.944 137.635 212.324 cv
137.341 212.704 136.859 212.893 136.19 212.893 cv
136.19 206.102 mo
135.802 206.102 135.532 206.237 135.378 206.506 cv
135.226 206.776 135.149 207.289 135.149 208.043 cv
135.149 208.534 li
137.176 208.534 li
137.176 207.933 li
137.176 207.68 137.169 207.47 137.157 207.302 cv
137.145 207.135 137.12 206.969 137.081 206.803 cv
137.042 206.638 136.988 206.508 136.919 206.414 cv
136.849 206.321 136.753 206.245 136.631 206.188 cv
136.508 206.131 136.361 206.102 136.19 206.102 cv
f
140.935 212.893 mo
140.311 212.893 139.863 212.659 139.591 212.189 cv
139.32 211.719 139.184 210.94 139.184 209.85 cv
139.184 208.509 li
139.184 208.109 139.198 207.757 139.227 207.456 cv
139.255 207.154 139.309 206.87 139.386 206.604 cv
139.463 206.339 139.565 206.122 139.692 205.955 cv
139.819 205.788 139.982 205.657 140.182 205.56 cv
140.382 205.464 140.619 205.416 140.893 205.416 cv
141.37 205.42 141.796 205.63 142.172 206.047 cv
142.172 202.624 li
143.091 202.624 li
143.091 212.777 li
142.172 212.777 li
142.172 212.262 li
141.805 212.679 141.393 212.889 140.935 212.893 cv
141.094 206.139 mo
140.706 206.139 140.444 206.301 140.308 206.625 cv
140.171 206.951 140.103 207.48 140.103 208.215 cv
140.103 209.923 li
140.103 210.715 140.172 211.286 140.311 211.638 cv
140.449 211.989 140.719 212.164 141.119 212.164 cv
141.474 212.164 141.825 212.005 142.172 211.687 cv
142.172 206.654 li
141.805 206.31 141.445 206.139 141.094 206.139 cv
f
148.669 212.893 mo
148.044 212.893 147.597 212.659 147.325 212.189 cv
147.054 211.719 146.918 210.94 146.918 209.85 cv
146.918 208.509 li
146.918 208.109 146.932 207.757 146.961 207.456 cv
146.989 207.154 147.043 206.87 147.12 206.604 cv
147.197 206.339 147.299 206.122 147.426 205.955 cv
147.553 205.788 147.716 205.657 147.916 205.56 cv
148.116 205.464 148.352 205.416 148.626 205.416 cv
149.104 205.42 149.53 205.63 149.906 206.047 cv
149.906 202.624 li
150.825 202.624 li
150.825 212.777 li
149.906 212.777 li
149.906 212.262 li
149.539 212.679 149.126 212.889 148.669 212.893 cv
148.828 206.139 mo
148.44 206.139 148.178 206.301 148.042 206.625 cv
147.905 206.951 147.836 207.48 147.836 208.215 cv
147.836 209.923 li
147.836 210.715 147.906 211.286 148.044 211.638 cv
148.183 211.989 148.453 212.164 148.853 212.164 cv
149.208 212.164 149.559 212.005 149.906 211.687 cv
149.906 206.654 li
149.539 206.31 149.179 206.139 148.828 206.139 cv
f
154.027 212.893 mo
153.656 212.893 153.343 212.833 153.09 212.715 cv
152.837 212.597 152.638 212.417 152.493 212.177 cv
152.348 211.936 152.245 211.653 152.184 211.329 cv
152.123 211.004 152.092 210.613 152.092 210.156 cv
152.092 208.148 li
152.092 207.225 152.235 206.539 152.521 206.09 cv
152.807 205.641 153.309 205.416 154.027 205.416 cv
154.749 205.416 155.253 205.64 155.537 206.087 cv
155.82 206.534 155.962 207.221 155.962 208.148 cv
155.962 210.156 li
155.962 210.613 155.932 211.004 155.87 211.329 cv
155.809 211.653 155.706 211.936 155.561 212.177 cv
155.416 212.417 155.217 212.597 154.964 212.715 cv
154.711 212.833 154.398 212.893 154.027 212.893 cv
154.027 206.102 mo
153.872 206.102 153.737 206.122 153.623 206.163 cv
153.509 206.204 153.415 206.271 153.341 206.363 cv
153.268 206.455 153.209 206.552 153.163 206.657 cv
153.119 206.76 153.085 206.896 153.063 207.064 cv
153.04 207.231 153.026 207.389 153.02 207.538 cv
153.014 207.687 153.011 207.874 153.011 208.098 cv
153.011 210.205 li
153.011 210.429 153.014 210.617 153.02 210.765 cv
153.026 210.914 153.04 211.073 153.063 211.24 cv
153.085 211.408 153.119 211.543 153.163 211.647 cv
153.209 211.751 153.268 211.849 153.341 211.941 cv
153.415 212.033 153.509 212.099 153.623 212.14 cv
153.737 212.181 153.872 212.202 154.027 212.202 cv
154.211 212.202 154.366 212.167 154.493 212.1 cv
154.619 212.033 154.718 211.948 154.79 211.846 cv
154.861 211.744 154.915 211.599 154.952 211.412 cv
154.989 211.223 155.012 211.043 155.022 210.873 cv
155.032 210.701 155.038 210.479 155.038 210.205 cv
155.038 208.098 li
155.038 207.825 155.032 207.603 155.022 207.431 cv
155.012 207.259 154.989 207.08 154.952 206.892 cv
154.915 206.705 154.861 206.559 154.79 206.457 cv
154.718 206.356 154.619 206.271 154.493 206.204 cv
154.366 206.136 154.211 206.102 154.027 206.102 cv
f
161.608 212.893 mo
160.914 212.893 160.414 212.679 160.107 212.25 cv
159.801 211.822 159.648 211.089 159.648 210.052 cv
159.648 208.221 li
159.648 207.515 159.721 206.954 159.866 206.54 cv
160.011 206.125 160.223 205.835 160.502 205.667 cv
160.782 205.5 161.152 205.416 161.614 205.416 cv
161.92 205.416 162.181 205.456 162.398 205.536 cv
162.614 205.616 162.794 205.729 162.936 205.875 cv
163.08 206.023 163.193 206.222 163.276 206.473 cv
163.36 206.724 163.419 207.001 163.451 207.305 cv
163.483 207.61 163.5 207.976 163.5 208.405 cv
163.494 209.06 li
160.567 209.06 li
160.567 210.144 li
160.567 210.895 160.639 211.425 160.784 211.736 cv
160.929 212.046 161.202 212.202 161.601 212.202 cv
161.92 212.202 162.165 212.1 162.336 211.898 cv
162.508 211.696 162.594 211.33 162.594 210.799 cv
162.594 210.296 li
163.494 210.296 li
163.494 210.701 li
163.494 211.403 163.347 211.944 163.053 212.324 cv
162.759 212.704 162.277 212.893 161.608 212.893 cv
161.608 206.102 mo
161.22 206.102 160.95 206.237 160.796 206.506 cv
160.643 206.776 160.567 207.289 160.567 208.043 cv
160.567 208.534 li
162.594 208.534 li
162.594 207.933 li
162.594 207.68 162.587 207.47 162.575 207.302 cv
162.563 207.135 162.538 206.969 162.499 206.803 cv
162.46 206.638 162.406 206.508 162.336 206.414 cv
162.267 206.321 162.171 206.245 162.049 206.188 cv
161.926 206.131 161.779 206.102 161.608 206.102 cv
f
165.759 212.777 mo
164.841 212.777 li
164.841 205.527 li
165.759 205.527 li
165.759 212.777 li
165.766 204.529 mo
164.841 204.529 li
164.841 203.28 li
165.766 203.28 li
165.766 204.529 li
f
168.362 212.887 mo
167.999 212.887 167.721 212.752 167.529 212.483 cv
167.337 212.213 167.241 211.831 167.241 211.337 cv
167.241 205.527 li
168.166 205.527 li
168.166 211.148 li
168.166 211.515 168.221 211.777 168.331 211.932 cv
168.441 212.087 168.615 212.164 168.852 212.164 cv
169.264 212.164 169.692 211.928 170.138 211.455 cv
170.138 205.527 li
171.056 205.527 li
171.056 212.777 li
170.138 212.777 li
170.138 211.975 li
169.599 212.583 169.007 212.887 168.362 212.887 cv
f
174.118 212.893 mo
173.542 212.893 173.082 212.707 172.737 212.336 cv
172.392 211.964 172.195 211.462 172.146 210.83 cv
172.918 210.597 li
172.967 211.148 173.093 211.553 173.297 211.812 cv
173.502 212.072 173.787 212.202 174.154 212.202 cv
174.473 212.202 174.724 212.107 174.908 211.919 cv
175.083 211.74 175.171 211.499 175.171 211.197 cv
175.171 211.154 li
175.159 210.672 174.865 210.191 174.289 209.709 cv
173.303 208.87 li
172.957 208.581 172.703 208.296 172.544 208.019 cv
172.389 207.749 172.311 207.435 172.311 207.076 cv
172.311 206.545 172.471 206.135 172.789 205.845 cv
173.099 205.559 173.518 205.416 174.044 205.416 cv
174.579 205.416 174.99 205.588 175.278 205.931 cv
175.566 206.274 175.726 206.737 175.759 207.321 cv
175.11 207.536 li
175.081 207.049 174.982 206.689 174.813 206.455 cv
174.644 206.219 174.399 206.102 174.081 206.102 cv
173.795 206.102 173.567 206.182 173.395 206.341 cv
173.228 206.496 173.144 206.705 173.144 206.965 cv
173.144 207.203 173.187 207.406 173.273 207.575 cv
173.358 207.745 173.516 207.927 173.744 208.122 cv
174.767 209.041 li
174.951 209.201 175.101 209.34 175.217 209.461 cv
175.333 209.582 175.457 209.73 175.587 209.908 cv
175.718 210.085 175.815 210.278 175.878 210.484 cv
175.941 210.69 175.975 210.912 175.979 211.148 cv
175.979 211.704 175.812 212.133 175.477 212.437 cv
175.143 212.741 174.689 212.893 174.118 212.893 cv
f
183.738 212.777 mo
182.868 212.777 li
182.868 207.082 li
182.868 206.686 182.807 206.411 182.685 206.255 cv
182.562 206.1 182.387 206.023 182.158 206.023 cv
181.697 206.031 181.241 206.282 180.792 206.776 cv
180.801 206.898 180.805 206.993 180.805 207.057 cv
180.805 212.777 li
179.947 212.777 li
179.947 207.082 li
179.947 206.686 179.884 206.411 179.757 206.255 cv
179.631 206.1 179.454 206.023 179.225 206.023 cv
178.764 206.031 178.313 206.282 177.872 206.776 cv
177.872 212.777 li
177.008 212.777 li
177.008 205.527 li
177.872 205.527 li
177.872 206.261 li
178.357 205.686 178.927 205.398 179.58 205.398 cv
180.184 205.398 180.564 205.716 180.719 206.353 cv
181.225 205.716 181.821 205.398 182.507 205.398 cv
182.866 205.398 183.161 205.528 183.392 205.787 cv
183.623 206.046 183.738 206.469 183.738 207.057 cv
183.738 212.777 li
f
186.885 212.893 mo
186.514 212.893 186.201 212.833 185.948 212.715 cv
185.695 212.597 185.496 212.417 185.351 212.177 cv
185.206 211.936 185.103 211.653 185.042 211.329 cv
184.98 211.004 184.95 210.613 184.95 210.156 cv
184.95 208.148 li
184.95 207.225 185.093 206.539 185.379 206.09 cv
185.665 205.641 186.167 205.416 186.885 205.416 cv
187.607 205.416 188.111 205.64 188.395 206.087 cv
188.678 206.534 188.82 207.221 188.82 208.148 cv
188.82 210.156 li
188.82 210.613 188.79 211.004 188.728 211.329 cv
188.667 211.653 188.564 211.936 188.419 212.177 cv
188.274 212.417 188.075 212.597 187.822 212.715 cv
187.569 212.833 187.256 212.893 186.885 212.893 cv
186.885 206.102 mo
186.73 206.102 186.595 206.122 186.481 206.163 cv
186.367 206.204 186.273 206.271 186.199 206.363 cv
186.126 206.455 186.066 206.552 186.021 206.657 cv
185.977 206.76 185.943 206.896 185.92 207.064 cv
185.898 207.231 185.884 207.389 185.878 207.538 cv
185.872 207.687 185.869 207.874 185.869 208.098 cv
185.869 210.205 li
185.869 210.429 185.872 210.617 185.878 210.765 cv
185.884 210.914 185.898 211.073 185.92 211.24 cv
185.943 211.408 185.977 211.543 186.021 211.647 cv
186.066 211.751 186.126 211.849 186.199 211.941 cv
186.273 212.033 186.367 212.099 186.481 212.14 cv
186.595 212.181 186.73 212.202 186.885 212.202 cv
187.069 212.202 187.224 212.167 187.351 212.1 cv
187.477 212.033 187.576 211.948 187.647 211.846 cv
187.719 211.744 187.773 211.599 187.81 211.412 cv
187.847 211.223 187.87 211.043 187.88 210.873 cv
187.89 210.701 187.896 210.479 187.896 210.205 cv
187.896 208.098 li
187.896 207.825 187.89 207.603 187.88 207.431 cv
187.87 207.259 187.847 207.08 187.81 206.892 cv
187.773 206.705 187.719 206.559 187.647 206.457 cv
187.576 206.356 187.477 206.271 187.351 206.204 cv
187.224 206.136 187.069 206.102 186.885 206.102 cv
f
191.698 212.893 mo
191.073 212.893 190.626 212.659 190.354 212.189 cv
190.083 211.719 189.947 210.94 189.947 209.85 cv
189.947 208.509 li
189.947 208.109 189.961 207.757 189.99 207.456 cv
190.018 207.154 190.071 206.87 190.149 206.604 cv
190.226 206.339 190.328 206.122 190.455 205.955 cv
190.581 205.788 190.745 205.657 190.945 205.56 cv
191.144 205.464 191.381 205.416 191.655 205.416 cv
192.133 205.42 192.559 205.63 192.935 206.047 cv
192.935 202.624 li
193.854 202.624 li
193.854 212.777 li
192.935 212.777 li
192.935 212.262 li
192.567 212.679 192.155 212.889 191.698 212.893 cv
191.857 206.139 mo
191.469 206.139 191.207 206.301 191.07 206.625 cv
190.934 206.951 190.865 207.48 190.865 208.215 cv
190.865 209.923 li
190.865 210.715 190.935 211.286 191.073 211.638 cv
191.212 211.989 191.481 212.164 191.882 212.164 cv
192.237 212.164 192.588 212.005 192.935 211.687 cv
192.935 206.654 li
192.567 206.31 192.208 206.139 191.857 206.139 cv
f
199.536 212.869 mo
199.042 212.869 198.701 212.733 198.513 212.461 cv
198.326 212.19 198.229 211.793 198.226 211.27 cv
198.226 206.139 li
197.35 206.139 li
197.35 205.527 li
198.226 205.527 li
198.226 203.286 li
199.144 203.286 li
199.144 205.527 li
200.351 205.527 li
200.351 206.139 li
199.144 206.139 li
199.144 211.185 li
199.144 211.552 199.187 211.804 199.272 211.941 cv
199.358 212.078 199.532 212.146 199.793 212.146 cv
199.96 212.146 200.132 212.129 200.308 212.097 cv
200.308 212.789 li
200.034 212.842 199.777 212.869 199.536 212.869 cv
f
203.149 212.893 mo
202.455 212.893 201.955 212.679 201.648 212.25 cv
201.342 211.822 201.189 211.089 201.189 210.052 cv
201.189 208.221 li
201.189 207.515 201.262 206.954 201.407 206.54 cv
201.552 206.125 201.764 205.835 202.043 205.667 cv
202.323 205.5 202.693 205.416 203.155 205.416 cv
203.461 205.416 203.722 205.456 203.939 205.536 cv
204.155 205.616 204.334 205.729 204.478 205.875 cv
204.621 206.023 204.734 206.222 204.817 206.473 cv
204.901 206.724 204.959 207.001 204.992 207.305 cv
205.024 207.61 205.041 207.976 205.041 208.405 cv
205.035 209.06 li
202.108 209.06 li
202.108 210.144 li
202.108 210.895 202.18 211.425 202.325 211.736 cv
202.47 212.046 202.743 212.202 203.143 212.202 cv
203.461 212.202 203.706 212.1 203.877 211.898 cv
204.049 211.696 204.135 211.33 204.135 210.799 cv
204.135 210.296 li
205.035 210.296 li
205.035 210.701 li
205.035 211.403 204.888 211.944 204.594 212.324 cv
204.3 212.704 203.818 212.893 203.149 212.893 cv
203.149 206.102 mo
202.761 206.102 202.491 206.237 202.337 206.506 cv
202.185 206.776 202.108 207.289 202.108 208.043 cv
202.108 208.534 li
204.135 208.534 li
204.135 207.933 li
204.135 207.68 204.128 207.47 204.116 207.302 cv
204.104 207.135 204.079 206.969 204.04 206.803 cv
204.001 206.638 203.947 206.508 203.877 206.414 cv
203.808 206.321 203.712 206.245 203.59 206.188 cv
203.467 206.131 203.32 206.102 203.149 206.102 cv
f
213.007 212.777 mo
212.138 212.777 li
212.138 207.082 li
212.138 206.686 212.077 206.411 211.954 206.255 cv
211.832 206.1 211.656 206.023 211.427 206.023 cv
210.966 206.031 210.511 206.282 210.062 206.776 cv
210.07 206.898 210.074 206.993 210.074 207.057 cv
210.074 212.777 li
209.217 212.777 li
209.217 207.082 li
209.217 206.686 209.154 206.411 209.027 206.255 cv
208.9 206.1 208.723 206.023 208.494 206.023 cv
208.033 206.031 207.582 206.282 207.141 206.776 cv
207.141 212.777 li
206.278 212.777 li
206.278 205.527 li
207.141 205.527 li
207.141 206.261 li
207.627 205.686 208.196 205.398 208.85 205.398 cv
209.454 205.398 209.834 205.716 209.988 206.353 cv
210.495 205.716 211.091 205.398 211.776 205.398 cv
212.136 205.398 212.431 205.528 212.661 205.787 cv
212.892 206.046 213.007 206.469 213.007 207.057 cv
213.007 212.777 li
f
215.279 215.164 mo
214.36 215.164 li
214.36 205.527 li
215.279 205.527 li
215.279 206.133 li
215.666 205.656 216.13 205.416 216.669 205.416 cv
216.938 205.416 217.174 205.471 217.376 205.581 cv
217.578 205.692 217.737 205.835 217.854 206.01 cv
217.97 206.186 218.064 206.405 218.136 206.665 cv
218.207 206.927 218.254 207.185 218.276 207.44 cv
218.299 207.696 218.31 207.984 218.31 208.307 cv
218.31 209.837 li
218.31 210.221 218.293 210.564 218.261 210.867 cv
218.228 211.168 218.171 211.449 218.09 211.708 cv
218.008 211.967 217.901 212.182 217.768 212.351 cv
217.635 212.521 217.469 212.654 217.269 212.749 cv
217.069 212.845 216.836 212.893 216.571 212.893 cv
216.102 212.893 215.671 212.662 215.279 212.202 cv
215.279 215.164 li
216.406 206.139 mo
216.034 206.139 215.659 206.325 215.279 206.696 cv
215.279 211.638 li
215.614 211.989 215.996 212.164 216.424 212.164 cv
216.587 212.164 216.726 212.13 216.84 212.063 cv
216.955 211.996 217.047 211.904 217.119 211.788 cv
217.19 211.671 217.247 211.513 217.288 211.313 cv
217.328 211.114 217.356 210.9 217.37 210.673 cv
217.384 210.447 217.392 210.172 217.392 209.85 cv
217.392 208.307 li
217.392 207.531 217.326 206.976 217.196 206.641 cv
217.065 206.306 216.802 206.139 216.406 206.139 cv
f
221.39 212.893 mo
221.018 212.893 220.706 212.833 220.453 212.715 cv
220.2 212.597 220.001 212.417 219.856 212.177 cv
219.711 211.936 219.608 211.653 219.547 211.329 cv
219.485 211.004 219.455 210.613 219.455 210.156 cv
219.455 208.148 li
219.455 207.225 219.598 206.539 219.884 206.09 cv
220.169 205.641 220.671 205.416 221.39 205.416 cv
222.112 205.416 222.616 205.64 222.899 206.087 cv
223.183 206.534 223.325 207.221 223.325 208.148 cv
223.325 210.156 li
223.325 210.613 223.294 211.004 223.233 211.329 cv
223.172 211.653 223.069 211.936 222.924 212.177 cv
222.779 212.417 222.58 212.597 222.327 212.715 cv
222.074 212.833 221.761 212.893 221.39 212.893 cv
221.39 206.102 mo
221.235 206.102 221.1 206.122 220.986 206.163 cv
220.872 206.204 220.778 206.271 220.704 206.363 cv
220.631 206.455 220.571 206.552 220.526 206.657 cv
220.482 206.76 220.448 206.896 220.425 207.064 cv
220.403 207.231 220.389 207.389 220.383 207.538 cv
220.377 207.687 220.374 207.874 220.374 208.098 cv
220.374 210.205 li
220.374 210.429 220.377 210.617 220.383 210.765 cv
220.389 210.914 220.403 211.073 220.425 211.24 cv
220.448 211.408 220.482 211.543 220.526 211.647 cv
220.571 211.751 220.631 211.849 220.704 211.941 cv
220.778 212.033 220.872 212.099 220.986 212.14 cv
221.1 212.181 221.235 212.202 221.39 212.202 cv
221.574 212.202 221.729 212.167 221.855 212.1 cv
221.982 212.033 222.081 211.948 222.152 211.846 cv
222.224 211.744 222.278 211.599 222.314 211.412 cv
222.352 211.223 222.375 211.043 222.385 210.873 cv
222.395 210.701 222.4 210.479 222.4 210.205 cv
222.4 208.098 li
222.4 207.825 222.395 207.603 222.385 207.431 cv
222.375 207.259 222.352 207.08 222.314 206.892 cv
222.278 206.705 222.224 206.559 222.152 206.457 cv
222.081 206.356 221.982 206.271 221.855 206.204 cv
221.729 206.136 221.574 206.102 221.39 206.102 cv
f
225.578 212.777 mo
224.66 212.777 li
224.66 205.527 li
225.578 205.527 li
225.578 206.525 li
225.799 206.158 226.057 205.886 226.353 205.71 cv
226.649 205.535 226.948 205.447 227.25 205.447 cv
227.409 205.454 li
227.409 206.445 li
227.278 206.392 227.131 206.366 226.968 206.366 cv
226.38 206.366 225.917 206.647 225.578 207.21 cv
225.578 212.777 li
f
66.8666 227.827 mo
65.9483 227.827 li
65.9483 220.577 li
66.8666 220.577 li
66.8666 227.827 li
66.8731 219.578 mo
65.9483 219.578 li
65.9483 218.33 li
66.8731 218.33 li
66.8731 219.578 li
f
72.1816 227.827 mo
71.2631 227.827 li
71.2631 222.206 li
71.2631 221.838 71.2071 221.577 71.0947 221.421 cv
70.9824 221.266 70.8081 221.189 70.5713 221.189 cv
70.1753 221.189 69.7588 221.412 69.3223 221.856 cv
69.3223 227.827 li
68.4038 227.827 li
68.4038 220.577 li
69.3223 220.577 li
69.3223 221.33 li
69.8569 220.754 70.4385 220.466 71.0674 220.466 cv
71.4262 220.466 71.7022 220.6 71.8941 220.868 cv
72.0859 221.135 72.1816 221.515 72.1816 222.009 cv
72.1816 227.827 li
f
75.3413 227.943 mo
75.0107 227.943 74.7271 227.894 74.4902 227.796 cv
74.2534 227.698 74.0655 227.571 73.9268 227.414 cv
73.788 227.256 73.6787 227.049 73.5991 226.791 cv
73.5195 226.535 73.4667 226.274 73.44 226.011 cv
73.4136 225.747 73.4004 225.436 73.4004 225.078 cv
73.4004 223.387 li
73.4004 222.861 73.4287 222.422 73.4858 222.074 cv
73.5429 221.725 73.644 221.425 73.7891 221.176 cv
73.934 220.927 74.1319 220.746 74.3833 220.634 cv
74.6343 220.522 74.9517 220.466 75.3354 220.466 cv
75.6372 220.466 75.8984 220.503 76.1192 220.577 cv
76.3394 220.65 76.5181 220.751 76.6548 220.879 cv
76.7915 221.008 76.9 221.172 76.9796 221.373 cv
77.059 221.573 77.1143 221.784 77.1445 222.006 cv
77.1753 222.229 77.1909 222.489 77.1909 222.787 cv
77.1909 223.13 li
76.3394 223.13 li
76.3394 222.787 li
76.3394 222.166 76.2661 221.739 76.1192 221.504 cv
75.9721 221.269 75.7148 221.152 75.3476 221.152 cv
74.9311 221.152 74.6558 221.3 74.521 221.596 cv
74.3863 221.892 74.3189 222.438 74.3189 223.234 cv
74.3189 225.267 li
74.3189 226.01 74.3911 226.527 74.5362 226.816 cv
74.6811 227.106 74.9536 227.251 75.3535 227.251 cv
75.5248 227.251 75.6699 227.227 75.7886 227.177 cv
75.9068 227.128 76.0014 227.061 76.0732 226.975 cv
76.1446 226.89 76.2008 226.771 76.2418 226.62 cv
76.2822 226.469 76.3091 226.309 76.3212 226.14 cv
76.3335 225.97 76.3394 225.757 76.3394 225.5 cv
76.3394 225.102 li
77.1909 225.102 li
77.1909 225.456 li
77.1909 225.775 77.1772 226.051 77.1509 226.284 cv
77.1245 226.516 77.0713 226.742 76.9917 226.96 cv
76.9121 227.178 76.8056 227.356 76.6733 227.493 cv
76.5405 227.629 76.3618 227.739 76.1372 227.821 cv
75.9131 227.902 75.6474 227.943 75.3413 227.943 cv
f
79.4316 227.827 mo
78.5131 227.827 li
78.5131 220.577 li
79.4316 220.577 li
79.4316 227.827 li
79.4379 219.578 mo
78.5131 219.578 li
78.5131 218.33 li
79.4379 218.33 li
79.4379 219.578 li
f
82.585 227.943 mo
81.9605 227.943 81.5127 227.708 81.2411 227.239 cv
80.9697 226.769 80.8339 225.99 80.8339 224.9 cv
80.8339 223.559 li
80.8339 223.159 80.8482 222.807 80.8769 222.505 cv
80.9053 222.204 80.9585 221.919 81.0361 221.654 cv
81.1133 221.389 81.2153 221.172 81.3422 221.005 cv
81.4687 220.837 81.6318 220.707 81.832 220.61 cv
82.0317 220.514 82.2685 220.466 82.5425 220.466 cv
83.02 220.47 83.4463 220.68 83.8222 221.097 cv
83.8222 217.674 li
84.7407 217.674 li
84.7407 227.827 li
83.8222 227.827 li
83.8222 227.312 li
83.4545 227.729 83.0425 227.939 82.585 227.943 cv
82.7441 221.189 mo
82.3564 221.189 82.0943 221.351 81.9575 221.675 cv
81.8208 222 81.7524 222.53 81.7524 223.265 cv
81.7524 224.973 li
81.7524 225.765 81.8218 226.336 81.9605 226.688 cv
82.0991 227.038 82.3687 227.214 82.769 227.214 cv
83.1239 227.214 83.4751 227.055 83.8222 226.737 cv
83.8222 221.704 li
83.4545 221.36 83.0953 221.189 82.7441 221.189 cv
f
87.1655 227.827 mo
86.2471 227.827 li
86.2471 220.577 li
87.1655 220.577 li
87.1655 227.827 li
87.1719 219.578 mo
86.2471 219.578 li
86.2471 218.33 li
87.1719 218.33 li
87.1719 219.578 li
f
90.3189 227.943 mo
89.6943 227.943 89.2466 227.708 88.9751 227.239 cv
88.7036 226.769 88.5679 225.99 88.5679 224.9 cv
88.5679 223.559 li
88.5679 223.159 88.582 222.807 88.6109 222.505 cv
88.6391 222.204 88.6925 221.919 88.77 221.654 cv
88.8472 221.389 88.9492 221.172 89.0762 221.005 cv
89.2027 220.837 89.3657 220.707 89.5659 220.61 cv
89.7657 220.514 90.0024 220.466 90.2763 220.466 cv
90.7538 220.47 91.1801 220.68 91.5561 221.097 cv
91.5561 217.674 li
92.4746 217.674 li
92.4746 227.827 li
91.5561 227.827 li
91.5561 227.312 li
91.1885 227.729 90.7764 227.939 90.3189 227.943 cv
90.4781 221.189 mo
90.0904 221.189 89.8281 221.351 89.6915 221.675 cv
89.5546 222 89.4863 222.53 89.4863 223.265 cv
89.4863 224.973 li
89.4863 225.765 89.5557 226.336 89.6943 226.688 cv
89.8329 227.038 90.1026 227.214 90.5029 227.214 cv
90.8579 227.214 91.209 227.055 91.5561 226.737 cv
91.5561 221.704 li
91.1885 221.36 90.8291 221.189 90.4781 221.189 cv
f
94.9424 227.937 mo
94.5791 227.937 94.3012 227.802 94.1094 227.533 cv
93.9174 227.263 93.8218 226.881 93.8218 226.387 cv
93.8218 220.577 li
94.7461 220.577 li
94.7461 226.198 li
94.7461 226.565 94.8012 226.827 94.9116 226.982 cv
95.022 227.137 95.1954 227.214 95.4321 227.214 cv
95.8442 227.214 96.2729 226.978 96.7183 226.504 cv
96.7183 220.577 li
97.6368 220.577 li
97.6368 227.827 li
96.7183 227.827 li
96.7183 227.025 li
96.1792 227.633 95.5874 227.937 94.9424 227.937 cv
f
102.817 227.827 mo
101.898 227.827 li
101.898 222.206 li
101.898 221.838 101.842 221.577 101.73 221.421 cv
101.618 221.266 101.443 221.189 101.207 221.189 cv
100.811 221.189 100.394 221.412 99.9576 221.856 cv
99.9576 227.827 li
99.0391 227.827 li
99.0391 220.577 li
99.9576 220.577 li
99.9576 221.33 li
100.492 220.754 101.074 220.466 101.703 220.466 cv
102.061 220.466 102.337 220.6 102.529 220.868 cv
102.721 221.135 102.817 221.515 102.817 222.009 cv
102.817 227.827 li
f
105.891 227.918 mo
105.397 227.918 105.056 227.783 104.868 227.511 cv
104.681 227.24 104.584 226.843 104.581 226.32 cv
104.581 221.189 li
103.705 221.189 li
103.705 220.577 li
104.581 220.577 li
104.581 218.335 li
105.499 218.335 li
105.499 220.577 li
106.706 220.577 li
106.706 221.189 li
105.499 221.189 li
105.499 226.235 li
105.499 226.602 105.542 226.854 105.627 226.991 cv
105.713 227.127 105.887 227.196 106.148 227.196 cv
106.315 227.196 106.487 227.179 106.663 227.147 cv
106.663 227.839 li
106.389 227.892 106.132 227.918 105.891 227.918 cv
f
111.304 227.937 mo
110.941 227.937 110.663 227.802 110.471 227.533 cv
110.279 227.263 110.184 226.881 110.184 226.387 cv
110.184 220.577 li
111.108 220.577 li
111.108 226.198 li
111.108 226.565 111.163 226.827 111.273 226.982 cv
111.384 227.137 111.557 227.214 111.794 227.214 cv
112.206 227.214 112.635 226.978 113.08 226.504 cv
113.08 220.577 li
113.998 220.577 li
113.998 227.827 li
113.08 227.827 li
113.08 227.025 li
112.541 227.633 111.949 227.937 111.304 227.937 cv
f
117.122 227.918 mo
116.627 227.918 116.287 227.783 116.099 227.511 cv
115.911 227.24 115.815 226.843 115.811 226.32 cv
115.811 221.189 li
114.936 221.189 li
114.936 220.577 li
115.811 220.577 li
115.811 218.335 li
116.729 218.335 li
116.729 220.577 li
117.936 220.577 li
117.936 221.189 li
116.729 221.189 li
116.729 226.235 li
116.729 226.602 116.772 226.854 116.858 226.991 cv
116.944 227.127 117.117 227.196 117.378 227.196 cv
117.546 227.196 117.717 227.179 117.893 227.147 cv
117.893 227.839 li
117.62 227.892 117.362 227.918 117.122 227.918 cv
f
122.522 227.827 mo
121.598 227.827 li
121.598 217.674 li
122.522 217.674 li
122.522 227.827 li
f
125.26 227.943 mo
124.835 227.943 124.486 227.787 124.212 227.474 cv
123.939 227.163 123.802 226.776 123.802 226.314 cv
123.802 226.074 123.823 225.858 123.863 225.668 cv
123.904 225.478 123.98 225.299 124.093 225.132 cv
124.205 224.965 124.328 224.817 124.46 224.688 cv
124.593 224.56 124.782 224.423 125.027 224.278 cv
125.272 224.133 125.517 223.999 125.762 223.877 cv
126.006 223.754 126.327 223.606 126.723 223.43 cv
126.723 222.91 li
126.723 222.245 126.66 221.786 126.533 221.535 cv
126.407 221.284 126.17 221.159 125.823 221.159 cv
125.153 221.159 124.819 221.573 124.819 222.401 cv
124.819 222.664 li
123.913 222.634 li
123.913 222.516 123.914 222.442 123.918 222.414 cv
123.947 221.732 124.124 221.237 124.451 220.928 cv
124.778 220.621 125.251 220.466 125.872 220.466 cv
126.513 220.466 126.968 220.656 127.237 221.036 cv
127.507 221.415 127.642 222.024 127.642 222.861 cv
127.642 226.387 li
127.642 226.971 127.664 227.451 127.709 227.827 cv
126.895 227.827 li
126.76 226.823 li
126.649 227.141 126.463 227.407 126.2 227.622 cv
125.936 227.835 125.623 227.943 125.26 227.943 cv
126.723 224.037 mo
126.606 224.097 li
126.407 224.204 126.253 224.286 126.147 224.342 cv
126.041 224.4 125.914 224.471 125.765 224.557 cv
125.616 224.642 125.504 224.714 125.431 224.771 cv
125.357 224.829 125.273 224.898 125.177 224.979 cv
125.081 225.061 125.012 225.137 124.969 225.208 cv
124.926 225.281 124.882 225.363 124.837 225.456 cv
124.792 225.551 124.761 225.65 124.745 225.753 cv
124.729 225.858 124.721 225.973 124.721 226.1 cv
124.721 226.454 124.8 226.719 124.959 226.893 cv
125.119 227.066 125.319 227.153 125.56 227.153 cv
125.805 227.153 126.03 227.069 126.236 226.899 cv
126.442 226.73 126.604 226.529 126.723 226.295 cv
126.723 224.037 li
f
131.206 227.943 mo
130.728 227.943 130.297 227.712 129.914 227.251 cv
129.914 227.827 li
128.995 227.827 li
128.995 217.674 li
129.914 217.674 li
129.914 221.176 li
130.297 220.703 130.758 220.466 131.297 220.466 cv
131.567 220.466 131.803 220.521 132.005 220.631 cv
132.206 220.742 132.366 220.885 132.482 221.06 cv
132.599 221.236 132.692 221.455 132.764 221.715 cv
132.835 221.977 132.882 222.235 132.905 222.49 cv
132.927 222.746 132.938 223.034 132.938 223.357 cv
132.938 224.887 li
132.938 225.271 132.922 225.614 132.89 225.916 cv
132.857 226.218 132.8 226.499 132.718 226.758 cv
132.636 227.017 132.53 227.232 132.399 227.401 cv
132.269 227.571 132.104 227.704 131.904 227.799 cv
131.704 227.895 131.471 227.943 131.206 227.943 cv
131.04 221.189 mo
130.668 221.189 130.293 221.374 129.914 221.745 cv
129.914 226.688 li
130.248 227.038 130.628 227.214 131.052 227.214 cv
131.44 227.214 131.698 227.034 131.827 226.672 cv
131.956 226.311 132.02 225.72 132.02 224.9 cv
132.02 223.357 li
132.02 222.58 131.956 222.026 131.827 221.691 cv
131.698 221.356 131.436 221.189 131.04 221.189 cv
f
136 227.943 mo
135.629 227.943 135.316 227.883 135.063 227.765 cv
134.81 227.647 134.611 227.467 134.466 227.227 cv
134.321 226.986 134.218 226.703 134.157 226.378 cv
134.096 226.054 134.065 225.662 134.065 225.206 cv
134.065 223.198 li
134.065 222.275 134.208 221.589 134.494 221.14 cv
134.78 220.691 135.282 220.466 136 220.466 cv
136.723 220.466 137.226 220.69 137.51 221.137 cv
137.793 221.583 137.936 222.271 137.936 223.198 cv
137.936 225.206 li
137.936 225.662 137.905 226.054 137.843 226.378 cv
137.782 226.703 137.679 226.986 137.534 227.227 cv
137.389 227.467 137.19 227.647 136.937 227.765 cv
136.684 227.883 136.372 227.943 136 227.943 cv
136 221.152 mo
135.845 221.152 135.71 221.172 135.596 221.213 cv
135.482 221.254 135.388 221.321 135.314 221.412 cv
135.241 221.504 135.182 221.602 135.137 221.706 cv
135.092 221.81 135.058 221.946 135.036 222.114 cv
135.013 222.281 134.999 222.439 134.993 222.588 cv
134.987 222.737 134.984 222.924 134.984 223.148 cv
134.984 225.254 li
134.984 225.479 134.987 225.666 134.993 225.815 cv
134.999 225.964 135.013 226.123 135.036 226.289 cv
135.058 226.458 135.092 226.593 135.137 226.697 cv
135.182 226.801 135.241 226.899 135.314 226.991 cv
135.388 227.083 135.482 227.149 135.596 227.19 cv
135.71 227.231 135.845 227.251 136 227.251 cv
136.184 227.251 136.339 227.217 136.466 227.15 cv
136.592 227.083 136.691 226.997 136.763 226.896 cv
136.834 226.793 136.888 226.649 136.925 226.461 cv
136.962 226.273 136.985 226.093 136.996 225.922 cv
137.005 225.75 137.011 225.529 137.011 225.254 cv
137.011 223.148 li
137.011 222.874 137.005 222.653 136.996 222.481 cv
136.985 222.309 136.962 222.129 136.925 221.942 cv
136.888 221.754 136.834 221.609 136.763 221.507 cv
136.691 221.406 136.592 221.321 136.466 221.253 cv
136.339 221.186 136.184 221.152 136 221.152 cv
f
140.188 227.827 mo
139.27 227.827 li
139.27 220.577 li
140.188 220.577 li
140.188 221.575 li
140.409 221.207 140.667 220.936 140.963 220.76 cv
141.259 220.584 141.558 220.497 141.86 220.497 cv
142.02 220.503 li
142.02 221.495 li
141.889 221.442 141.742 221.415 141.579 221.415 cv
140.991 221.415 140.527 221.697 140.188 222.26 cv
140.188 227.827 li
f
144.757 227.943 mo
144.063 227.943 143.562 227.729 143.256 227.3 cv
142.95 226.871 142.797 226.139 142.797 225.102 cv
142.797 223.271 li
142.797 222.565 142.87 222.004 143.015 221.59 cv
143.16 221.175 143.372 220.885 143.651 220.717 cv
143.931 220.55 144.301 220.466 144.763 220.466 cv
145.069 220.466 145.33 220.506 145.547 220.585 cv
145.763 220.665 145.942 220.779 146.085 220.925 cv
146.228 221.073 146.342 221.272 146.425 221.523 cv
146.509 221.774 146.567 222.051 146.6 222.355 cv
146.632 222.66 146.649 223.026 146.649 223.454 cv
146.643 224.11 li
143.716 224.11 li
143.716 225.194 li
143.716 225.945 143.788 226.475 143.933 226.786 cv
144.078 227.096 144.351 227.251 144.75 227.251 cv
145.069 227.251 145.314 227.15 145.485 226.948 cv
145.657 226.746 145.743 226.379 145.743 225.849 cv
145.743 225.346 li
146.643 225.346 li
146.643 225.75 li
146.643 226.453 146.496 226.994 146.202 227.373 cv
145.908 227.753 145.426 227.943 144.757 227.943 cv
144.757 221.152 mo
144.369 221.152 144.099 221.287 143.945 221.556 cv
143.792 221.826 143.716 222.338 143.716 223.093 cv
143.716 223.583 li
145.743 223.583 li
145.743 222.983 li
145.743 222.73 145.736 222.52 145.724 222.352 cv
145.712 222.185 145.687 222.019 145.647 221.853 cv
145.609 221.688 145.555 221.558 145.485 221.464 cv
145.416 221.371 145.32 221.295 145.198 221.238 cv
145.075 221.181 144.928 221.152 144.757 221.152 cv
f
445.28 84.3168 mo
436.341 79.1547 li
435.512 78.6762 435.023 77.4907 435.25 76.5082 cv
435.477 75.5248 436.333 75.1157 437.163 75.5942 cv
446.103 80.7563 li
446.932 81.2348 447.42 82.4203 447.193 83.4037 cv
446.967 84.3862 446.11 84.7953 445.28 84.3168 cv
cp
.147219 .0154116 0 0 cmyk
f
466.575 96.6118 mo
453.394 89.0004 li
452.563 88.5219 452.075 87.3364 452.303 86.353 cv
452.529 85.3696 453.386 84.9614 454.215 85.4399 cv
467.397 93.0512 li
468.227 93.5297 468.715 94.7153 468.488 95.6977 cv
468.261 96.6811 467.404 97.0903 466.575 96.6118 cv
cp
f
429.697 126.045 mo
420.758 120.884 li
419.928 120.406 419.439 119.22 419.667 118.237 cv
419.894 117.253 420.75 116.845 421.579 117.324 cv
430.52 122.485 li
431.349 122.964 431.837 124.149 431.61 125.132 cv
431.383 126.116 430.526 126.525 429.697 126.045 cv
cp
f
448.68 137.005 mo
435.498 129.395 li
434.668 128.915 434.18 127.731 434.407 126.747 cv
434.634 125.764 435.49 125.355 436.319 125.834 cv
449.502 133.445 li
450.331 133.924 450.819 135.109 450.593 136.092 cv
450.365 137.076 449.509 137.485 448.68 137.005 cv
cp
f
418.909 77.5453 mo
413.324 74.3207 li
412.494 73.8412 412.006 72.6567 412.233 71.6733 cv
412.46 70.6899 413.316 70.2807 414.146 70.7602 cv
419.73 73.9848 li
420.56 74.4633 421.049 75.6489 420.821 76.6313 cv
420.595 77.6147 419.738 78.0239 418.909 77.5453 cv
cp
f
436.12 95.937 mo
419.058 86.0854 li
418.228 85.6059 417.739 84.4213 417.967 83.4379 cv
418.193 82.4545 419.05 82.0453 419.879 82.5248 cv
436.942 92.3764 li
437.771 92.8549 438.26 94.0405 438.033 95.0239 cv
437.807 96.0063 436.95 96.4155 436.12 95.937 cv
cp
f
421.198 104.23 mo
415.613 101.005 li
414.784 100.527 414.296 99.3412 414.522 98.3578 cv
414.749 97.3745 415.605 96.9662 416.436 97.4448 cv
422.02 100.669 li
422.85 101.148 423.338 102.333 423.11 103.317 cv
422.884 104.3 422.027 104.708 421.198 104.23 cv
cp
f
451.553 155.573 mo
436.637 146.961 li
435.808 146.482 435.319 145.297 435.546 144.314 cv
435.772 143.331 436.629 142.921 437.459 143.401 cv
452.375 152.012 li
453.204 152.492 453.692 153.677 453.466 154.66 cv
453.238 155.643 452.382 156.052 451.553 155.573 cv
cp
f
415.754 117.996 mo
412.169 115.926 li
411.34 115.447 410.852 114.261 411.078 113.279 cv
411.306 112.295 412.162 111.886 412.991 112.366 cv
416.576 114.435 li
417.405 114.914 417.894 116.099 417.667 117.082 cv
417.439 118.066 416.583 118.474 415.754 117.996 cv
cp
f
413.177 133.416 mo
408.726 130.846 li
407.896 130.368 407.407 129.182 407.635 128.199 cv
407.861 127.215 408.718 126.807 409.547 127.286 cv
413.999 129.856 li
414.828 130.334 415.316 131.52 415.09 132.503 cv
414.862 133.487 414.006 133.895 413.177 133.416 cv
cp
f
430.495 143.415 mo
418.759 136.639 li
417.929 136.16 417.44 134.975 417.668 133.992 cv
417.895 133.008 418.751 132.599 419.58 133.079 cv
431.317 139.855 li
432.146 140.333 432.635 141.519 432.408 142.502 cv
432.181 143.485 431.324 143.894 430.495 143.415 cv
cp
f
415.441 143.178 mo
407.003 138.306 li
406.174 137.828 405.686 136.642 405.912 135.659 cv
406.14 134.675 406.995 134.267 407.825 134.746 cv
416.264 139.618 li
417.093 140.097 417.581 141.282 417.354 142.265 cv
417.128 143.248 416.271 143.658 415.441 143.178 cv
cp
f
464.352 162.998 mo
458.932 159.87 li
458.103 159.391 457.614 158.206 457.841 157.222 cv
458.068 156.24 458.925 155.831 459.754 156.309 cv
465.174 159.438 li
466.003 159.917 466.491 161.102 466.265 162.085 cv
466.037 163.069 465.181 163.478 464.352 162.998 cv
cp
f
441.972 116.224 mo
427.056 107.612 li
426.227 107.133 425.737 105.948 425.965 104.964 cv
426.191 103.981 427.048 103.573 427.878 104.051 cv
442.794 112.664 li
443.623 113.142 444.111 114.328 443.885 115.311 cv
443.657 116.293 442.801 116.703 441.972 116.224 cv
cp
f
443.332 108.555 mo
417.335 93.5453 li
416.506 93.0668 416.018 91.8813 416.244 90.8979 cv
416.472 89.9145 417.328 89.5063 418.157 89.9848 cv
444.154 104.995 li
444.983 105.473 445.472 106.659 445.245 107.642 cv
445.018 108.624 444.162 109.034 443.332 108.555 cv
cp
f
428.808 117.078 mo
413.892 108.465 li
413.062 107.987 412.573 106.801 412.801 105.818 cv
413.027 104.835 413.884 104.426 414.713 104.905 cv
429.629 113.517 li
430.459 113.996 430.947 115.181 430.72 116.164 cv
430.493 117.148 429.637 117.556 428.808 117.078 cv
cp
f
453.285 122.755 mo
447.865 119.626 li
447.036 119.148 446.548 117.962 446.774 116.979 cv
447.002 115.996 447.858 115.587 448.688 116.066 cv
454.106 119.195 li
454.937 119.674 455.425 120.859 455.197 121.842 cv
454.971 122.826 454.114 123.235 453.285 122.755 cv
cp
f
506.781 119.825 mo
474.688 101.295 li
473.858 100.817 473.37 99.6313 473.598 98.6479 cv
473.824 97.6645 474.681 97.2563 475.51 97.7348 cv
507.604 116.264 li
508.433 116.743 508.921 117.928 508.694 118.912 cv
508.467 119.895 507.61 120.303 506.781 119.825 cv
cp
f
428.377 133.738 mo
410.447 123.386 li
409.618 122.907 409.129 121.722 409.356 120.739 cv
409.583 119.755 410.439 119.346 411.269 119.826 cv
429.199 130.177 li
430.028 130.657 430.517 131.841 430.29 132.825 cv
430.063 133.808 429.207 134.217 428.377 133.738 cv
cp
f
428.228 74.4711 mo
415.046 66.8608 li
414.217 66.3813 413.729 65.1967 413.955 64.2133 cv
414.183 63.2299 415.038 62.8207 415.868 63.3002 cv
429.05 70.9106 li
429.879 71.3891 430.367 72.5746 430.141 73.558 cv
429.914 74.5414 429.058 74.9496 428.228 74.4711 cv
cp
f
413.093 150.277 mo
397.826 141.462 li
396.996 140.983 396.508 139.798 396.735 138.815 cv
396.962 137.831 397.818 137.422 398.647 137.902 cv
413.915 146.716 li
414.744 147.195 415.232 148.38 415.006 149.364 cv
414.778 150.346 413.922 150.755 413.093 150.277 cv
cp
f
515.583 207.458 mo
506.644 202.296 li
505.813 201.818 505.325 200.632 505.553 199.649 cv
505.779 198.666 506.636 198.257 507.465 198.736 cv
516.405 203.898 li
517.234 204.376 517.723 205.562 517.496 206.544 cv
517.269 207.528 516.412 207.937 515.583 207.458 cv
cp
f
522.006 177.349 mo
504.943 167.497 li
504.113 167.019 503.625 165.833 503.853 164.85 cv
504.079 163.867 504.936 163.458 505.765 163.937 cv
522.828 173.789 li
523.657 174.267 524.146 175.453 523.919 176.436 cv
523.692 177.419 522.836 177.828 522.006 177.349 cv
cp
f
507.084 185.642 mo
501.499 182.417 li
500.67 181.939 500.182 180.753 500.408 179.77 cv
500.635 178.788 501.491 178.378 502.321 178.857 cv
507.905 182.081 li
508.735 182.56 509.224 183.746 508.996 184.729 cv
508.77 185.712 507.913 186.121 507.084 185.642 cv
cp
f
501.64 199.408 mo
498.055 197.338 li
497.226 196.859 496.737 195.674 496.964 194.691 cv
497.191 193.707 498.048 193.298 498.877 193.778 cv
502.462 195.847 li
503.291 196.326 503.779 197.511 503.553 198.495 cv
503.325 199.478 502.469 199.886 501.64 199.408 cv
cp
f
527.857 197.636 mo
512.941 189.024 li
512.112 188.545 511.623 187.36 511.851 186.376 cv
512.077 185.394 512.934 184.985 513.764 185.463 cv
528.68 194.076 li
529.509 194.554 529.997 195.74 529.771 196.723 cv
529.543 197.706 528.687 198.115 527.857 197.636 cv
cp
f
529.218 189.967 mo
503.221 174.957 li
502.392 174.479 501.903 173.293 502.13 172.31 cv
502.357 171.327 503.214 170.918 504.043 171.397 cv
530.04 186.407 li
530.869 186.885 531.357 188.071 531.131 189.054 cv
530.903 190.038 530.048 190.446 529.218 189.967 cv
cp
f
514.693 198.49 mo
499.777 189.878 li
498.947 189.399 498.459 188.213 498.687 187.231 cv
498.913 186.247 499.77 185.838 500.599 186.318 cv
515.515 194.929 li
516.345 195.409 516.833 196.593 516.605 197.577 cv
516.379 198.56 515.522 198.969 514.693 198.49 cv
cp
f
514.263 215.151 mo
496.333 204.798 li
495.504 204.32 495.015 203.134 495.242 202.151 cv
495.469 201.167 496.325 200.759 497.155 201.238 cv
515.085 211.59 li
515.914 212.069 516.402 213.254 516.176 214.237 cv
515.949 215.22 515.093 215.629 514.263 215.151 cv
cp
f
479.049 369.977 mo
458.049 357.759 li
456.277 356.736 456.499 354.949 458.546 353.767 cv
478.562 342.105 li
480.607 340.923 483.703 340.795 485.476 341.819 cv
506.475 354.037 li
508.247 355.06 508.024 356.847 505.979 358.029 cv
485.963 369.691 li
483.916 370.872 480.821 371 479.049 369.977 cv
cp
.280034 .073518 .0233463 0 cmyk
f
512.889 332.094 mo
512.889 332.094 li
512.889 327.022 li
485.95 327.007 li
486.137 327 li
484 325.767 480.267 325.921 477.8 327.346 cv
478.598 327.013 li
451.635 326.998 li
451.635 332.413 li
451.574 333.247 452.039 334.053 453.066 334.646 cv
478.388 349.379 li
480.524 350.613 484.257 350.457 486.725 349.034 cv
510.859 334.971 li
512.282 334.15 512.969 333.085 512.889 332.094 cv
cp
.70544 .83624 0 0 cmyk
f
482.269 326.174 mo
480.704 326.212 479.081 326.606 477.8 327.346 cv
478.598 327.013 li
451.635 326.998 li
451.635 332.413 li
451.574 333.247 452.039 334.053 453.066 334.646 cv
478.388 349.379 li
479.414 349.972 480.811 350.241 482.257 350.206 cv
482.269 326.174 li
cp
.587366 .778347 0 0 cmyk
f
454.687 326.999 mo
451.635 326.998 li
451.635 332.413 li
451.574 333.247 452.039 334.053 453.066 334.646 cv
454.687 335.581 li
454.687 326.999 li
cp
.474891 .687251 0 0 cmyk
f
478.924 349.642 mo
480.767 350.431 483.433 350.387 485.588 349.566 cv
485.588 342.478 li
478.924 342.478 li
478.924 349.642 li
cp
.672023 .819516 0 0 cmyk
f
478.388 344.009 mo
453.066 329.277 li
450.93 328.042 451.197 325.888 453.665 324.463 cv
477.8 310.402 li
480.267 308.977 484 308.822 486.137 310.056 cv
511.457 324.789 li
513.595 326.022 513.326 328.177 510.859 329.602 cv
486.725 343.664 li
484.257 345.088 480.524 345.243 478.388 344.009 cv
cp
.634821 .805264 0 0 cmyk
f
483.104 325.003 mo
475.657 320.673 li
474.663 320.099 474.663 319.167 475.657 318.593 cv
476.652 318.019 478.267 318.019 479.261 318.593 cv
486.708 322.923 li
487.703 323.497 487.703 324.429 486.708 325.003 cv
485.714 325.578 484.1 325.578 483.104 325.003 cv
cp
.474891 .687251 0 0 cmyk
f
493.929 331.331 mo
489.408 328.664 li
488.413 328.089 488.413 327.158 489.408 326.583 cv
490.402 326.009 492.017 326.009 493.012 326.583 cv
497.532 329.25 li
498.526 329.825 498.526 330.757 497.532 331.331 cv
496.537 331.906 494.924 331.906 493.929 331.331 cv
cp
f
472.666 327.664 mo
468.146 324.997 li
467.15 324.422 467.15 323.49 468.146 322.915 cv
469.14 322.341 470.754 322.341 471.749 322.915 cv
476.27 325.583 li
477.264 326.158 477.264 327.089 476.27 327.664 cv
475.274 328.238 473.661 328.238 472.666 327.664 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 21.0.0
%%For: (\720\763\761\753\740\755 \716\753\745\743\756\742\750\767 \725\756\753\777\745\742) ()
%%Title: (Data_processing_02.eps)
%%CreationDate: 12/17/2018 3:20 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KB3X-3g@4ubYA=/jZO$pe39h_S$??`P"TfsF'4D8f0Xg#IHZD;4^\tjhN$K>YAN)WX=i\?i1n(t%Rut(b<+ttDeQV"Gd/;4)
%DT2=.gkt>'4m0YZ-+)QZ>?Z>M4,>qMrUdblKL;<<]^BKGcHR;s@I\']K'/GgQ/5NjkjGpLQ)N.\2XAV2B/Ncg*]A&NiAhkaF75iL
%^%ka4:_,(CE/q\IT*2QJ'K"QG@5mB12/4sDkiC>93"#r+n$7AJ;5s;id6='B<B%,>G__<8'Dc\cFh7W5bc2mU`SGamBkUOg>$b=&
%0Qd*L#Z(1GqP$7pI.9&LZ:/[,_aiq\;:s/a@2\QK_5I6/#b=1sr6t04Vu&H3^ZdGbLJ]R<LYZ.?!H8#En61R!\PdMbp?GpQ,a\.T
%YMK(9*9(CEYD"PK3m5WZF>?*1?i3Q@is,0[dID_7mJ8d>DWK$3`UiHbQZ*Fe4#gEhZJi#2:XH:>J1\qI,dF3%CgDb^bK^X>"eKoP
%?+&s+2e%V!i(SdL"PW#Z4EFW"3Z/'R:DCC&(H1sV*!*C`M7V[-Fb_;$Korj.o+H>-riAP<Xl`qX@5VdmZ1H`+_qKT+]GqB:TP:_-
%TN@3.Y8al%TP./ka3<@V<hh_!Prq4.LF?kNK%%?uE>5k-UFrKDZee(+Y3+MaQC#:cSa_!Um\g0"PJ(#H3,6/N5Z\q0.,%jbQ+'K4
%aVfBQam$[LF.R5!=jSbq1X\UaVSM_@1c:=ZrpPK"m'UWl[DqKh$_lYu\l>;]G-.3HO"bT,^C`q\2tc@557'<2U"bPF$5;5T.IJN-
%Bj,u[:sO'&dCVGVKJb$MiT=D?O$FF(J>X*)6YP%&b5aa)-Wg*"-.UT)T5!;sj5@Q4iHqi.>"oYp9bWSV-6>$=4rOQG3hPOofZeF*
%QfDI4a2)YR'*N&Hcbhr<LOD;[8#L\TG4Ri_L>VJ@]+p7VX]WM?Ma]a+/7P4o^nX3R3-9HX@##l_P8Is;R3CQMq'_i7NghH8pjq64
%07:fXLmPuEO!.ErNdVHfHmd\a3V[.'$fCIj,),JF'GHC[7\oOEE5sWaN-O<_9N-ZG]-1qaNdZKZgD#t[Gc!=HP"CArHn&XP#Vc#^
%*R@Ns.orW%r"$C_NqeW%0d@QW4sh/&?a(L/W&W%tiKFjDI)fTM+Njf"9Am&]hm"-[M!rP]()J;M6\'5-=WlXf,Uq;!LeN0^`l(f_
%@I+j4!hM^<R<`Vf2X[==@37m6aXA?(V_dI_(idK<m)H>k3&4e7A:2E]L`i4jUg.UHPE4m78QXoQKLX'(!RDt-6D9W3nWp0#n1j<U
%AgSQ"Y8F&(A+6amR\,Au!VeYSPJFN!Z=Gc[R6Wl&5lXrN'CFt(i,kg/M4Q/*-$m@iY&keK6omJn-DgME[hZ"YDBMW1S90'D&d>E>
%=j>.mo;T=(d6IPnVG`c\%"f':TD[$@pil;Ns58"Rk,.4'rs?NVP>D2@]):<*j4R`6chI63o#^n="ob'?nio+I<8se9PQ-okr&a`8
%Ip2bGg3Ma&^,(97\,+(9LneAn/\BpV"MK9J'2HTO6-0..'F]78o-a+<Ufdl;!sBp`=:dno%QAA5Spe\RU7W?5,Q`AiLb:B32')ra
%I3a&nK]r_mmDI*T8qnJ\$90`Jqabusn3,A]TG)FOIuJmbG\ek/0muk"ht'!%@ffM^6'2B3(cNB5@R1G1*!4btbOuDAA`tBt5L/X5
%GE;PPJf&tZ6q@iE6lpFRcn1FmJn([4o[1hg2q#33r/;3g/ngiP]Y_^s;!')29)g9amReU-VL"2Q5?VfX!)LI0+;!cZd@=>GCkTW!
%U^L%TKiWA`XJ&EN*BPM'FYQLU7]K,hM?FCq!t=Y)@);(s+N\5VP-#=g!#J+$`AB(^E97<4BoU_ql_H&+VULV]OD.m[i#"jAMbYW>
%bC-2P-_m#!*>)2m.Wo;@3fjp*4:DmbJ"s`)&kJinpq&XSqIj8p4_Y>-89$eS.YPQpUZ@Je0;1.'ec:d=BIV/>._rhf:mrCbW"CCs
%(gE1*&dtb7]M^:K[HJE!.8sBVLgcl!O.SI-6KH*rMh`Y-V*OWKj+)N[d_NT37'n4=kR)rq?t^P=6kR`gA_g-Z!BqMMs(ne'TH@-&
%_:'Cj9I*=lY#L1*1ZQ-t&5Jms:+cQ3=`&-qf2?_L58G47C7B=VS1FEd59FZ*IYWakGDiO]Yf%R_c8.Re8t[B#Z9C5Na=%4"V!4Ui
%qZ(+'M>uMppeR,B)0cYK7@F%(Bu^L:IKHI^.o/);18<DNHsnqZE06uSnj/AY]U+GR0!uWa7t]d4J;.dVT*u`hU9Tk.d3+cH(fM7*
%`8A$$AM>?7c*;[BRT9djFEB[%YuHA(&4.+N/mlHS+n.T&1<u^0#omcuP(b<*(S9#nEHVFeKmaL^%suu?Bp#hNOT]ZIfbr^%5W"PU
%`AMue`Jb[)LCNMu8]?4l81qiPfEdQ>%%^2#,'7(qo@OK-&0)?,6*3%-Cj.H6Sf#W\K7jW+i]e=8U^U6pP)El.E*9-,>fZr?73LPt
%ggNC5%k2PhGO1&fa5eH&>pL?hmul3M8H4]:@[/M]r^[mTp-h;L$50U!=ZT,c#WS.S#??N_L.S:N+dK?p\GV0rM$1bQg>i6m_,I8Y
%N9'qj7o6b58D+/5LI`6"@2>;>E^PL=d,%2cK5W@m#kENQ.$(^Wi*8_o-/C@>-5D*u+[Z]?)JHqD.LUlMQUKkq4?ugXMZ=JO+doKl
%R*1H,n"@LJn:X[2dDPfL?eJARVIn6B-A!%<TO\n*:c+jLRN93nRRJ;hA$RI*3<Vc:XqN:<OFi>fHeM:XAF3V+$do=l+nA?9$A4#N
%6ZH]]@]3+/%@0$ZQio<*P7/`._*UfX,-Cp:JY.OMBt0u-4;%srcSHC@/:m+nPI]=S8BM%KVMa5,^Bm8'=b$:mm@O7C`U0gK'1l8,
%%D`h:.g_pN!)9(dRG!L[R[C,_nE];4Khc/%.qXmj9W;tl5daJO0I15f62=XGE*h-_BuBE;#tLpg3<nbA/dtqjGhFL]'a=YS&A[qY
%G),i')3nj8a9LaXb_>#]Pl(CtXs+15%C\Y(Q'Z"G`'I&F3"Sl16,1Z?LW2W#\r*2;8:@/+OLVBO/8IT8S6#uL=[po^$ugrEg5g#!
%`ckmBh*<^G,=l+3SXWpaPVIjVl35:Rrfk0-;^i$-J:_3-J:lRC%$qT<;8P5p+Jlt$RHHqR&6#qH'"\qN_F>J7!fetg1#MefKnKjl
%6)3/1?j4Yjr9i;*ANVD3IYqDXd,-,u-i3^R!RNZM%(:"=RnLanqGX#OPg"a*SET!\Orf]HA"S]tJnaTu/4#K=ZmIVo%efWA*g"P>
%#rgnldfNc*ppq!9Wd*M:1;6N'MThfm=G<'2<<U\<=B3^%@2nHA+!9-$VkQ]jHh?;_'TnEcK#Cp5[0ls\O`?Qq+g&kJa`]+6']gH"
%87WTDOQ[hCM2@V9.&k86PLWU"%lBsCM6J?^c4:QRU4Q]NTDn&bB_l>8Ms+%ajT0Ii%N-]q2%l8n<(TPT[37!JabZ%PW2XT)=rKB[
%89(2njFXBY2*JAlb!iR\`b[UHB46Ap:qMFfj&[\,VNbamMK-F,RfcJ38O#Wddj=XjL'kVj%u"u@2iHnG&jj,X)$G4`<5R;tAW@E[
%^iiG@B9NYBSmT(-+Q_WohM/RmBklGB.sWET-F>D>iTnIG,T+^pMt)<OH$58!_6t1ZUp2bKdRA*_.s"$bT;<$0`XpY]_rt[E,+8n@
%/f.gN0$7]M``uE[_b)m<,@aC!HO<C`6U23UkeTQ9m3sgE*1UF7J?fV?HMlq@M_;Y7b/Y&h&79"]%$FSI.X`26]DYuHrnBPJlq/P[
%(ho=]'qbPp3-t@?[SKZKFZiRK"W;#AJo1Qr!^W/](sN6"97hGC,197";e6V?B[V4GDNW-ERqJA7`RQdroil6HYq"sHfms5][em!k
%_Nfd*&0]5:\3fm*D*=/48:nLmJoLsF8JUQ<*$-k_SC\>AUu<V">[dY<"<:iX$]%e8qXiN?InAmY8frimQQVG2#n7+QOsJBDj5PS;
%-e]t#D=V=dS43;HM(_8L-'-k-B:;LZ?9n&X$VM>0(TFp(F=F`@4@#`niGr9+Wl,LWU8T:K:rsb>02tu:!YNnPM?U9!UEK3J;.PhL
%4RNkb!^;_$+B-D(8:MM8BO2fr".f6H,1B>/-9/QWJV6f%Bb$fO\4D$F<7VUbK0Z=64r#u+2/YVh<5?F$(OH.`CZ+I@PAMp5@0VL;
%kWW(A<L+[O^/VZT7FGY%K\2Or\>e.&"">I-!45kr1Q;L/(a`^</qHMsK0%!HE_]1MC117boI$V3?W3Z%8sY.G"*"JLBC$gZVQFXV
%\o\O\S7la@8]sI,.fWtGVn`gQ.P_L(*lu)]Q$q*^]!%n^i/32g3$-OKM(Y5L&++8^)j!dZ!Y9taoSFjup*tJoi%Zc.6JaSR7C.g7
%.&rDm[lBZg9G?L^!:HW]<61Ld,`99IR=GNNU`,d:%(1c(MHh^mI"mTVO@j1EZ&LLf8jZ"i(IFdj?K%O'JUJNhKh8U*7Rr#o`<MA*
%@KCqqQ;o17SGY"`&#XJm%L%XcZ&+c,AH*aL67%Y0\>Y/$[3RcJKS._fR83h8/--`-&FLBs+TD>0Vr9>\]S<\mA14FPJce%Z([D19
%W&KZ4MABGU;AD!KAY)<.6]p<p*3(:;("jE\R!*tqbu7V.h,Xh8_355Rd="B`#I__#dWUDA/r^UtB/t$qHLD__gAldVTrhrWi51-2
%OP!s+PT3I@J]L.#cs'L@R9VIO19+#:l1!jkOQ^\P9PH\kTS/Uk\`@=K?J4c4-4;PZiV&ZKXA2]SX8[LW"s)GV(!e.jP+eKh]-uZ#
%@k.#Dg_?:[Rk4RX4o.C"E?\0Ii[PCLFTko$lmkNsd:imNj=lJ/Yr##<%9c1s6tP;[kn8-("HoKHCa>a?j&N2H`_&hU\5+eW][5^d
%<FT_tZKV>LHAY=I<AMMC6;n#dV5jW,Fe(;0+(l8Z'iif4LT)cT9SaHq@7[)c:RmtJbJY_T(iHRF-:>^Bjt]LA.L6oq5"_b'MWdE]
%dm,CZBVOB`om^ShSc@[q/6+EH.If6(I(aX+&uWN4YarRX-+#M#,qY$_3Fau[,;dON>m#Q*+-EomaO\:/`c93*O5%];VYkD>J1-\7
%oQj'C;2nY.8$M<jILlGNkrY$34IB,Fe.]"jp&>IT/rR:j94VgQ*B*Fq,?Zj.pI5uM(1b$6SeL-5htK_#Q7'UnfgLXQN.[*!bU+!#
%l8sm!UCB._j1%;ro4Y?JI>lDgTSfIk+/&rUF-IY2!!C]s47+&T?i*$<1la_@J5Uo%oZ46Ml'BJO.dgo7?]3/Zgk:]7R<b_%I_/a$
%T$*nN%m"kNFaL7JGlou_S@i[T$+1!*VZ-P'Q[I"?frt/.i't?3CMbuTR_Sm2lrT[S;/W;_LiRks7n<%2Q9UhLp(;='rY*RIe'[.#
%J3R_Vi6Qs4)a8tK!T9KmC(r#HA`Ua4li)R*%kj\qjl.B,bsVE2g##2_DR3XGDcG!KSUQ871q/U=8*<+,$eoKbf7N%kJ]DhZ^_63g
%St'KQD]@DI"Xo<Mc^+gFTH:NV=5[?[WBRYY?]*-Z&BOno+`_4?&2'Y&Yh;&]@S%j'dnu@=E]dC5nRkg>[W$[:2@BN^oro%:;b[/e
%oD\h="*'$?>nTC(QiiWe)(j+-5@A(+,jN+g"EW)\["(fW5HcNS`"&b6RAL>'(V)jqC/d:pS3"7>'8\46Brh5(J/nWHB?I$6hlfeE
%oigN.d6tU=mKA*+#e4A8D:)gSGprG[\rfW7L<bn.3Aqr*F,>q)W!;u]*%fiUCImBfh5s]BdGagp2p*Ct`NW[PS[ZMf7BM_'[!S@%
%gekC\rsA<U;?EbLc:ln#9A0fn(L7?CPZ[ilCC+,I0e*VcJW%le'W,ctDX95_WdZ.hL7&l<7q&2>4<K38hsN6bs&N+YZ[T(D8QR,F
%WIY7@8cp]m(i@kS,[#ajkXm$s#*+-?L'=+X,Ga[hV9GCH=N1J1feA&@K[JnG2\A`_VR^`T"u4@.B0!EHiEm`2DEG8T$!moUI9(,_
%JL6/c=uYF`:%'HbV7aMf"hPO#AXTB;(1rMK1@S]RJUIUiFZOtX=o&"T4]c<mj6M\J=KOl6^'^M=9jZ`cVFA;MFQ'D7nq(4Q[K1"D
%J0>oF!Z:qgFYtjsEf?Ms)$%NL*\aMTbZpk<qemR*s6[qs^\NIfZkJ1oWU^B8GST>@"KukDU<K[2_+TQM!ACcedEBP]n%TSWHJr<M
%^-$YfE.pWP==DRt%'Q<8'K(."73d8Ln?Rppd4#EK@@8-VfV1kd=T#?*Y;3b0j,d<i91I#S=n&^i%_Y9P/U7VBWUTe'cNm#mlTYJX
%-G1nSL6n[GnFACX?6q2M!k]Q]?5Bd&eci]Kh:DZ.]rVH`!3_;9E/09(4C%51b4#a3h)%j]gu6*XG7Be\^sXfeY*ZFG@<n1=qeoN_
%.U.J+gEp5VANR>9qf^@>fn#n[&A:)aj#T@8[d4+u=,_!X!)NAENl2Q\Pi("a[IGn'FX5e`:S!E97GQuM^L=/j8+>`S)N"Lh`S]JG
%\"!4?kCjMskJlngoDR1lWV7LsA&a#)1h)E=54C=^^<D.p2=Rp%$V"Z0:0s[`jec?jlI@O2l3.M&,8TCA'Yhei=.ikK2!CRKOV\e0
%N]Za9l%LXcBE?HmkVt]Y#dP0kYT-*9+)")*Z7:HBN(nK9"Iin_2:B8uToCOQe\]TqQ0lu53POlbZ3[4XQj$e62pce<0MfFGH*/MW
%#@=iOH)>6PrgTg<kQPkW/HMe0V=/`5lO)7;,s'L4>i!p5DY5R^)?lK2CU-:c=:XCbr@?9R9NRXD,'3%s$`5?\H@^C/D0T4U1?!pV
%":P]t#c'$UnA9bG+.>MQV`l:+<mLs(-ccMGA.cZ)J9<]a7V]F];T*-?4:2$&E%`=$4,Z,X800Gid&\\mQ\bVEU-Dh&QZ0<P9.,EO
%i<gT_G_m`Z!e=/RL_4Y8n8N?k'ODj==s2Tn5`:03,66a@JC/uc(ps@b*I-dQIfBkJ"/%.<7/ZY+0Ojs>q#gOE!b`MAd/omHi,/Qd
%(]`GfO9#S3_?[B462V1R*8JluK2e,Xn!P;DK)?O52"Y9#0gI[eHkuQ.oN#PfT.JoVb9#mdPn]5SWJ!)XUC8lB@b[".AO5URe2XF;
%k_)VMS.#*>E#[`/>k1`U-q@,>@)u8\jJct5q>E8-GsT0E5i*sj;kcW[A3tg"gG9i?>/",>Td[rfbI/C85qlcYi4HdOOo$f+aFRHX
%=EGqElp3^Wh;7hZ2JL-<6tNcn)JMgJbs=BE"kZ0umc^?=^cM#1!T=CB*:P6"9JC7-\m'\m.1sDt:MWf2=;RD>J:a*&A/2lrHf1"i
%FL?Z>&97ig2%\k)q!91-6GDi<%nBE5gD1@L!8e8eh?nco-/9[GFRq)sW^-VBD4iD4X$C+<%"QnTTQgKFnc1EGnCbSh';3lq[2iX.
%!<r__#=U`h&9ZW_imKl^D)B?eZ;kG)W%=[KLM:PVD[Y52Jee4^\!.oWBEcFTmJ#KPh>/\E#:)KpbMo#6j>@>?,JRu$PRY:kNba2r
%j'>#[C`@:Q@s`LEnF0I;0FHY[jQ%Bl;Wo5;J/uYQ>2Bm`mGM9!1uOBh?g*Lf3@-$)7stu(DEAmJB6edKde'&@j_[L).EHu/^^)N`
%lWHQ`9_`(3%e'V8O:pmDd<*R_4?NaGcu">9CH5Znkk:&B6>1$7S4oAN;D`A:6J)"jiL>h"<q#%]FWST\F0"frmI&9CAi6=OV-4&k
%K+k].:H5_I>Q2rK]`A@>+Ra-u:4(fqF$KC)3r85e37t-L;6*dQ;1j03\]:2!DK6<G]&0dN%0r5hZoF/Y^X`;<j$T3-ESc2bT4,D\
%:H9Y1k`.nQ3]Fo+mL(`AomS_D/H*hWO/AeR8e%]EQ?Juu`jSpmJ0]<,(2hjSA0em%^u>0,UG,:odjY-,H74<oaFM2t<'.kYB#$fW
%S8EBIW`?YI)6f8%*bBtKekDkoR1PA7eR#'krY]:PM!<46ibu<X5+RX546lJ'=i=<_S=0K#C\D:\:;]g@[%hQQW):ZG&I8/.$b8au
%YZmlN!0[u\:d;TS?ktchlTIs.m+$[&d:DnEXGM2@KDuU`ol3f(%[!K\8U.'S*`)YN[L]dc.,3Aj*+?$bak't-f<.L\]^D9nUJ(qf
%&"esaVN>K"U3>1+[POS>FIf_O'Ur1+Aqu\f18rALJq?mcaT+FU7;'0=7:nL%R@Ub,lkZ#F,.%0YkkmLt]*q/<OkEGjZcc1?>9nBu
%Qe7k:6VrL5b@[l_8F:$2kUf]E7;B;&mH-I;ZaCcZ238:3K1nHReTY3fs)1M3#HfP]e<MH%M;6dca^*r<gd/(q`)-@-j[EYP:LD#0
%a#LdR[IE]VP6hh%X#7PG.0DSnY1)tIe`a*c(i;80iqZUhG"]M"NZlqsC;Jj3bEQV,Re\8'0UZkXrMPuoB>CX<M-neIEiRN'AC7GM
%V0CJ-k?2BT:oa-:fTXe9$n\C3n?1m2D[jFuk8HN<C,3Nq22fXT*N+U(VcBp3@:1C_=7CKA),Nr::9>k)6+'I_o1T2"lo-Lq_YRWu
%pC-8mUJ<aaB.V\ScY9*&Ninfq4`#W7<mMPgeYeqSKT4\c-IXl*ftPO*>cO*a5ATlk`_=pZFSG#Hs*hY(&`/&fs0OsF&t$_6D)QKb
%G#n17l5(CJYLBJ)NP]A1B%mOfE1q+197If_Ct@/9='#6rJl"n$qY#61m*n8,BCf'CS2DgYTh]]t7I`%/W:q0eSsQ5Am)),]@d9?^
%#;Z_tk%sWteDbcr%bBE'O>H>=J'@W3]Pe55[I2"6eBJW2bcQrM?jltA:3%Bl,(>W_5GEh[jQUR35*(emdp0_#-l-U>M`'S7)Y23\
%6dBY-gL:Up"X]-bjM`&.@L[UfL.iX&=-3r//Yb7qRrr4G2%DF,=;U;CMfn(!](%2,[TGIpX;fL$3nRotGRDTC"4iGf<3WC1Za3sc
%.Q/7(4W7I6m+N=U$f<^A\6f%@El(0L?*ZjXrS=B*fCu4MDuMU3\N4&P$6<.sc$H88q;;QX98g)Z]W?MHlTO::Dq7(7<::dePVQaU
%W/rS\A2@4/b@KRM5afi&Pf[OI9ZHVDg3Gc;)Je9mU,>cXg3Ic,cW[XrFk>>EFfj=,)^Eu.(A5"&rG5=qbM\s.os<<XQCJAa!Dskd
%AZVK"qG,;]\f#Gos'*,#A\*"\giLVLRSo+P&Ne\6ht6,6!^_a`Nf;]S;XF(G>#g,%jT_&NDFj9uT2>sCDYoc+I5%L7!#]lN@f?I`
%f^#G/07h<,@/3#=8<\K._;phLiFPl2=VP0XKpR9ZiC0&8\F:]C0N<O)'ODQ/QUTkE;0Z4X?N0VOQg'2o2eSc/bS6-KA\p7T'r7=B
%=mcgN,\Fd-EoZRin]OQpe$Mg?ID^pn2]8"U)cgL[fu'oKYTaGs(,r=^V2]/pmhKcp^"[Jlh(%]tmXA7W=`7Y,`u0%OZgJeLGB6qI
%a!mif1[cHmgYIR%S2QEDGB(2sGB*H[^+Sj3[((b;[)DTDG-<.FOgd#bppNY:Y9VeQK9jJ86,Isg=U'B84caE)6R4B9rq`+"%9"Ff
%MLGZ!#+H'Y=aqKoIC#LMRgGY)o3bRi0u#Z\\2i*J`GI7T\>X+rRWEu5M[WXZR`.csVs'q^i/f6eW(o'N\02Y71saH.;&?X6*E=o`
%CR?'i`Q6jTj0^fUT@l,,BD#lCaudmM:[;HNE\5=+buRrGFhb+pq+U>'pM<oBEPH50?,hlsF/)5CnX11N$;g6S;N(O7[@W$4KWO`%
%ld#.Bm6A51d6Zq>X>^).hCRE)j7a!6mccZO=.fM8Om+XC\\7uiED+%ap:6)cqY`7C1i(s`\UbPiR2MO1]Nm'GL$,f?Wpj_7Y*QX*
%\(b'(47a?YglTV8L>HhrK2Ttem<3s:IR=(Sg[-PDUA5(P(,=34#@qfXq'[W&\:T**_4OU:Zm^+t?.LR0+J4XOj;(gYcc/CoM^uk]
%f.Z"UX5k&AEOMCtiX580E/oi,aCiCN0!6=(pr;"KdD+6kc=7%Rmqj8nY(Y87m#PFD5&6\a2+DS7q!h"NQqN:G=UtY]ZF8BK?0tY'
%iLcP+kFV*(/YnDQmF,B)C1MSm`n[XNkHt^kEi3=n$JNn:*[%*:EkR&'e&&674RCY1Pu122I?tm]^S=sqP;)_'Sec?Zm19u+rj#\M
%;G#p?-=R`$5>>37;9rk/P3Y,&^4q&o>:/rXDB<uk,DL4#?.T:Nh&3OlD'"]7<=$KR\1c/j=UD[0B6P>)ZY_%,p.[_g8g+#sYDA[F
%%aFr810/;09eoa)7,TkNQ],9QAXWreHiKl,@Ag+'F*s1.^VcX'==a2ufQ614kf.JD_kdL#36ZP`ShZW(9a(8CQQXO_3;m>b2tL&n
%ND>5/$0P$@k!#HP8KJ.KmHn'+%VkB<<6UcN7:@F-@;Vk\T%9Yq=mM,s]r/hd!odgW\:S%^E\Nhl,VO1ADBWW`,A%nd.;&FnR*ChZ
%'rJQ&KMif&,l";Y2EGJRT"m%41B56.*6`f\j2^/dR1DAtADr0;DRtu&U@^1!41++oYLaR.cJOo=`>6X(Zc2JO6*PTYdX45@8Jgrk
%8X=`^&jA9(6hl,ZDgkd`aj508D#!sCSG>SglKMOmQXu"aZ-i='[aB;2($h`drCm'4eo"f*EUqUrHBq!1ONV5OWGG<?Mg!UMLKSdS
%LXg.A>Pg47Q6fh7=,a(IB=14+gK4L\U9IkEZ>uB$4"\sfpo61*eEegpNQJj!mlrBTm88<^]f@b[bGs$%<hn?hU0<gSn#BG"Z]nqq
%3_p-cHE@d5)/c-O$1!l4AsUY(eTG%dL%W3tmhs%R,2-qec5?G!cfl>AX6)s2h4Io4.\mM!eb..;a0-qEKT4\c-9_0IKp[/#;!Y"7
%TJ9AE4mRfT?b(J<5Dor.dck:6Tq\94%p[.>_1b<dIP`'t+1c@CprIWB4#eQON?/$Mm3KSl,<%adr?#9p2GJo&iN8ITSbpAeQ_@#j
%drd8F#o5S2d(.ObLT2UVehotXKf%PEF`5b=qYio5Q@T2+YZg@(WW0#ZdgChJg<F30[5#([3=kV'S*ecqZedgjY\pnRHp?HX3=F#s
%JHQA(\$15fb;V)?%kO;hn>7Xs[Wj]76m5;bnPTUFFcp;hd1;V\l.cfed$?#RO_&m^'XslK6R'^U8Z$`F'&C]^`'opXJPgF-fgb/.
%=uFdXa(2qF%2K_gT:1P>+km)[kO!kZ\\Cc9-JW_n$P'Lle#=;Wr7^3qm5IhmkP-B&rD.-6c1j!V:A9+D-X:`-C!#.)I:W']0a[Uh
%R)S*e1C2grERo2oE'Q_us!H4Y^DVjuh^R^\H8[Tl]f]_9_BO>T@[]$kI^?J-C@u%7j?I^]1ER7b\GJnrdMQVcp1V0Y.'\">B*sF5
%"$(ik+6MO5S2]P<S2Y:fIIT_NJ$3p`a!CFM._Re4[R@IAOi<MDIj#MarBQ:q7/cVXVdI$/Bc`g7L<DUo>;`9!MCu>PbbT_qCt2X(
%ebCEkr8P7p2`X%u235&4T<r"W3:dLc=7a=o7BX)?eRggCqoO&)SC7BHHYNJ'G@X$Leh93A(Di^&`+H_:507c?lCt"-oiu-,d?r$P
%fY%;#N@[%?.N1+4o?NiN0.IluMT2`;Al6rX<&>@*NEN>rcts0\IN(=t\':_kiAc5*+X)=.^"0'e5BHg>*B2q8)qrQ:FC[`$hbiXZ
%OQapEA$NVYp?<$t0NH;3M^N#Zjccs\PFb"#6BBH]LfZ_61h5agEttjs8CP4b,+H98q*NEeaU3rRDisMerHp7cOKch#Acm`U^,LE&
%r&aJ_$sRijq;/LM]aRS<UjKG7metiE+YOJB7DcN)p_F1n,2p/e$(oI$eAigF5:oNG?cLt^ipQW1p6j3NP.,HFp+P=-S*0*q/2*kh
%5/X3,F7u]+S$Hi*=$LD33qkYG62>^?+oBB*FSJjukRTlQBOSoX/QW>?23!Ud2op5TW=(89fDd2D\I$lLg]3gdRNZI<+8qeJrMG%/
%K$Wt^=#.$heeKFIL4Qm>$TuZH1!Y]_CK]ZS`Cf('D'a.5'l.+qc^ZY$B"5(CPP(>G;goQa(872qp"12q%@h#AX1@bj=cf'IQ*Q#N
%92*<_YgJ9lLJ^47A?31E5@n$nq&,J!IiQ5hVbGduP\Qai4fh%Q;5:`B[cZ$"BK>b.?2LYrI@\S\qO/^p;]TN)Ls3M7cVT@b)mau.
%_JgANJ':DNSUiTg&lBJ8$+.>)\22n5/^)$rkOF:6R:L-r9j!-:e_HOr/BHW=#6n_c[^1/K.a,Ohl8C5#Amf2ZRDf[oVh[W$U>U,K
%-=O;cldl'Zi`D>He&!SeYth'k-@\TX9ZF9Ns4"u*<"PU,@E`a*61-T^1`FV.(@eG)H<7d7]+=`TPj1@_[-G%g'P=iU?R;dTG+2Y&
%8!W@#/Yo`^,'OrrB*p(u^M0ASf)H)lB0Z\'L2PYh(g:n)Bq]Y"NhZPcd&"'P]q0(>I!s/*7G+PEAQ&=o^C#Q3E'r3A)f[gc)j&-?
%DUM:E/BH%.q-oA.U1@`NX=K$sTkli8>>Zk/CFdQe-=i%J-o4a]c_=S6id0a701puGE_c>&A.koqhhuM"ido6Hg5D*tRDiKs`Enf/
%Kt"UTHVsEb_-W@"7V(Z+qI2,#X@C]t]dP[Hheq^cPY<hjo-WfNm7#-Kbe.WfcWm<7a#u;JGkhHq2,.E&pOfe-mI4:u@fGf*0gCWl
%V,0i!JfAi66b;0IC%KU*l!Al!=$=33*^*\m)W89`qr\bZ9Q;QW7.&C!B[6)'qLc8J=W"`"B';!4CAk"K\dTid(qPEp>8TCTFA)V1
%Y+:dre_&eWRuL,i0:RrL(o7TBXfTV;!q%g=+8PlEQRt8\o!/.>&)R'E%b#*lWm0!@=(q=h(V/A+&Y=VHh.p'm`^pDVI'aaAla:e7
%!87%DfrRDmpKlrjaPk26F*S''+OL_F00j@WI#,Te#k8b7X;Fu5f/3?AQbb1(59G96O8822@J>+3l@:d/2k#4RkSL8;ZJT=REk3E5
%M$G]N+H8C_?+&rpge#]V_->bRK]0F$/T2$OFl613\uU,O7FQA]^DM]>dhbZ*EU]UA]a\ru?*5ThrJnY$i7h=Hq[;VLgWb0AUueVk
%_ncHCqR-`mm"^*'MJM4ELEU%B_O6&W9V-GKa)Wa7eC%SBER?mQ2f/>bkoO;FR%C#3(JD9(WW*Jo(DCL)YJfDcf)t*Z[4mu:0rM;W
%Umr/sq!_/EihN`Kgdg=jnAW6dn-@hk3+-Iih1e/h'[EVk"#^4FG<FL("NlJ'/-jkeR'*2-(PM$U-6CT0@G'5,)nPE]oYn8Ogfsf6
%Yh)BT:SncKCW]IK[^c3C4mI287W/5?Yn<9L%%XWmFH<X<)RR<s&1Pd<&lp9]Tef+hK;iVe220>JMR&NWPU3L2Q[+beUu-[VY7.3&
%njfCQm_DDFSCLX.J&Vm<h%2][,NY\=L?7Dn?jchFK>6fOi;VegrB`j?R&iO7gNI>&mba,\lb)D3rhdSeOGXMhI_Rp\eo@YgQO^D-
%>"?g[;(FLS4ksCB$G/RYV3As"!S%O,p4_q]OG`@Z*$-+E6g$F"ra--+P@b[I9J;rq9h1LEQL?^m-\$m<cJ$44"?PRoM-4<s9rJ$S
%glq$17ZWIq]UfU]JY\&u2p:m/"Auc-UR=A*doEd%YMQ?c7M?.Z"GuF?1POh\'4Pdl\TF!of<t*)_\R\(,7A^ncMSbC$EJYg2[e8^
%2M<(?XRnR0k1'm-^L&IbX.9g>;=pPiBX1:rs$CW6-XS@t^P:o`WH.1gY8NGj3O%S8HED4/bkMO@lV:d\+E`0]&;Bd3LefST&fBM=
%`,;dBY.ukgT8;+;*LdJVN8S8\\sjLrlV>AKgJcT-Pgjd(VN7E^)HL/\p-]$>4]dUC8Y3"AIIocI$dIfn]M=r%Lc0FNZgM/3QJoP)
%"O-P&AgX`)Mogm!oJk+KLb-@#blf"f;)bRCaRp3snbt6s\#ZfPP"Fe6]r=S%.U/iA;&*[49knWGMi[b)?>csuD=tKNK<Wgag9pt/
%7e,8"e7mK\nXa`nYMFENDUc4aFNX00O/AWB_S9Y0:G\j9G"s+*GXm;L,ig=r[-@Ic'FF\3?-gJ9-&DMGX^"[-Ko-dG41F+-3`.i&
%b05!0Eam[X4(70^(S4.-rFW+^;S"i$LWnBo\&)m&cusM7bnSR9/ZdPbK5F[uk>I^J#u[U&Dl5T^NR_&]TCCCgbk\qi1FBIqb;Lmr
%_9C)VmI"[ECfbZm]_ipcjA$A+`ukp"Pb@(i)j&u:Ja_dhArQZ+ER3Ce23#6);0HnpgU'J3VWZZQJRN$>'LEIa9SPE&h7E!Xd:n;O
%]\<GE;6/h?#sfraT14227;F%F@5e6a,:Yi^n*T4?@12/';ks5RV3J$!6k\PRT2G#)qG0%OY1C2CBrt_-WeaDo9\55S<C0t")h3U5
%_j$62\_X2C:W*#peEYRGadi;fiW/#![#sQ:I+2u/%h<[3ETIuH4YHc4eSKFa5P$t0P+D"(q[c^qm]b;X!OeQSnO3mX\+aObDIHgR
%U#<pulppG</#qNu"ZLsW-YV#Ps63!Uq@[gsSZNU0V>W[Vnu<KMST?m?T2C"B^fp.W2E%3iGaGmEVqZ)q`ia^Bd.:F)IIZ9m^DZ\/
%F[_l\!#n`ENXh2K@H2Pt#Y'r)+E0<!l7^",bQPFEmEJOa%M'(*ik@M!8m"TIg"/=Ais>I:;\'V&!l[5'U(_%tUbE,ph-(9o*2]g4
%1=!n]+]qXVHE12^(8;8bVGaV*5W,f;nfL^&F.e@.;^?,5G=n>ukfTN>.;fXf+f)_&N1HiB'X=Xu1.e6l"I3T2)HDQs-MR:HZeKub
%;\HPAE;7kmCmKg$A?Z'qrPRD#1*:fDfrAip`qs:lg'2Er6Z[pYZ'QLoXa`5R#@?PJ-_n"'bk:!+=AR\p7Pg`dY1=_e2`nEb*%-0e
%NN0DC<GLNEE.J!0(F&KE.sbG7;]it81#dLO;R+R)TKo;ALjBb47#Or2%n;F)1QDA1j#8NZKos6o^%\=63:*t6g)pNugJMEFdPFgo
%E>/'["t(H])/UXDWHn/&KI>5e30KL$c/Xjpp`rj><p=UeV`k%54O'ML\lU&DKRO5g[3FGAFaeJ$5=P1r4?L`-8uP(9Oo;K#p1<Dj
%IshS^rPS@j&L\D4j%`dsYFYBZ<k`tkraFhSa%EZ=4R04r9:LH?S^0*Q$<lucZ@d_M)LY4A#0E*f*RV.FW\c*rW:n7*5kc)g.uuEt
%B1GE[Ipl1'Ce^A.1F06kPEntXEtMHJFu8E-#CAmFFFF[dH@3cENeTM57l9E5eEt]$jL@sEkWFfB(HlB//#(+0!J?E12:UqHK:Om2
%5i:%NK&%Dt@4D<u2,(F7C7d?s)jWdrgSsc#0FW3YX!@bh0P36q+d5Ss)Lr6+f-/:3^`=n.!tp6$XlBn@#?BE00,AL'\)FqD=J_;Z
%nh."Pl3hkRhDGK3S^-AQ:or-JkH!!5fW05<TgUB5*^23"Qi0hE@8,QZ'tI1[A;?mZSN&)P@jX?o8q!`lqi-eakTo>V]j+4VHcAlg
%6/TEQno/T"?F;9hb0mr34ZblKb]HR'_N9VQNZF6DVaY_j<ntI9CG(5RU<naG#=H5C9_f7l.4D!<N]SYe@tSF"%.:&H>d:CC_MU&>
%4.GPT<\ff;P)W&gXXS0n3bd$VI`#D#7Q7+WVm7d7;CH6EWhbU<KYpfb:@5]VY&Ojt*VQ&^VdnqZB=3&_Na[]Q[;h#Pg\I)%*RuH2
%5#1EP72>;#0sl;>RW#Vh*=D\=_k@15n-Y=b77qpFTTnq>(_O?M6"kDgD#\^\4:mJ7GpS+>n:1POd1,pBj+UKnp?*7p`C!WDZ+lhh
%je!4Ulr70]b4ga3!Hm^:CZ9$`>.lSU)*cioR*iup7LcGaN->9OOY-G5JYo"Zgu(2<5S3p4XZLefM?HnV]O?k[!PkgF!]FGlL(B.f
%(s!C<#sMkU*ZNL)T,-)N>2u\EN\C?N:!-UuSf+S%Vd[3$IG!si=PMALB7T(g]:JU5Q#Vp#GEQZUV__)EY4ASH<OqsT3DRART$?[l
%*#X_Q1h@/`?fqsk\`;m1=)<Us8;obc+!0n<J%VENdhih(iEU()4j;;=-Od\O!q5W`L_aEodEKt>016GjCae@8rT1c$\B^+7-"$>h
%V+R90M_8N)3KjdW_s!ZdWd7r&2KZrJ95!0OB49hJ]KO'%C<Ueg;*GY'mBA[O=6Hm?!\`39*$[mdX<nA-L'4R5M4/Meh(ZQZ2,?0I
%"Q]Cec\a6-Q4t#,C]B7Vqbd5A]$A(.7bBc9!3&'`kL*GX)`YRdr"BR4FJ<gro3,:3YTG.*(Sa'Wg>QCeDFIU@Ec_hOC5ss0b@.5/
%QRn,lcoV[9N-6ACYCX4Z"6-R:lQui!:`.Ib94!+X?OG-n1g=7Oci-NbO>OGeLXH>\iOZ!<D1B%EHIC]MS(/FDohH;KX;@qMipp^A
%15D22%&dIE/2L*QDM=)99/;,-4idU,D5!gLoactMS$$#uBWH6cc][sKn*Ysd:QD((>79=Pg+r-bXVB@@)cmiVkD`\M_6$5NpPQ@4
%hmqd[ISk9+YHGXsGd_BN?etO&Dg/nNX,*Ebm(,j$A_kqE:?cQYr/l/8II2+T_>9?cXj26*gNX.UXKV$HC9(ZFh88uG=$,_DXQZlj
%HhsgAb3/5a?^ki/q@4hdV-n";]\hq=^4%P6moLS+=3[9Ga@5j_iA9Y?0.9tINXK4[pPr[Nd[@Od3cq_j_E/EL?@DV4*u4Bc7aIOk
%\,'h;a^ssUIC59RH<>L#e-hR$Wb4!pd4>!4ZI^UtI6&-tqKi,-l<3)?>J(O9ofe7\\Qc)t45\V]4MQ*a!s-c>iofpZ:&&o+>A:FT
%H)n1/I_Fb`Y2!nK&9#I$&#Sm2/jHG%/,$%*ie;N\p;C;nmli;8I.ZOZHL]kXTG[>C4F=DWqdQ[*#qtgQm:#g,kCTV_[E"tSfC"#h
%XaT'+(@"Q=n#`r=IdHklLNgKV!r(<u[Ot7@``[Z[C#*],mThu']"@Z<>^_!''B4#pbk0YT:&X&4WZD[R.;a4a!9M/480"+&FgY7t
%*!2>sh5AFHO.nsHlsDIWmrk#JMjmL[+."'p2I;MGgAKmaIO9rscOZY\WI@r,:2bWVEM#+S!2X>RKA4J5&'hHOWe$sl<k,g2X@NA?
%;r,jn:UbO@O2E>hK3JlD[rE;k%t(6OW!c:oSc5m.d>s(/Jg^-DPN23lpFe][J)Se6GK(t#n6>;=ZY/Ai7d9aE;`W4pdjJq]Y:i*R
%2e.YP]Y/p!VL`'-XVc^e#mgCudf\qO=k%'@.[3\agngt@giD75?Ru+Ql0H78g#MI<jY4>kVr4)ZIc]rM]m];:'aso8ZbtM+ol$I'
%cXE8op$V$s$2WMX^+Z,B&)S)&\,K]1qKdNeXF544YFSrNSHm-?#<L6$fbYeAWm,'@p[Hqf[_K<C?oodmYAQ.='WkLA:^"A3r2YV!
%hh9l(V.Yf-Y-/jgs6u)X]"RFN%1kHe$,qk4m9=>(6dVL>,$pO7IU?AA2nhD"?IFFdlR'`iP:o^`'$/.H7h5u%n+.[:qMC\RY$qTn
%ch!&iO6D8LUe.u%Zf.Nmkp/2`*k'Y6"NtH4H!bo=o\R*-kOT@AUn8i+n%aj5jh%Yl`=(keZM\Yh+!gCaHLS(/`oaL176t2amCKk:
%aPFR;4MN:g`*29qJM5k!a+JclIo1^E2u"I6jcr?6hCuB_QdKsgVX]^jWt3&!4S)1!STgF<i2*TUIN.ao)(8;6d#8ELpU^-ApOiA?
%osLH'^Gd2tg\?BPXX0nH?Bqji>d?f7=kS-h[O88nGk6`'/Ns*]H;OCjX^2b-NAjT3ki1tM(h<GO4@#tFW;4jIm]M?Vrk[:,4ZMiX
%h1G6;k<bW_qk^WG0-#MOH,1i4r9!ASA^Oq@m8$5aY^ZTD/_^(TV,Q^>fRLS6l1F_^lQ7*pW4QF&.o46t-%5lm8NJ];ZmURNj]3sX
%ZCrqL9`=j@#@X&Pi*0*V>LuVsjlNDtNYB_pE"iJ%\LYr+_!(8k#PZEZ[EZu7f^Ht"]:eo`+8j#0>=Eheo=q@kGu;dQQS39m*phZ6
%kjNjGraG9:8rce^Zt[m-[GJ'fhIW"L(%oi%g8B[3(LfJ=Xe/q437'0+=3pQ^dXsg>HM>pAT<382q<Ce[jR8Apd6$O;T^=%I?Fj.4
%D_MWkPWgmQVl720Cr"e`IJQN*[B7Ve8_^uJmE7HeCD#F'5.mF&i%83c[[5l8P<\LP%]KoBiPFtfXf&'?!#b@p=)ulWN_]YT$$VuV
%OJ+<t>Q4+3hPpa)[(H&8]"EJ%D]emf)FB9PE-*A'+[kn)&Gpfcpi`\<DoY@g6L((js&ok^<+9h9!-]SG?QCoLLc4A.2!*4l$:C>7
%n4Ls?'(k\pi<1:1XnVQrnnG#bSJ'2idu4I&JEWaE%,NH*c%'a.Q`nhCqN.IdqXD+Oh"t;;l:dE]VCR7^TFQ@GBs(%bSZaT14A@#R
%1m!Aq;?,04hrt8-NIc^4&QE`/Bdm:!=;W\'kQDiI\stIBk.7?qP>\-)C8_osM5K5fM8.doqYj20kp%uujGSG?NIhs(R8nti7qhU;
%5:%rqVR-IRB-]lq/rU76Q3cqI&mW<r,Vgq[4>lh2o.r;BUah\Ne6GCn"Ga&@aVfuQcOX.PaW<-iQWkkPnG-(,8>\sM&<\/uS#&3C
%4rTFonih]C!o5NmM#q3A5Qe<[Z3RWL!Wc"eg,3[$B?Z3=3,XWM$0.is5WeSB5=BqX+2-?F^bin(^$#_WP;=HNd6,/Erqq-kpp0d7
%27W<%J"]</X0)e#<pi4t<OuF"^A[o@=SmJTUiJZTK03hZi7rrMn,=gELgV-]M2o#j%nCbj%0<at4J>D<;,?)9[b;8+$m]SDdR/uB
%0O)BCob"!Tn"95@&_cXF2trUGV.tGA'D^41BuJa&S\V_d+29GA=Dlpf\)/2aqMp:PSbB*#-j&^1<l?)VXbXCQ^'ka^@8*T>"<*!C
%o2>4R][MZ%5nKRA^NDh%5j!1\c/7Ekrt2LR)Jp0`3FRF4m.T-f_hP^oh.[iC32HM8#bU+`^D5i0:kTA.r66@VOHZZ'ro.E:Cht(Y
%$FFpnP]]N$%is!Co]BFR>hk@J3#m#]`6%p5s2YK7&!0C08kpOS;Z<&E;o/D,<%oJS,hhH]&4[DnoquK8FS;_Uppdd4!R,*M>EQ0K
%NB]UccYeRn6[@.Qh&_&'V-(B:\s2/hjuc2_#mD5=<B=Kts-s8SQ2.QHD]ca-")@JtgGR-%0'jbi>YX*>XTlc0eN4EAl]=M]V8+`Q
%UuW@[K:X/UNY#3OT<9H>0UURi;kOgt2[X]jr'QXt,^"so/Rr?p-6B.++n0B@'l0A/;`\.YY]&=3^%h`A4I3>Mg4s_!XaC>^'#$'6
%X?G4VUY9JUWig&?)u:<fYlXg?C!nJS,hCSUhu0h-qW$R9/-;l>XmGk=)qD,7Bi!L'qWh?,/'=VKO$>a4mMSm\`R3Kt4qPoM>L0cc
%k`;$fhR+%V=DtZ%?<aJBa3SIm2=:4n(JN/4g6l$tPkC'n]-Vs1<HqBFH3I#moXY\dn#&8bd1;jtDf'hI5&c2*_/K.<0?X\m%jGlV
%`?/k\oDHM6e("irF/F\+L<VnkC8o%%V'4mtjmD'Ha'5U+MOp@1iK`:Q>jaeg6WRUpbj+B/kJF(coN#uTp4Ysb](P?"TcOs@@dVa%
%HXL+eY=dN>$borWr-"DdidGZj61F]OHnXtrD1]%MGdSN(dY?f>Q+$PV<e7RSa1DQuI2q$9lBKofZEL<X8r`_&@PpVF0M.I8XMeFb
%Jf9"/TQrFhNA21cd,[#;TZJ.>9+e,>X!_!P2>)sgG("=#/:+,Bm;\h#]_G;+Fa&#D`$oSMh#@/g]2&sueBbj7JLNRn[JoQ=,uT]7
%fCRhIei?e[5T#MH2pU<GcLSG\-L'!]G":<bYjmCJJFm"+eZJ<tYNd_n243^niJXTUX`W3)]_H`t5:Z(AQLY:2Q1`[oQaObc-.9iq
%i4CWPhYQ51o`NmSk&/N>*nMJZUWFE$Pnj!27pOdS)lKlJn4G1WP5P_^/23K!9&&+F[GmOrJcu10ZWGk^4F@<L7jnEo7$&NR.\9uM
%/,isqq%*4=XnBDUqH,h7\+d;\Qfi.lo'+QXDuJW(3LC?FdG6m>_9))V#JnNrho0X5B`bmZBF38cdNu-FqZG#M04;l,?)WZ_%oXV^
%4"'45np5Z%lhR_*Pg0UdX&3Y?elCP>oeO&WDSHQFQ!R2*!]ppbDSN9=W`S&PA88o!Go7UBh.':E-W],UHP__rU<d2r!)`#0n8RD'
%W+YepqR;':2[]`JADSrBgr_^2]]nbYD"Z$0hB(E_e+r]^c+)?$I^heY\HJbas021$>^:eM/o>O`3qW-4^'<noXduZF<>q@mZ;dq(
%EQ=4<\69(Z$EZgN!eQ=^BEc['4hb$JF8!1qS8P/J7lf;@NDJR5A)Db*BsU$OQ/$S!Ks:J80OFX[erH(pdBR5XLGl9Ae_+kkSicb-
%V2^N`IUhD\fO%F<UTrb=X6\W]8&#PF>h\i]Nn1tA_f?(9@u+oE*r+aT>&eu`pfe3)&]^adq+#o*RbenTjgThihg+ZL?9Iuu4:*L.
%Pe9,*lBlTsm&WNLqY@Bl<1\$*,ctEMSD/Mn*7=Sne%G:\n7nreX>Ct=`A,qB'@NZ=Qg7G=[9i^5+)a@mTAHnEG'S]anG2F"#Q:D>
%)^copMq^PFs)\`h.jmVsJ(M1o7d&0FF62Th.*pTNWQ.P7d<$`!`iC'CJNf;^6D.c%"EH`=86?$2HMaXc@<_HG8b]6N*rPf4"V0Rc
%;h"MWTgc.an.'@eXcpWbof%*+h*/ONde!1AhLA-@N$d4_Wa%OjXZ;i:jER["LYWKKdb3FmF\E/0p=_7'/ZhI6pFh9BNIr9h'5Z!I
%]0W^[4hq'c,m8UE],Z:qYaf<>A\D/+^]![Cj<i'8ElGTh`7LSt?"(h%0=P`ECSOe]g3ro8D!Quo&FBuIrG&\HqXreWa'Ft>0@'Xh
%N@mViDnhOFSsi.EoA8`0db.JBT*u(U4F'dbGtnYo\;&Nc\X3W4`-$_.`UihmQ'V0m51p"G1_(W6/Kaf*4#l\1b-)d'_7'f0]98,g
%\UE_3h$58+TWq]NT:VT9]flmIZ'N'dn1E@pEohQ%*RlpJoB8?f`Z`"*pGR".BaamUq'4P*MgQq=[VhXM6`73Hp\"g28.G(T[8lqf
%k@Zlmo(Ig)UfJ+t6*8D+m![<3+2XL#>.G9[O,C?CcWu'84.e(=dJD,1Xin6S",JKh/#CKb%#c5DlD<^dk<JnC=79K_YZ07Lq`rKB
%JoK]DNm'?@o'1T%n?d<RPj3Q\1S.'iFAhlW?*:E(^3?0Nmb-2irTenP#(La_*uupR`tA"THVZipqC?0T%sioRWt's0qU_:rUjMti
%$(qpP'7WBuJ@'e'!iNeHJ]rTo>`1k-%PNB4efCt]+"r8mc'OfBPYYBYlTpMf$Ckb2l<D&>oCgg%j7(%TK4ce>J^qBMqOnX#?&qf(
%Ff[/O2O6s4IcT#8hQckl"ZhGAoRU.0$tp`cXeeI0UPgU#QO]n*q(cM38W<-3=qP="g(pK`O9KC,<0sXs[ooZmbOra(YP[X^c0D?I
%BkquSOB,b1rQW`%)#3ccK]bY3H[#(IRX2$4,0[6WW@A!=Z[W+;U0P'$CiB2oFoBF'lOiXKU_4@l=8G/^[FOS@bUZJH.lAS7eS=2Z
%p#YAc?L['_E<Y>#F*"u2o4_<7U2:3-N$[l^"/Z[R@(9FMSaL[qBlHtr5>Lla)(ftPLt0f^%k16n'Jf9/_ZVc)Kt_]u?IRAa[ibM8
%#2R.[2an]+KoIH!o`c!,Z<A8pVZ!Y8]&J#*"U`a$5gAjAlVCiTT0[Lhr"1TT1JGlHB9:iT*oU#O)p1<t2Vc*j@`hWiq5/K>olH^Q
%Ha$MM'Z8,BKA,A.lL%%2"/tD=34i7H.^i2bT)*8lg?u3F?6"C(h8V8]'^E$u`VHBRC;mCBGrM:Gm,*6de1XlDn9=kOl.l,W$"D[q
%:DNo>bMGC`fp#PX!NoCKn-:=::Uf2!EOq@nq5<'QDEGCa.GIA^9CHa7/kbrQQJYb=h[^-Pj#,L9q?OL`ZqCP,koU_I]BuBO_>T?F
%MWtG-7]Uab;WKof)]aHh4F=>QFRig$/oqYnhgu5S4nK9M9tWMk]EYoDKiFeuZ!OB4kXQT\h4rU$6$)2s%Tsj3$2^]oFsiG=*JrpZ
%AX'Q0Gr'j-]\]hU"tb6$W5&2o5hZt.`ZjmCdb2=sGL9GtJG40&og\K%DX#X%Hsr\S]=7=\O,_E];W'`c:Nbl0K0.g(Kie6oVdOWc
%NY"^_lB!bZE*ms4Y?^>j!AR';gOh+/c*RbhqKNtWBYd-,[^Z4n(q1"*5`G,R#:>B73a"Tr[.!fbs(j\IDJC;Dn+1]_.%O7)r7V-!
%Be[QkqV(XL(W>^ggVGT%RI^dFce[O9`_u;8_qj&ugC!t&I6FhIS>/8_^=O#;M7i)B*Rq<$R^1@9ohTD!$I&@,?4G'F_2G*QoAicP
%F;c\Ph-(T7[A.rA&`=+!hPHnJ7@)K?2<Qt!>kcKdQ*H1`a#cC%QjsP_.TXAgYN40BMT?B2TC6$)bclM#/?B$6;VU#SJ*XglG-\FN
%Gk^5WXK#c4]Oc5ek1cR(l+nTpkg^#Js.os0J,XCY\'5HQk++Ucmlp@dn1K(loka<P^HK@3k5V#!HNs@k-C3jr4afC&#Iag3oQ@ni
%2MPMdCldC<3bc&J?+u2_[)oG;nRZPI?T;TFp<;<(^##NTn]c6;01YjR(WHp=HAS+BpIi=/h,C#/m!9b^DccTP]`6!-E=M8]e.,]b
%W&fB,$[\n3PK.OP<tN;//BWLr;7h"ZMcVBgLOl*]m"UL7fZjso@F@$c$%;Wt<576`2X'Gs\hfEJ((k)aA#HI_ZhlCdk)NJ_nJPW/
%2CLeU+a_UU)Tr\`5n[k39u-K0MGfPrZ"\ZL#b/'Z7Fh1hiKLO-&31&aQH42rnXCTCoFK&`*d[&aJ?WajqiZ,En[E)+#*Keed=KF/
%4j(mip*:@Z@T5p-VO1fVOuV_VF'DL='#RV<;bCn@lFM([4e\aG`jsWcm.a.R7`$/eYE-MWU$<gj3lOe7La<pTVo@Rk0%p!D;Bl4$
%B.#5IY$?kJ<e=Sf.fi-7R$+G:J9&k=rtU^e\1nX2X5]h['GSo(ZVcSs9Y=DffLGWaCPnaEP(u>XVWB8O;e#;WWD>;s(/lqmqbh_Y
%1E+<<Mud+FK]YdlCh85k;5_jF[3j]kU<a5goNqqddL%!_k@mjSY%nSl]#W4_Rp,GcAh]7b?3d=<mYBuQAocSU331/E^,G\"P'C)S
%%9#k*n>9;Qk@3*'>@Z3XnTV]D6gZcNc,rJeGnlU5Il7!ZbLc/b1\</k+1n)j83b$OgV`nE27i[4]bL>5rFW_Y?drb>(61jmUE+eJ
%_@'P1.l0Y&4SIW)qH,d!p.d\H2eY+\#C'*Q"stKq#u.mENH&%<9to0.YhLq/4YB"MG>GU91ntn$J8!u))($[ZPXaG@is0M"3$-d.
%ni??V%<2YD(OHAe3s6gY2;=Ic!u^0-0tGVb]GK;s'.;ZKD4E@P"k[Wj5d=b?4tRUi91S3nhkEqVg^I\Gl4;pu-Jim\5AgCf7A?"U
%o.04jC"V5J^IN93DIo!L'PgU@3$.(.V>MKe$/(I#OG,^6Atqs7Y&@?l8[Ym.I%fGYYp\o?a"'nL]%=?-Z4)f)Z.qbE17UYFpbkXI
%;ibj+a>^b(h_i@oBs"\r`HA9"k<#YNjDgEqDtI-YTg\pj9H#?8j.-jdR>W/NWDnU4?Bbuqb4b9;mQr_H7&8mO**s0n68V(%rrEe#
%3pYn'>M4t^bR+"E(eh;tU].k1AT];_ahVP_$ARC#kb<9Dg'DKe$.1;4oXY]u'HR_=aC02cbF3I9\fGU-AL_e0r@,`tQKqV*&%ssS
%YLa:04QY;!!;t*3DXmD[GTh@A);e^XT(dPV.J85#JOaH,iBt0FP1\Yj&,%2s_N0W(jjW>\?$JBcE-([@Z^d#W4/_kp1U9Q98l=`@
%e*lIC)H?A2I"jd%iUpe3\!jpPiX)-r[5mUWc?pYick=/Z_2#SKj6ke'p%rYjqCeJZBXjLC>4_qe(knPkBUFnJ+lN,`2pK9r[(1pq
%Cj\"/V[LQAiFajI(m'muOItW8+BoS+gXU@Hf^,#Oh(]mc2XJ*>6HWE.Ft<#bQ6G!?*E$-WFA1/Z7Pes$RY?_*51%*B7O,*`SscY#
%#m#>ggN>Z_"%k\]d.>*ie-r;@"qL"0Go*+*#`Y:>G<O3j7KI/4ZD6`9gsEQsa;__YaS@CA2L&KMcJ&[_bAd(n2$lqI,SI[sjQL[j
%Le2GYhS?$Ud]eaqG6AEVoJ&4!k@"BJ7i+iX2fG*&%K\WB[cPS""CW-u@GJ1dK!`1bj__oB4YPp@$3e0GnpSmO]5<RmTADeZm,\R2
%!i-l76\@b;E*3<u[.!Xrisi$(n!`#APd3CO6+/",<4e!;aEGJLANQ!uo!lGg5U+5PLl-!3ZI(qjL.77XMo5TcE#_[7MGf[D>Bf'E
%*C1o;l2b@(RIQ6_AY:%u&g0G2]<I,\)K8O:3'ZC2,c!mSD[ONPU%\&SPS.[%&kE!'&-ih?OVa[iN2+0mE`jrpDVd0@quC`m,93sc
%\2oI-aJ?YH"!`?`O<[s0&Fb`m"A//8O%6W8:f,2pOBBB<Ob#AP)5%">+EBi[==!_>kKeGXoDf.uF!S4G:H0mdW6:K<bB=h61fab;
%OD=Crc^o(+RX)-`MR@toc3=8*hij&.K8'qojKU/Q2?OF*7hBT/EouiFI_Z&9FGs<biB6,A'I];5JthRF8p#hRW"A\STXB?s,mAp>
%itpP#FXDeGG(H5X$A)q7g0fkF%1h.ilr#9r-IA.=#(CiX*K)2qG=*f"=_YeDd"TH-W,&=d@'<gj]`S]$\r'kZG+ahl-\;n*33&MM
%;-<+L?rSu=[WM>0n@WQ%=IB=:d">DbGtuO)OPDZ<64)1Z+K.Y6a[Ang;OtVi3okLXd87DbTp%mRjIt\?f[(Q+'hh1f:8\e(\7h%Y
%FO,eP(?bu\BuuSGLIU+*X^%L3LCm5=):CeQAfMB7(gZ@:*#Ul8b>&_e"+Oddf`Jpi&@"+`r/!!nP^uNN8#L/N(gIlQ;YfP/d":ke
%kb-6I",@kR@"o6gVgI[o:[KG/"EAT2(Mqig^/mSLJW29a(.1W<K':#q^hjl)DBnWI)BGK&k2uGTNTl,BbH`*lneNdXAeVd]Ll-j/
%itGgY3RA%Xlo@geKVG9LXaE$]&RaPLQWk=%YV>?fc"9DM<&B8fSng;G21h79=N+FOALZRlFlb#+@-V[C:9rkTA^tR.'g>OLaXuDr
%]ff,Ej[49+K9/`A#*S=VdK_f;7*;)Q-.pRu$@>I*TTpO@n2VNfNE0@>U,7DK$QWLq;bBQ.nK_+N`uq5=^otN#p7Tg\dj#D?D3tB_
%_$h77:`67c-J3f.#jAd;;<cMgJ>l:P)NS:(OXA^se3j_!Ol-e(UFS0;(sA/b-&pNT2I.pBLm'r,8@B?Pg(PE2+<2[P/8c$X19EfC
%aBc#d$Skn6D45%1]Vj'\NH%o9jIuqpXC7LMd.q),1io<!&D(/GI=>&Y11X6oX;d1Q$S30k>)mD(8Wj*21oepGZ,l"R!(ImcMDRJh
%WldC2ZIf?uEY+(Y[d+Y)odkbSDpnB0S3X9.i;md^`=WmL&GTfP"q?3!$=P(^c@_9O`Bd"'Z`=?.Ao^pg?sr!:2R'eA%@D%eS3GsQ
%6K?]"U+pWLUgsPT<#6EI5oAb@*X5comU29??O]W7OS,96+<?];6I#sFd\0,a*4fk)J[D=b*"'M#Ar3AuHP7PNHk9[^%#sgp&4"FH
%$#d%3"u6tu)#QFG#$/m!+GJpq6Sl[D"""-R[lMqS`(S-NE]!h_!$VM78dUpd8"gT6TF?j=?dV#epFuI`_14dkX'ZeHXH4Zo&24s"
%#/Y/.lS<Q\_I2+tN3L^/9,Om"@EOrI@M0Q*i5css$"m<dQ2k_&"16@K5i/et3YjXU^C2<S,p9F"qRVcDiA.rqc#ZFhn<oQY'-a=m
%Ymkdg67u%C?kXD?o(Fi;JHuOkL$^K\e_p!qOUXQS-Uj8Z((6Q8FLX41KX;j+4L3%LfV\g&)RBm;((1;mAn*qu'Z3>WFNL;\k^]Js
%RYV"j#XEQs4d_8'SkI)\`Skna[LUt!#a(4.(<MSscJE]R-Q"'6[V02ji?m``OEcAE\K'Qn]HAbh@'bu:psm2)J3i8(_)c%E1.4.U
%mel*;#Y9L.O[VZ,^d.lkiiBVcA0;/.R]#?LnZbSM&,:DUKTUpKg1sVgN<Y*;&3,:SU1i+%WXBt!%.0'hWcjY3@_6>hC(O/s;sh#e
%qKp:\C(jXrk/dp(cZW;5fP3DiBY@.bCgdJ6Qps3B`t^<_+rK,t8NVh7[C`TZK6scab!o$3C^u&[f/PS)7N4*KehE*=8WG<GP_"sK
%BcrnJ%(O,O==@ch7)1-p'X&ICaIq9D+FAYl>aPWjK1Q(R$oYp8'LrLt!fRmN"m!eb,XXg>%i0^2)Y>+.KZ".:1rkl\W3*$a#V7^S
%NKO]*"XtU/PD8ls.Zai%:T)!2BHX+2WJWJC&B(a"Z#gk_K7tJ%aCTulOQqI7gDm,dJZ!8!Fa<k0V4!#gs)_Dp0iF:AR)#/[.oA$c
%JHlbj8T@`iSVOG>'.X)j*E<WhH8$^T+A8T)Hjb?O\"QrK`X9aN09V\\L>bHgh`B>tY?7Ar:_2frAkRXt2jS^p7&?>>^(<8?O]!A9
%+O]Jq:kZnu+VM@:ZOP*oR[5X&G:Zb9]++n/8+`>/qU$Jn"=B.@.BQ*WA:-Yo"fWRt#*P'm'a*6ZB3B%ai2]M53gO&'8(HiD9mH"X
%+oCAqO3(`Z,RT'qi-Z7jJd1).:<`d+OD6',Im=9q'[_8kb(97X\[*:)OW?#TV?K4"_rVdc#U/8H4K]!^f\g3Jj;?fP9d[=mb:*Yl
%3ff!7d+Ru_mEukU8E!g7*@oi9N.,_FE3bpF>*<V))T<F^)1aL&>]m>o0[gTurnQMSOF58<Q/\`@UC]\&eXA&t=N!5@B]X7CQuC6r
%RA7P9LB8\@!aE3_"FN%#E\\aN\tQ1t-PHS-ii%bVM9)Z+'WeR<TU!nQp&[^9_/rDB%>:mhn02s8>&t\c8:q_eW2FNQAHP:nf3mEX
%d"q8.VEcr[S0e8%)7/n::^\JEA2jjZcKUsV<Eies6LUh_KGcVA%46f2&Msj(OD$[X;?mXN<==o_@+[2c\k_%QbKpFik*g]:RG`Q/
%909Xo5Z*+5hJ(2_E+BH\iBebM(fSFI3\HnB)'7C-+lALN&2ZrZ0HCi=1iW_c-7NfM7S)VlcAR?GF\,,l!&U*El]=IO]I&Rq;Nlrl
%Bi:4`np%Cki8:[&m/limb=UCk(RV1-\oNm'aAt<l7m:[PG+u7M3:2=]_(dB\!QtoA/k;?kfN$6lU*e.IS.aI($OR`J\JA2J"ZT5I
%>V2gT[R80/!1Dkn+f8?kH#o+p/pgkRZT?TP?qr+;'ri^'E!pZA6Q%;Vb2S;@!1e51Nfdcmcs*H]m98i$0NRZ?X<8;,@_eNJ!aKZa
%Z4oa4%^%<Yh!T]6_B&G6ZC:4(XT>E`3L0^W1BgE,>bd8c\o;VNcB4*pNcD(ZRjnh6M2'-gi_]J#ju?K-VZ>,[QqE*7VF<pFA=6p6
%Z2beX[1"!?Ao->8iIUBM(mC:%B82KSJ-$P1*F[)Gg,6BihLZt`8VY>*-u^Pi/Q46g<!Yk^`1mkTFVmFt:Gt8&NY*HRF@2=NCa$..
%<3ss!8U*"O8`guBY2K*P&Tq8&;%,%e.jRQ/#PS;YQ6#OO-76F7e1hLT6kKfh"tou:6C+:7fPkPRC:&9>S#TI;'96'F&5NcF;YD0U
%P=otp4Td%i0($AE\IeqE%OQr8%QIr2$!\Ffj#ATmQftM>&EdL4P/B1dZLm'A]oCu=g5]XP@<$-9D0?)/E(_MXCnk\Q(T4$m3Gm"M
%\J@8c^qX:!nK0i5>*sB-X[UuTH#e`S9;Ig;3#JH)RcG9l"%&;i\)gco/k$>^YYh1.T6=%UU^N38Ob!r&YQepJNdqgop'J-sCZ1R0
%OtdoBX`TJ&c5b!aW"F7u\.R^Z2$19.\OXl`&C=nlJJEY`%(L-8fsWLV0lYO03bnrg(i[jA:lYpCnAU]Lkd]0F,%7f?:Jo5bXB<>U
%j"aDj(CW,/.Z'mgbo6tndAH8O#ap0_9TH?H)JbKi\/(uC.Qp9^#o=S^"<BfcNsfk9m9>\\Q'T7K/&:S`Sg.;dAQ4`6+rI9!2/ld.
%,HoX`4D4tHiCY;Gc3[fi1d0]oKT06D#O`7sNddHV&jRG>8V")<B:A?c56k?9@-EUo\,)Mq>-S*@6&e,8gNFlTR[pJ3)dJ7j!nj0P
%D:n:!rJe<@DPJ]1;Q%DO!,8iGPN";fih+Ia!++-bU+1*mU8i?4M,Q*iOLY`12$P,oP^*8RQ:!a\Ct'!H0O,\TBH[E]YROVdgq&*6
%0IA`WSKera+LX1>XTR<8>Dn+A>g('.'4#h3qNcbo"WFYA`B-AZd8Oi"Ql?p-=Wso#V`Ac^LlIZ<+lUdej!Ze-<@D[*Lnt;&"bQJm
%cn5M+0J69AMF*/E@'u;#<8`qG(U*(j[VYT7:c43M5F[QBeHh5FQ'-!+Ub6-U_i&(sCrfkPG`rOaRkEH4g-.rbdQh7?9ZpeiAnmX[
%>/sL`\i?D'eLe"*Xt?Go5eH0)L2=?PW1"Rq0Q_!\fVjDbG773*5fN;OEmRS*?:R;?RrAg,.@J47'cX\QL`fo<;[qFiV!r=49b$Fi
%aI]+<TWC$[@F49f!J(LiFW0a'*/4q^o,*d[)bT4abt)$:i-5O_\7;"+*=XQ7Ep6G/3S]lp%*Nf6dpp"l;<22ZY..)JaV\NW-=trk
%qHHD6B??MJ@L[nC%XD:feSSO!>AR5\.71>&>>3M&:WFX^Y8*5nE921bX>J;,@k>F_9PQ*olC&knYh5i<)!acZ@H1+#26_iB]qQ$T
%CK9;-]]g!Z>n,:KD"E=5c,3^JOle]QIl7\>c@i5**0JsH-9#A\mQ]^(Mu-Wtl+M1?/oOY"L&R5R9tBj7ic(6MkA^K1Z:W'o*#%du
%S5;.Ik9ufUA?_^Ols/:sG*=I,DE2YR3,IX:!\B\kVAd7T<9/^Z1-MdUe$?A:W>_q_F%k_jd#^iLE$H?8B=OJV-5BUI/U#B<Xg-Bs
%Qq?QtNKA@aE$oJQ;6!==r\Iego,'T+oOoJm&1[]r7V\=:ao#$!<<oZf6;XD]s2LUNY.EZo(Ek*-\D<!n1MG5?#A9-W\L)1JJ,q3j
%K1m)j@<cgH*V[Y/XE5$!e*c>/C^3>/bB?F\YYp)W5`MJT/-&TQ>#GEa=!QA#%%V'[6.[YFUEO,T*V#;Z8[tc3J;q4&N"?"AFE98?
%(dqXQD&R/"ghu@+,$C5=f*IroCFUBo:%Et:rP#eN"*YUl-1app,d*n-KWZd0Q3.>TEbaBq-M'D3?%OCKn@4"gp&s)D*=XAS670oq
%)S"P@j$qk`0G>+"gq$@F1YQ*5FXSu2"1u&nK`*X&YdR$#)gY_C%NBOQ9rBbNXTl!=)*["3$<MO(R*]qc&<-"2Vgri%B+MH0hD'kA
%Tl[U[X!P,\kg7mE:CR`=#YWPN$\^=V\kJKR![]rI6k?Rd=#C=XcOH`AcXnGi)r)R#j,/eL4%-5N?(Uef@&XB`EE0/s^f(uf%GGPh
%NP$jgnS"8t_5h=RbE4,h9>o(!'fdFJ.SN/;pnXV#>+-]71%'a;dFZdG\&g?32H$L_)\)%WEBB-(M)hs/GpQo:A#Ub=BSP#)[6#)D
%:nqDOO-M9MKS5?#CS>^u*&TEV5+j>CRC[Jsf^<IdKa?BQg9!e$6!6k-BRcY>)bT4abt*D>!gDdN6Y=:p/n&g\9#G+uXf)\@aQ7hc
%d&sukVQ`q\D*Js,6513%1EF_:M]RV[X>HKf)n+)t\]RP'efe,9B&0,F)r--b9@2TRQW@BH44RUoJEbaeE.aY=jh;<79-."%YkZ+_
%aKZa`%CFF5aBKVr%?7Y+*.bR8&B\$Y&H^"H#t5s="-pH6G77e@`>pW80M/pRROhN@p\P9pZT2]/2;.$O?5pP1OBY'@\h1ta<>ga.
%$q4o-;2r4J[d+-#.-U$feSMaX#*9DOB^2mBVX\+_7F!:i9s$KEp`h@)QDN7VA%P4"Q$(hM_ec;Ab%>bNq.ElG";<"+*Z7=6hRJ1G
%JjQUb@_3qSUMJ:!A#$0*$6[HZDBhK4(gn<NDj045D)=pT,9=1T`s%I3j;:u2`1RUf0R0jp)JMFX&0h-j5$B"6=$k@S\3_Z(SEmTc
%MT3hk\<R)c>[=cG=s]hb.X+f9GTq$IG[DK"BdW<J`,-$Fboo2E.(A<co"QqU<d\m6<E;7fRF3[GR2Iu#,]U<_H8]'#Dd\[F_d\kO
%q`f']h6Q+OR!`r1S9>O.'=:T=/5nIt4s"N^/QPZc=Ei<:=T8".Kld`"'Z?Hb.Z.pSDE=[bcVn[c5T`JTT?Te<h&@MO@#\*O.pEd,
%OlH<U\;a/qMV(0#?MY44&1@(&FY(R5N>@p>*'r4V"iEfKQ?%NrYGe^/l0*FNAY8HY<Oka:02j(&1GN8qA.p=HfVUYQ5$sM\2Ds?Q
%bL:16]W+I\0_OKIZj)7J\.K&eEPY(%EajPDfXBN1Cabu5OXcBeO+s?">rI=1=gHkX-"01B>e?sRW=1J6^d!+,r$Q=/dkQ-+PBfr&
%qlknLWh-4N.ZM?Ji?j>C=<k7s=ZmA0.ZB@KLC76_Z":W)`]`"\Uk61\p7DGr/9Rd'fIBZ$6<&i?:".IfBgu@"[qRo`mKD[#c.M5?
%WW3MXP,l\+Q-C6fla#=XZClnT:.6WA[p$n:&K)dR)a1`(8$9mr,O8HmLeAL93Z8/XmubD&,eSbgpM4KKF@Vdhqu?#rgQ#iHE[:G:
%JGp]62$0^[pC$ji*Sl5K">oDlN21dD8L@D)8!!e1A:o@rgW[po^75kYgSkql#kaABgp,/]lfu[Lbku?35<K8UR#,:GaGS6:E$!(V
%dsETUB@GsoFI72&*"Q:0@11>D':[=$]@POu*HhJ$d?;2TOl2ZDlXla*UHf)(QkaGk;N5`o$nk="DZL0K2hdrer5]pc_U>l?(OhEY
%g_[pr]#$-15#rb_Dfgo!Cds<q+qQO.\N-sNXh[1NhEcQ:%u4/pbZ3+=Or9"XW5W'Q7_83c](iP*pa]M>gEjg0:9=SfObJ&64H6&h
%)uL8?<*p?B0@:>,("siO.aSlGX_]B3k!5#C'eqqAMuZ^)apmG6bA7l5lLqH0<AYGOYX;(W<&AI)`kWFKnWFIfpFUst9"PdhqGfX[
%Jq.I>)e;Cu5:K-kN5c$2-'&VW@2oaoBCYU$@eaLKF]#=Pr^%IZ>FsIkR`5!FV(eZU%.A</_ZTM_Zu*:OUgn*bQ\]/dm9:*FU`?MK
%[rGAkD>*?l1G.XLZXjl=N.<F0(:qT,*"Q\6AY]V-p"PVZh/1&Q+@6V*,nfC*a]RpcApU('R\('/UK\cgc?>mpn/d2-4@G(op&Y'!
%Wi'=0LAbs#d\rt$_')]]$1\qfNHS$Y./f+,O%O5DfQO['0P5/\B\(,(2p"#rR^q%n^V/)62ibJdZt"Y(@n(cXV$!XYVo]!]F(8)O
%[USK!&?)W2j\7)?fs1\@gTRFp4B"8LT@3gE&bV0iDjr9g:ln)CHO.Wi"D6$E8[+2RAVZ)nk0+V@_4kW7[[A:Sg%B5n,iI?PPm0JX
%PbAl>bG>>lmk%:&%E1%B$tDB+!qn@6MBVGe)Rj5/242D+S`3BTs+^5hoMFa%]Xo2=Jj';_Xc$g)\)m!E"jE)A<k.f]IWuX?NlEc?
%&g_fr$!>.0K#>_sb&![3S1-M%]])7ZA?Uud@rSj@b1EN1+>\ZdJiDW.01'?oDG'];eu+9^5mMJ;nO[H\G#T]7b+oLcaAVV<o$jG3
%aM4kHFdq(I(/e2A^-SUrCR-&>m1N-g&MWYFn\\juUo\lQ[QCl5&b7+c`dgRa5lAFQ=sP*KL6`QLhqE$Z@&O@N*:0a1>Hs$PaBo@u
%RSE.W*o99raeJN#L';)?'J,"_UTjk#;/WXc$es@:O:'XNe[r']c3n\bb&CbFOCJ:N<"8q8HPmTPMnrFR4ut-NM]XdYPJt<.$@i6$
%XBZ6UcpY-Uhi[8_hA?X(oA/5?IWuD:WM^KdD/bppRS:r8"bVpBoq3@<Pi*C7n+0ut@hZK\dJ_'8,g]Z1(4i<69^2l]@YrR]C40iX
%Mb&R,cYsVF]DuAXCH&gZ?u!NFF']</WV\8iV9G2Bdk52bZ:?q%i.*W2&*(*"G'ukhF;i/-+EJBFaOr'GU14E\,2d=>2\&/,;1>Ds
%qRZXKDWru9``hg&ntQF&&?iIX]+rfW<Pe;N1tMj;b2[f@>7$Dmg0,PFGsnEDohD;$'m]8b(3.)\@fc:4[\YqYLit7u*d!bO)p8)"
%Cq+VU,<hM69kN0=12ij<.M+9u3po8(S%`N:>eH?]^l=^o.5"hJ(dO]>1VZe,h6D+6)&Ebm58XjA`(gX\>]6:`>/V[_!KAhd!ggfa
%gDNiEh<j?[8!W&lY8D1`#]3,?.+SoAaFeg>c"0>]61uP-*MEa+(]hmnNIOrqh;C^U(0pf%kQcl',P4WVT)s0d02-AGKtWI*MNU.s
%N&(*BculZppfS[Q@>dE#$XbN5cRpi-@SgR3qdJ9MmB"W)]la_'V:rM1Zbt_jK0p&nj)?E^^:dh:9'(TOJXKS*Zu0b#R2Le75(7`M
%)=-'F]EO``(/g0YNku=EU%.%^*-m7fK>GfHgMTH<2qrUm,0o&(*KM3:[bn$i\M77eA`MKIB4kUaVsN.qKUiR%]=SM]NLOd3c&oYi
%$:i4TL2\q#Bn7C*oDP,r3is]%)kMaKRT7abLBWS[)*:uu"bOY\8HOf9n36R_Nak&(Y%Ke(gXek][aAbEk,*nU*`:chlFm>4,q&g,
%9/P"e6(P8*]uXG_GG\a,Kq1\3%K]#<e3fs-TXp("3^4_YK4u$4:N+:,Nj,#_G@pQNHe?s6*T_[9&WLC]F*J&rIM,j[cto4I'["6N
%CIh2)V)[E4n/R+d/!!MKZ[f:i>G1cTi(;]4U15kAU`;P3ScN8#/dGcR3aimIoPgQ+R.#1hUIPrUgG,7]PB#-%<NLV<\/$Ql.YS?8
%@,H]jieSRt^-'9)[e(c-N((!pgQgeEr8<5-?;T2]GY!%3&V`2_,dUnnc]#q%'W$5F'1KM^DVfC'(,FYj[Yu2nN[js7n_G,=d\Pt]
%,q2:C:b!X`r;\JbPR'Npch"Y;2?_2qOgaTVr6=)7:Bd.8dK`F0B5nktra$[2H5LY`%<eh()Mh/I0Q,cV3%gAu[^kY/)iB!#S@'pW
%m/=lqfp'OIY"Y89-l3bBaPPa3(->`o+IQ`qSNoQ4Z:FmRN5>5Rbn_k*'H)j4%0W@p&M!#0lj;%4m3-SjfI?lrT_Eh'Yr4\Y2HqDj
%%$2DS<Im&^,K.%pI_clFm%<4&dK"OeY]_PB%no&=7lt3X0ICtb]cMXl+Mqb5[Yh:-,Qord8:5'\a95M,(Gf5YS82LJ@,53HPp`^c
%P"m0$&<pIQg5UVcE&8#IK$7q\j2tCO=5g^__06ash1]E-J/,MgUDhh^.U3YUM^%=-<\+(oY(j2WR4[&$RpZ6NSW4XN08msH&/)n.
%..<&E!DM/M>C3k0`pT6W]DqK"(mh@4-/\F\_f,H<">,:A)npmKC3_*5KoPGuCu,l]XG@+/H(iT;LIT((WmgLFgMLXP+/cR<=X3_H
%$K.Is#)KQu$Ej^ugPG2pbU"_GdKo0f<GpP1D%F\Ue`#71U/"T^5t[)4G!$c2FMLrp97sGr;h8KKDg4BXS$u,&1Oq494X[6Z3bm>Q
%0mprrK()f\543R`_a/f@l!$I_>%?+#D\t'9pG=5/4o>M,"hQn*C4<T/US1p3EaF\r#FnZ?F%LLUFb%8_R=i'H0/?%9(s4"ZPU>2j
%@5G_6gf\.[#+D/agDUR5$'HZ8GAptJW@FdPLj,T@K\`RQ7MRqjOFju%gF'%)OJ)10+&$JU6^G+>l'\r8"NaXk&BnPPX4n]p%>Nhm
%+Le:!mc@<()/7n\PYU3hGK;i;2D"W(OYA#=RYbrmM#k%?Pi&'X\?WENA">Q.^bT<:?nr3.mL"[,[V7FDgi^Q-J?`:&(F^'1N$9k9
%g8_f<=&4@3(j<E.BGMFR@Z9iS7!r55XB75T(b#"l]D^`YFmH;[HM/s@WAq[2\i=m57F5G(UU5HhR)R1r#3!,EahON?4BMa8O=h[J
%Q/l.8U:,s@Ol6+)c%4B2Hp.7#Q=*2eH.jTLPD+P>_Y-W"7`KqJ[pZrUmAK*:3&n1f+In/,hl)c`)K+?5'LfQP-+jVI_61lapWHne
%-YJeI0cuW8AU(Kd7W4)%Hpm=u;?L:`pc\C]a)qB*Q+VS`=0d")-ml;WZt,D[Cp+&U)l"bSHMHIHgB$si-QFt]o3N/@m\tLJU3B*S
%N?t5#]AhFp3GgQ1O)uU?hlDqdC@d>mOrAbFZ[2;S0GKIME9^T"a(mDOHTab4)g=hlG8/QpKP;rA^294k<m^d]USC?bPU3*KLAQ_1
%2qrZS_q^:ZA5/X+lY-OtEPbm9&TXPt6SA/!l+DtkCD&h+As"jCBRKQ#q;K_*m!7T5G?h8?nQu2u]E!241$k%cWJK<M*kd:_.*eAG
%cJ>b--DsDa+Q6f-@%/YmeY\+UJJ7<XJe=^0/1r!/[>'h6s%!IAZ!)rL*``FfEU!d%oaiX_B>OS2\A'j1_q^2e[k7_GK?@=>,?%Zk
%J,@(8]T4%GAPh(><0Y53/3Y9nMf-Gb(q[H0aUaHgG*&"AQ3sp9;A?hgN&!LS60V+)Q+*/DF/%kUN+jSu']s:h-k'`Z'O1_\?X)M^
%8TCA,(fdhsOAtZ>S`8hpU^\NU'gL#:,@f-]P%F/DE#gP+%aT6CN"m;;WR!:J`FL!KdVBe\8sFOOZe?m_$T;(2*uU`a3[o=#KkT/t
%<"pRK_`4,F)3FZ(r:3TA5<OB&BY>F'i:1WI?3/gi8KuJTeDW)RL7+s;:)(GI/\A+&OWrVs!(ed`W^]?W5l>(b.j\3-mo,<p'58+T
%/$q2K6PgaEE:'M>H;HYI'!&-/)[t;'@3R)VZnkYqSA8PA@+^-aRm7'2>#%?K1=j)>r!6_*mismE*oQLMGh_QljL:gAS'lu"f>S8]
%hu[.:kt*/u]3#i!$dIV/M$frC(Ic`Hb?#&;(s0p,8L"DM[g$*f%:k:Yl2(n9KkI0"fmAi=M6a[[,@TR?TGnVt7e5[Q$ge.sAm-f5
%mFU:!cL.,Qa^r1EIhq;@/:07K)UpsV8cEU75qjE"89XlB18_8E50=C9n"DSh.hf_\4;?hHj#cfG,GQ/CrE^:)4F5bJ=u!MjLap.h
%/5A=:EZo9'bD-Z[@9)q<YgL0?7Z)8"@!]Eu,Z:bU"sSe(="^Kehk6V_m4B[g4,8FL9&(!L'.jo%KW,I'Zqr<BLjQm&W:>MV2sZ9!
%RY=M!N\ZpSY+CI<0SPS/\ecmo'39?"GG77M"W,/83;2T1PfesnT1;0g1H+8khWa&j%jN@_RcR9hd5-Y'V$qCeb"^+Jh2NP`7Bb`<
%\"Mm5>\PG%\H.-IMbk">"2k_I^9UVh&Vc*l2`2"aWp'dDJ8Taj5idq,k]%I.!VrfG+mA<b\SZs+=G"ldHSr0UVkF(._OqL"SlKEs
%K!%OhO>@ia7e+l;`V4@U&+?;"-cP-C@ohce<+6:++X9^ZCK0=lhWa0Xa5IUYYk0A`nL-s!Wi10gdutH0L4<&7h:T7R#rQf4N+"#m
%b2A,51%cZ(bgJ(.<-liTONP[(.;V!#DT9P$GJe&O8jjqF#OSg%Nf+PsGY*i*UOS`u'7%lf0dk.?j!%*U)Jji5bq94AMGGZB:!4>u
%'RlMA07#!>`LZO.[dh^N$Jd@ihO<3?9>B)l%j"$f*:W;^N%4'*Z.k]''=&_e$'#hTVtcLUQnY`^e&iJ(;B3+b,jp<e0[_Mfc\7X>
%8lb:4K#]p+EEQmG)QZfr-GVOd(4"#fR7<VLNY,d`:%0(uXf,NojR2!;.AgffRO_ZT[t-gbjn)>kp5N's:r`^K,^`HGA;`5%Q3hI;
%?Cpeh&eu;4]0"jFn-CWdA*JfBqN#=FUm2lO`>"mRJZpSi^Ch&l+YSn[6!PdoJY(rR!`2hL%S(?KH$CW]qJ.klD\bWXMEHN"YOY@@
%;AG>dH=;(KcGrB5/oVc"/hpURKBP9noZ,]47Um[ZG1hiXGo?0+H6=QE<Xl&*](r"S>UG-jr@+`WPYJ0nSOlnC``)?^h(F.5,b@)N
%,*C+E3Y!&OmKMTF`AnrpED:N4/*63)`N>jeDH2'h'>-#c#f_s3NJ.2dFQe$;U3ZiVjb.MXqrfpUi3V)%_.WjuOR<qYI</j[A<)&3
%'.i;0#Ipe.T-.V\D%Xe@gc2SK!QocMY&B=V3YiV?n@8<#84.`6Lam-8<Y%ZPUYW43E\`.*?8"Nh+F0>V5Rf4;I7i]K0o+ghP.^;.
%e='5CF*f4N1P8^NT-&^k__W[99.V$698V\snVa[)<%,TTDf(@3ZW!C#0UmU_FkYTd7Q`Jc6%OAZ5b1Zg"AX$h7=[=3h2MlmL8!P6
%8f<op\DqPn`ajDAP"7LB"ZH`8S&%<m'V+*3B%X^&KRjV+5Vp-K8KeO4if!5Io#'-me7>iq@WYg8-^4r3:>P'FhE?M([n%_u>$]2T
%W.<8g!-Fr)9*VM%/O22EMkK'C&gVk:JJI'EaZ]9^EUT\_9qpq5E$JAN@8)FCJ2&F<V1Nc(?]l!^O#nF<9H+0a@PJut_I&3oj>Yd0
%TOu,]q@)Z?k`rhD+o<Yhci#'bk3cd5CG?_@4>2%C(jYkjf?4\3OP,25W!s^)Yks%-g9H\?ilX&R"E2p>$ITI4'eftX\Tp65ZH<r9
%SqJidq$1H1D(T;"qF.97jJHLmJJ$$r`5uo\"W30Jf)`ceECmMKOqU*Cbfi9;c'aT#(G<mm"!eV=qF.E@$cjkj;ij?0Q=U5WYI_GM
%AA,>"8^Z4q\?\[(/`T%>!]ebqDR+-"\!H9dQQLZE,!0_B)Jh.DC:j%5.QVN&9PJ.Y.d9n4h6o+todkKgMrsrQ=(k>1)m2WH/PRFh
%=M<2F-7PWs%:]EC)lUAPQArurS4c5c0Jj>H*!eM,D-l<"]/U@R.ba-M,-?uVZBAY+*LWQ41qCM5\bSZ+5T%uA70c]Mbo69bad@nn
%6o#if(Gdf96go0f_qe<P-Jc5$I8#EU+J>FWAoluKck6'3.B4\96&h04\lEb%,7mO@Y*B"b?@;U%*09Np]5iun_7`/lAde/uF7iuq
%DNrEQ`.PuE^koOB:'U;\2P%iRk60!3MkDf2Bf[UQjGG/X:"MB+-:KJ-*dKA[6@nC2H>.pd.<;Ku,&0@UcYOR*pQr`:68MmDq;DT%
%!%+"4Cic]li*0/<)5umYr8"uM=>>/6M(Nb>Eq(*cZtfd&43bOG\KK"%R:Gu:ZYt>deP+?ui8FlM=AdT*?%gl>:d\K!G9=2Q4X&J@
%66jF5SFT$\V,M;*N_3C8[.q/;LLJ2>s3'hJqUpd#@5Rm&qPXm2lr6E:H7l(A(65=@^XF%pkY<Ki4Cnr+C--tbMg_J!44KMi,@\MM
%(R,bo$Xpm++t6;VXPn%Cn1:3s%+K1(&F1$rT^DTQ<#h;9rQ$hh)dj?^V9;SA[`T;Q+RqS-X.gE/[hN@T'`-b7FHjFR$X=B?;$UnP
%^XS73Q,;n<<]$t40mL<,m>0Uh`C9!PG-8gWF@UB5Tq]FD``AIL^$Xm9#?*G"lHY)45n])1:-a7[JIq4H*=A97Ej!YF$:;E]lM[+_
%SnotZgFVS_Cb%C2_<[h2$7KZ<+aF[$MRa@OXN6FCj:"\nX`8920jAaR/He;\!hnQM5nH*tP6Wg.l0i)VVVEAS8_49e->`P]!(W@i
%'Y^cbA]O#'R(R"5E-m71S(jF7BjR+V_jq]opNlYoYuDE;o1TkLK14d]0HEp2.:C0JX+tO1-Wcjsfcn.=dJ]2MZBYRjOgG-c/_>9K
%n=Q6'L]+=BOm?&FG@?CNSEuDWSeQm^ArI)0!51Aq%=pa,,k?\(TTVj]jr1HB8Nr>.+P=/JiifY",*^r1oUOma:Agn1A9QDLG)U+c
%0o6X&m*uk.ig6ffL:@n@O.-W.F=_RhZE,;So1_q\Nlel$cDSdE@)^0SF:-6C=hb8STB^]u_Dp<r6Hs4MRn"8X@NBdhI,Er",$-02
%!f:d(C`l_n3+W3t;.0uT9N@sEX`p>Dn3=2a=]C'`5Uu8(h0%d0Nc&53CD7(AlunV-oL.Z4^JYAXd>#Nb*<UZ7#gO><)>a^aF0R88
%F-q/4p!Ga@Cs6s3Qb_0\73/&8Q]bS\]&aPImNeYq(^bd5@jRJA+QHn>KqQ.&#'f5I]83FO$niVZ<rX-F'eQFhAnD+/iXl',Rm8Kr
%_:'eJI:gPrJa-!-$!2,QdX%^e(DdY+8:j_]EMX&T9-H[]eqlAJT[#I+#2IFf:s#e.%<eqnrQ&B`*dOYR+7=eoF6Pn6WdA=a85P8O
%/6HM'VBI:[:_Jaeph[ZbPItF!.XXigdMZ;XBoF?eM1fD[+DL$lIS"."oltg28>!bp&n.fi"H_8L%a-Gm@u4R`9(2<6iKD0aa!c';
%VA=mQMN4H,8fY^H"j2nOY'u47S?).qE1(9IAD;<P-n*/,Sq:\g1W<o#SR-cT)k+$u)nll$P@"_im^Gr"U<pLkpD[+\J?rXnJ%.=e
%h9o:7B"ohr%aC$plB`nq[d`NiGAeXs*e!%TC5'iMTNL-^;%oUi0aOi8Qr\<o8lT(HqRsW?MAbB'U6c6]l-_P\)]N'Nj%Bc%5#B8>
%?Q%4M<V`;K]Z[)DZp`\Zk,f1kasQ3]>\]&Xo@H`d3,fHR%X+V"MFDJ1#_:gE5c)O=3dRl[ehgoTG&"p!QM:n:^\R2Zi,sGZ7;tHS
%#D]ZfJ@[DJe/R^Mah7"-m-]\*Q6Z%(r%SpW^"s$udOnLU!'p$kh-&)1BaRIjM8O.M,urBQQ'VR49A:B(-c^@&!G$]153U*SS=jAY
%V;iVq-ABde#2"G\7ROW@G4NP%M[4V37fi>C3Y2;6/#Z/Wp:1QkN[3+c:s=[ZUb6,mJ<SZ\5m!uC5@"Hp6%Q=d0k:"7%<6s+o4Wqt
%TK&om2`_*CbZ7\`KGXJ2Jsdc3iSE4R>VQ:pU?t3s3ZElJ;HqXoVdq1MdY]^;K8V6f6>ESQQt5e&[dgVhN-h3>K9$Bm.T.QDJ$4bP
%%U)Qs)Q[c-E"NA/TNmA-*-g)N"B/:HBGQjZM@d)T[dk:+1(?o*O>U,!B\>fs$EiM!7%HG\<?UHIOD%$-q&N&Q>nO\72H;YF<60>]
%$UCXI0IDtWC0a\!OG^Yh["oS&@CnE.-L30S1(?oRVJV/6^bf9t!g2EL0Tm]B]Z@f-bq=7X](Pt0PLhQ7K1>Srq;JPH<do3+?piIV
%"2&(B8:FM*X%!kh3L)OX":ssQPU@1\BbJVG"Qf!lFZ=,[%1"I,k:#W0eCl^"P;3q\VC>?1r)&,XhO-@&W'd>L%Z:A:Z6c"5HV:R[
%Ugd25+G6;2'!_Z".P$>8ci@F`qkoQ.A.;<G&\O$:Fp'2gfXb;(mH.`;.B;i\iCO[/]hX#9E%u\#/mRBc.&;TB)c0eEQXm<p7mb)g
%04Zo-nBm>e;oP.OK5FP+:6j78_*=9;8CSQ#%!D.Y2)8>rNhPU]">W!`GqL=q8K%J([2Uq&Kh;`L^ekeJ(P*]Q.ZlNEG'H@Yhr8!:
%,\bV-4XXDa-)bno0)NnU+S`pd^lfc$7D(*&>ieLNUj,m1UQH7PH_(*(?sE9??+AK@D.g\n!U3+$8b1e^-p[:;df6OaK>YST%?!Is
%HSV@@^OS!P(P9F5L4u:<\aJFKY2^?"!`URUUh;*N:PjSl"TjVBb!pF7#=Y+c'3Z2R)g<bD@n;4"_YZnkGf<fJ0!JUk"S!C-Kd%[:
%l1Z(6S&0bLQDLpHi)C>$(pk;E@@M6p[kZog\!%mTCQ#4J"V`)hE3BV*%9F`>9!"9mIk79S.6JI`*d<%abFbefL),)m0#b*9Xsil/
%Tb3T4I8N\=#/tqh8ELa8#mpe:mji5u/(aq=$,oQB2d3AJ^R!tX@NR0+UIF1/4t\bm.%Db^>-d6mQ#-<[AmJr/2b]6nbb_C['a77T
%gj)sJ$GO+bLnRdc]CsVY@<`^(0%EE^^K@U$>h>J.<jK(0;*qIb7P0HCfRmSUMEKIT-?!ug*)T+T.&M[nIhp*W-Wf^>!EJ6=W1$L3
%,fu2N)Zc[E[1*]PakhX$Q);9/.FCKo[0bo`W0u'rD_RQIUs[!&Un[:_V$;Q!&%)^PT&<D(?,j03c3s&7BM/_Sf2"!15UJprn+H:i
%[o:Y,/KP,<H:Tl^HUH=hK8C4;]@/.EYRiE_87!i&C$7oR,B[Y)d&Usc0faTtK4p?)kom2#<j=jH<JWsDGp5g+$gQZ9-QrlRs$!UL
%&42R]7g0MD20chG+TAhA2?m`J).D.'9s]r/paREtWYfE=hTj8Pi">TX?-.ND$6QPa<[][gQfQ.X9$P%5r\KYlK"*2jN@>^"$(4I.
%#ulQDq:.qm\"ejO.cRkT)&D;cMM+7=2`\0g-J.3DJOo0*E"BSu([U]D.!*;&NpHI`0sb/#)N<,tm`)M@$c-=)!$Old%0MPnhi$hI
%$RO$>2'`;*:-@>lH.aHi.nVN<Yf+24X3KKA3]q#5l^b(Kc9o1pno9q]YjOt]j13ddO5=)<e^&#q26/b2W]`;em'm!9*GeXSr>pFb
%0.$]si/pIC@2m@X]87ujQp.FcD#d]pD)7(\9eW)obtRsR7GJUDJ0U!*>Jt!%1!N^*DiF$tgUMS+NHCM#7PIPWSd9r.DG$Z8*Ord\
%0+Q")G#;3i\%Qro;c(j5>XaUl5Y9.C0I&Lb$^_WG*%[.Nhqd\]LPOpD/k]11:2"(dDH_+R)6kBE]c^4SL=[fdhFaD-<-Pq$#ifTl
%oMo++]6Lr`,"**gTo@*lfUaUcZT(=l1h'S7VZitC9a]u+gKr@gbTt<WF"rXA3]go<*8r%_SMjrrVI1r`\?(_H-F%I:;T`aTdLCjq
%7eJs&80U*0?n!rJ5oEeIa-EL:Z)ZeN?[MV-36&Bh!@47:j9pPI]\n0L4PN&C.JY*1!2(K9YHW>>`JlEUc5):-@@5CQ,S6;q`@.pm
%`D3SZF96b67h*PZWJ_aT`@;RJR1Q-h(G?d:bsb'KLN;*%J)TDBblr#500<.:0%kk2V3i;0p1@TE$'4_q$:MRMFV1V<NcZjGY1.b!
%Pc4$*ghtE`D%AjY$p3t,c>G:kOh)fR(ouXp9%dAG!PGT'N]@9oA8GF)@@FF;T`p+t4;WR1Z2>ST\Ps)s&8Td+cGNV$K'CURNS"il
%rqCacq(dg<QLCes^@112!>Gfj=J?Ge_sL*`i7e[K]+@L$lk+biS*ak(3V&I=A(BB<:dJP>)%fG`?F)V2g6MPueSs`N]S(+hMsT8A
%k<$cQ$mAMK;1)+oi5t9g9=3D9^VJBC@L@(p*8H^:jmaP\&2afbikXaf:-hkq.`hjZ1WmVi<^am)P=dW9*nu\4'?2?caHB3a(0V6A
%6b>Wk?n>fF)gq&7LIX0%!jXmG.F)rKEDEO2&HM%)H?g3CA0.bT-ZWR-SAC2UjWGD5S@0+=+q8[]dVN)GLuOH%bEbW^a)/M'kYGr`
%%Ki-7@0tpNP?hT+bj&3#$4G5M-)d-qnREOb2EG!PX=d_GjPEZZN6snSY$;/_hBSI+%r"LbPb$A6J_MSK&XZ+d`t7%6,Tr'^#J]N`
%LZ]J@TCb4s!6j(!;6(%_JQ!S`k83'!koN6`dqh>CkWR!l9ep5Edm$#I3W)4tCXu3pQEk93$XS]cgq:".Nd5Ga-%rN4QQ?E5/<*_#
%08G7/T)mrETt%dnq\QbOBc*Y//9Qa5`aFC0OFkhBJ3'Er@]0tXCu.fpqDEs=(r)VB_o*9j,&nP*D=;W=_q/D,4\oFq8f&g\9Dh8k
%lhc3'/k;&;R'cgg\-BdLahubR&]te-?WZ`be_R/.He>0Pib9:O)BO4oWNECCB1;NsZpQ?eX[EQ1m-5A&b49$,&16ljH^Vd<8E>iY
%W-B(56mMn5o0RFT6tRDK6SX>G8%#kU%$f\Z-A1P/iU71I8m<d:R(@D1A&n->rJU[ghM$1Ro#4u6QhKi#s0$YHo$=[;s7^a4n,G=7
%j0li/#n@'dD7:A[)=!On65)-S9;ILPjMA^Fc1!?ZkoXlmj!Ibp>A8GLJ2C5TkqaOT#;<=g#RhmUE8?7"bkH?!8a[F$hiEs)nMnQQ
%'F&RJ],qa">B\(SHBIe\04HQSGJ?l`bs"+g%gM#qkX*5C&/fh[IG6Tg49-TLXtTnN@B1+]<g:Elr$sk]i5&-aOV)AFP4]!mK8Pct
%-tQnY_J"(p[i5oAo'0#:TURaafu\7WSa]ZD%-b.%?ShX@TX@MQ$*R@'e$tLeQY&MK6>#8c9Tu++]A8qO>0Y3T_l.UcC]SZXXFbj*
%)g@C^FJm0.i5kE`VEGnKP!'mJ;u7h$N]pD,d>IC/?c%+q;j.Hr5muHJ:X60q)TW+Mmp>@8^QtTT',2<EG,apKs+j&s3O2rG]neJ'
%gRB!8:9/Ek9bp^X91Y&1(Yh*?7G2;Mf!RD0jF#$NUg)/hSDF=/#DUrbck]o>j22>uQHdhPiJh`]\INS(`"b6c=Ih/94(.K5MgD,=
%9ug]k,h>:hZ[ce-_LLK>biBBq!FQRFb5egNf>$N3fT$J0G^=^jn'sn4JfgpPaWhTpZWOTI6_9,k&$FMrdB?R[XnG'H36B!RE'AP?
%lNiE;a+YgnXk1VMos''FM[]VND:\1n=G[_$\"*WK,l7umZQ]K7.$1?4^B*ns1ohP`q+WY*:3`:cZ@9pcP+BYc_8t%<fjt6Ro]Fkh
%0GrQ?Kk+2VVD!+iG9!_S5T%YOE`99+6,'$Lf=&qLQ+Pc\%YGM4bpk6:+1kAD(#E#!p?Dp?"tZ=>E'_.$6,$[6mg"o[m##PF\okW'
%n@&rH+s.MF!d;^"!N#Rdm5\W3Z"TJB6mW`X(e`F.KU$:f%aLNfWKT7_r5n7L]r,]os)b*eD)i-0Ne+6Id@jVL0)u$b0.Nag<oKfm
%4o$"3"ZeSh5bGq`KnX!,3G(/6WZ6"6SdL@<Y`jq@&Xnf7CWo>bL:S(C!I'UUog8`(*\=U.h:0D@0Pk+X/-V!Wl@e2+6q?-\h]KIo
%DtA"pqU9d+SABqtgNH(l7b"K#73+Ks,CHK+HqLE-gShl$3<:?I.cljr_m;A:h!TQHeOu&='Do"$'$c_djM4`?%7Ej1aT]dS?ROj6
%U?a3Ae/m>&GVHX716Mm$&QBD#"e;W,],>P>=d(pO*#bJW_d"<&lGA3.cVQ`5gl*FM$uKtr^TA+*:A9W3gT0WZ.!e`Q><dA(Ud8^3
%gKG/,k@-ih4^/a(N;YI.F9>Z<nm5-._PWV1DCpGf?qVj^'VJp%O9-+a)EXJ:ARRL:YQSQ>ATli$=<%q%;3c*_8tOlK@"J].N$+7J
%8d.u:c;L>-OA[lEO+oC*hB##>-[K'Cc0`eO5GeIL?o_*,A8,&;*h),7)jS/-pY/8KM;63Q]lk[!TCqX&52fidfUctqlh\'WL1\F*
%Aot<o@[9nX2dno-!4VQ2BkfKjSI'&$o28dJ2tqLhs4BcukH2o%mVi*LmK.r0%/tIsY9d[r\i`MhX0<eTjF+i^MKLdU6OER0Z?:F,
%LQtiB;(<^10YZDc-@;6';-9P4/<*>5%2+KumpimtTQ#$dE+Xu:_BVTpP<`DJb/M0\l[f<Vl?d7E2Uk"FPtWAb`.lu%,"][FO"t$&
%iDYC!]:72ns5iF9s,WM50E:E8*tRB6lgpJ#J,I>O^Ak['T7?jLn%\_Yjl8:Ls8M\dL?bY0nEtM8s7lTTh6FfB5Q?Kl5Q6_I^A+2$
%rq481&AT__FmhKlcX2.km2u#V0\t?.s2h1"?[_hARm6\S:l=KShm]6V(]XGX^\_qVIspq4bL[j8fDkj@:]?YuIa(*+qu3('O5E;B
%me]68ZhsCjmsb"T?[[9HnF+*fo%PhT^\lFHhLG(?qlda,8#_:Wml(-R+2@a*5Pg$4ok(l9iVb_(?iTc<J!Tm`q;us_T6sc?9Fl)H
%F%+&B+ct^fLL><S-V;n]X[/&17!V4o_A?l+_f_J9ojeAZp"Ao??n=)BL#jVB/qRLo_I..c3]J%Wg)9s/ZFD[5Cj,&QTqJ@MHXOYo
%/5X<V\`RoaCOs&,F5aB%FE\5N8bJW?fR)HDgKpSTr6tXdJc=j7m1r1dmAs)'Rl3-HBgTl^8]+V8_*aPJ*L/qR^"hnn5e1Aop[]iA
%SR$Lb"ZsQ9dAgA-i1ejY4:oZZ>%C91Stqe:l;2m708RZT\-MMYM)i6CcJO-"Va-,WF8+\?o-kBE9!4*c;>or`p8/HS\48GlMDRAr
%^A%fH/-uHO?<ll-F+r@h>%=-F4tMq*A!esk=$hGYi\\P`0g;Aj9^o'+Ya6K_.jeuAoskkD8VAi5o7a*,7?HpU/rW7PQN?+Z:qILV
%"//m%^r`[)GIJN?gRAh_.lW7Ka#>;"mC#%JP;]7RNpa["VY"M@(uF\U8*i`1s)r7.4:Z6CY5lP@9a7Z-RkZlT%.M5r+UCVX,%?Uh
%:BCdGS-U@$qN[MgZ<l@i1?l;`'DoR>.g<\U`7VG2H/Wl+g%%'$T0+<#[57nrB@O*#EM%\^#H/sHiJl+K=e")dTfFN/Z[rOSpD2<i
%#??P/;Wod`d.]]Rp>7&#"Jep5A\[ue:L'IVB(Y[7Z2`VNrc?E_cTUasi1B[GRX<.r>YIaeW-(QUD_8oqpjRnf8o\-t4GTg?X/S")
%7`6`A!&&7Is'q2=(kAjfZc8IPdEAqCGWc/enu<Bq/LtKePhc?#TXs?("]k%%$6Tfn`5'S$rVKa^M68?MRI89-,)f[)ZY<X8j%aEs
%Y1VmrI0)(?*I'hY6**l5]?4a0&f"r;@G@*>oEkg#TUfujZZ9IUCQPH06)Qf8n\&sLV3f",p=9ZA?Il[A0a/05^rUH2Tf?h?C@p==
%G#MYp_H_),=-L,KF:g.,>*!Ba7ra7eBkMPZ+ak>3QNi`l9o.qhCl7hP>SArekS9<uCA)U$d&\!r"ana-s4aSk(N;/GQGUR.NeScg
%fqBRkIg1h]CKp\l]"[q&+k"I\(lYTa7EM!5KYh'oA!->hJ9g#3H::i^mWI-B7P/tgXo3O^,M-$EX"[?4;mRs1Bsp?j.m$`kL.2db
%,[,k$7&jtu<fSN2>#Lc`3$%r>@("GTfR:-E1fN84aOmE5[\Sj.'HOLuq$>pGUGo)O)I*JBH81e'Tl=pX[dK*tc:B`T+t2G,L.XDB
%=D)gUXBp3ZUn8c8ATF-*7*2NVBK0,>;e#B]T2D=+=h.jW@2Ob4p2,,>*X)#67A1dHSKuB.3<M>X'pM=@=k2`B\e-3-Dhrl;OVD.*
%P5f1Q?P_2ramcV720Rc2e.$/O&l4@3H*B&[A(uPbr_YIO+p2-1jFn1aP0+gN5ZV0YBgRcaq5g?8IlKc#p7LF@?L@1U<\N#8:j=7"
%,J=!&B6M]<an&.\Dq?R[gY>/1Ni/YXhlE9i.CgnW'h?q(^>.KYNQ<9'A(c4Q::W(s[N([k1a;$D)%DA,GogJM;gC"B*h0(:5ZN--
%3FZ^4P1;f5l.I.[M-KkFI'D58ltn;#&0<X[8cF`g4Tr$cOn`r&FdXpG>8Z*-I8\"iX7.l$E4as<p<WrJc6cU_\%_"hoZ=pA*&Msf
%MJDL\-f"g'e@GWH"-hj!m@m*]C6T'bdV[lmZ#DWH6:DI6@Rrh(phG;-A(7,8[13N9kWSicf4WiG;=0!<'>RdfC5u;CeGeFG-b2kf
%0c"^ogbiI#UBuVW@MQPF29&4qcuH"=[bLhW:8-IC:E`["Z?`8Q'M?s[o(ptfZB\(*Vu%MrSG`"fMOP=.6c"?*hcA?<A"'jXJ52)G
%o(*f=rnsdTMsq7JS3\69OMY@Q_+p7".Nj(>)tatuF08"?`V5OuXe\9Ln4>.BRt<@3)Zsikc^ml`MiU$5#3='V4LB;HD>>L'\p_aY
%dOV=;KVgbb/l+[Zdqekj/gf&:jU>PS_'hlV5&@6R1e*gclr-J1g:PqkKXSs:\G,24d5lNriRcS##rsmr5;;%JR182XmL46hq/R0,
%e']nTa(CMKI,UkH>hf!bdt]hkFmS\AZD0=][Zbm58P=E\gaF^P`1QVK7ce$jo^F4KqF]SGp2f05]0#]oibhg.+#e["m*=Dk21YUl
%#YfIrXgp\FFjOEg0a%7M]c-.4CdYX2-HZd4\'lfX0tP9Y(.H28n_H50eT8V#0M)O+AkAlhi@*4g^^YMl7`92SIUi$h.0rr7WL4)!
%$\>Ij$qi0,%+Xd]Q)j.WJ:OGjHZ2(5dbI*)5Jq)VdpoWW8%4s1pmQ@tTuK^Y)]5Sj4'CF<]t<%4TCgE[7h)f&T>">)RP8pFNL70c
%>i)oE(1PJqQ(Y(t'Y_TQJV#O//c&%iY[p3Rj[h2^,(W2P#[3jXFS=6OVP(jHiD6cb9A^mJ3uEN\Z\G0q9uS#&?E@<KW3rm93GdGF
%J-O[si'+k;5iVd?)DRf'HTg=RO^A@ZDe+muq`rImb2'Zh`pWO3/O!DO']r+-Q-,hp"d3VbTV!>o3nI-7?"qq/<e@P[E$lE2P:'E(
%(8,Mj/HqF8EJ/:r.XZsr;4JCLG:>Zj`??_7Z_iHXK"t=/]CT$\8fe"O_"pUk]VKFBE8T!qJl<ZG6HW_,2&4G0?j1kR@2gP?\;D8B
%`Yb%^gC?>U@PB\eO=)__cYcgLjNV"Gnm"jm`ZQZiQs:sQ"`]=V"mV4?O9@`5ec!H&(2]dEqiH8<nHQX,LYW9:V5lnp@4I[n-M;=W
%1/7aS<?F_#O1t]Pg+3j:1OgX;c=W3d8ul?cW%JS47FUiF@.aaHq.Rb-!Oe4j5%?#')2#_+I#@!q,JI3pSVe\WL_hjO+p@hV3gI`V
%F03^LJeA&+Mc,3DE\P-^2[b'N'H=-6c^gnA8*<[bga/3r0;,_S>S;t^'b,B5_mB:a`HccFQpM6Wio[5P4F.]j*AiH7lX;,-cXP""
%oST)m4hZ4.4amNP]epPR:QOZ:X@qKBf^.%Zm_I:d]>p>.b`BT.R[niM>2SYU-U-remBkN3MGtJ*rS%7o]dV'VM*u:jUT(sM`k%6X
%\DLoi8l02mMN\?%1W+SIeE;Pka^IZ%c8=uO":dqBM$Xc$U&8G&#I%W:4VX^c>$Z(qqG,U]EMAs7R]TV_]*%Rrh*etEZO6r4gO&YZ
%:Csul$3c+G/Q%H6NRLc]:rAm[KHca/RiN(+=/GIU@0RD.JUiLSITH>#A2%-$OG0"]&>SZ#G%i1?^@UjN#o;X8e%_OI@3?-5[it\f
%50R\^@CB1F%8o%7-*S!j1-QEs^Hk$ko]]?"P=_)(jkt*N)A!jnQ/*f<6>?]`7[MW[Ue4OZ`<hYtkq5s[Wp*pYF7#YM/HQ=Ag6m8A
%k+[Qd0`WAZ:<$J)k&+)84Z]tmo[qSmbB;Ma(nhJRf.`4e!e]0n2+T\d$9E=58C0X-ZiY5k3oYobnFWN2ATp$ZWfdFN\LqTC>cJIr
%^FX>A@>R/X]GJr8KAD0AeS7L5ZTOG*1bhN*2V<s7RmTB\<:u>7G#5daYSLjBpq2HOFqh5)oonheD)bctW`[-Z-Nk%D-A3Ca:h>CM
%L\b-P+,R1Em=QTWnlt6gcaijQo^:I#&1?):Jtj2hg'$U?Y::$o#p[h=W3^cQL]8B]<!N6:Y!-gsP#G.RK<7XVmYtE0P#.(U`W4IB
%>4)U+P'2XHiM*o:RcTB7/$9R]A[PqT$RjG`W-h@+-l>t6KCV$*d8ha34&cuELWPphASQ4+)RSMIA5MIs=Xb/\J3o<4(rIDM/U)9M
%hVIRT+!*ZP"H,[!Ir*IsnlVHj-:T=n*]m#Eg-4ZXNWOFh&"5tW=)QCm*^Ika5gd@q"HZG&c20qfa%@gQntK<n.5V\k.&7eQ;QB&9
%!oRb'A'SP;ehD'b+a@9^*+RgfZ_9*6**U3bU6pe+!FaZ5ZOl%bAiib$kD#K5R-l^VgQ:Bb0&gPLM6tK1,gIEI7L[Jfb5sIoYW:6`
%cr;TSh4^tt2FM^-Je-945fp]CA4L'D(#OOV#W3mqNSjIhILXJmAaO^jJa?8kW8=N`!5T8b1I8:P\pW8NK_g>Hhit,SqklsC'.Y8r
%B2D^Ob#`&ZnrktVZW(co+]s]"U-d&MSjbq^(a5WfMI[p!D(W)[=7RQ'#^Y4g!Ip40bc6*%#K*LQ]R8jQX<%n'RS28C=l<ho,LYS#
%0LhQ&P\QJ#pP'5uBPpT8:pP4Yh$8o;+*>YlBYeSjQ8"564;63LZdqF0$BCl2>u;1E']?&niU(4W4U1D+XC0+Mcfm7GI7BL+M3MUi
%c>;fI`=C9ST`B'XDSPrOc*10D)Fh@?'KNTtWCh\OjBB#-o=[=BcD;L8=TJdAai&I@hV4<fHB$%3]lJ5gBuJCO@;4r7Rd5VLUY_?,
%5?8%Hbj<g:pI?m#$Cr9dC8!_&2&m3BYq$I]PsJ9IgWoWabFsWgcWF@X8<;"#?5:,*Qe+Q,DFPN6gP42YgrYr0JL/ZJ[(StD(o#aI
%[erjqWQH_\WR'r%>DUu9/atB,e3Spp04i;c;FOqRN2[/Db?V^_RfO9,hRkpI\?+u6Lq0GAn<Cj11FcB7@>h)S?9"Qq]>8gdYJ*($
%O"XRM/'"WN%,KJ%p!8Q`8-_6N`YP"9o1:qW#Fju\+Bk4L?erb-K_iG0Fe:,e&iRY;CK+k_JUJ<61(sECJ>R5@?U0U.Y't+dn!2j<
%FV6%NP"K6Cp8FRc`^kc%Y\aRIB%`:NrTL6G)OT$T"UGKKs#HAR@J;.cGS!gn<bW70E`;E/Zbq%<*V6V`fj5X]P?;9%"hMCYm%MU@
%a2`20s'>$sV3F18@Mj*q)a1=&BA3DIA32[HF1)l,epC9Q5$#aD[9cQ,\12,jC1aaJlYp64k+q/sT@5kIeQ"UI&sq8tlqF#O5NanP
%;!?@6mFWf7>-#TQIF(0HlrF+uV'BeQe>^f_U,jaGJ.5#l$njBPI]fhO\Qtr-p%,Vo(O]D\VA]5U49()IAhKYkI'o8A5EZIK+//@Q
%l.k$UY`\c4Wlk86T+@A[C*H?DPrJcV@W.M_.$]+UNGMt`+W@eMn+Go,VIr,3Wj]^*22")M\H)>\fK>Pd?8R,4G,^ACB9Pu<EeH;q
%B:HWaO.#0GTI6"O!VscJqTXdIcheM+33Ih,4"p4U-UHHS"CPj-'6`:0:2DH;J'DNQd+>ZA(&u"sprb<S_Cj,dm27fH_&7u3j>DC_
%Qj99pAW2.t6$PIj(2^LN_+S!j^GJI#6.fL3?-I\&%rcJh0.6p%)IqQQf4^=4LaG2=%O-s:-*k+>Kqa9<T/ECd,$D2<.$\XcCn?Cf
%7.QaB"%!Sk90*hM=F^j_F)@o>Iddp=Y9e>H9U=s9.2773)su/dE0F0Gg_[.$ge"s&QnT]Cs1N_jo<K,e\6H(Rpcf-Ugr#5R7%cMs
%FUmh>P,#bc*\SQL#;Zk)(,V;NIEq[SgG:&D[]Xm1TnV`<P,aDHJ_3,KD7e%,&Z?4j3jIT.25J"qej]1_BW<<b"IP?XQ@Q/C_?26O
%^'6SD'j-'ZB%%nbB6.Qm+_DS'-5;EV8JuU_c2U&;_W9U`[HgBd6F[om@H#2l\F)%mIUV]KYq65?YHa3i0tV6XRf>N6b=k3h2Te)Y
%HX:j2Ou^:.3n[gc.9K.V*'Q"'Js(cVE;Ysa%p'FQT'3NF?e-[37$k%b?UD)t"t1!ITgOAU[bC@UZ1_sUpn7oiK$o"eOa>D2#gUFj
%]]!DT;?.B=k/q,-7L9/C'W6fai6j/%I64,d8W1MLbM/<ScU@"e:RUL%jo1#^psG,fP1R`:faF%jeD4so+Q;Ig<ZB"'[JYjQQcm@d
%UuERt%n%JYU'd"B0b=b.jRhJLZUi^d[4R9N#c(/\M@=34:4M.!RK\GNJS9c\X=6sXiFo7i_s30RjVbYl;*T<[,L=.&.a&@Tp2tT7
%)+LmRjHL="XRe?nd:o[aPT=/J&,[f9NsNOU_O2r]F*c;L]__)>->1:J:l^paK6sfl_]uJZObGg>;;6P0lghD8N'/OY5Ls6Z1ZmF#
%C;NZBHWIs\M5CEn_J;9QRKR4\&!.%MiRdSD0pR0*\Ct<HGe:S5[7;Ro:rGg)U.A7b3s:Z?`J%=&d6Du\X\FRD-58[j<_COK<N0*F
%:WnMAY3`P$(i[XG,)<Zmp.2(TOes5<Kd-UqI9(`:bip=8!R\k*4(C6?]8?:/T$t":DYG$B@7Go\9N66`@!PmcP\H!e*EWNjT-o>l
%W^[j%%/q;=]+k]E6?TQe`^p1H\&DmT=='IGc0q?<Z-2=7!`[("m.AGUbZ5R;A#7%/LsB2TmP'05;q:6bqL!dsICC&MR:0oDLlmgJ
%ZMBFR7u39VkN'2:ZBERo7u=khi:1WE6h%(R4r6Dq)RtA&7rT,h<c4S0Gk9&V+*8PH>di._'6,+Np#B,p4Z>TUF&G"2eqt7>oM5G^
%i3^aWAL_0\qZ2JW4YJl5Y/8pNWZ:]FCci'j-?aMKZ5p-`WI?tD*t--X5BqHlmtOsHC1>OO!-&OCLPRH/Y_E6W02OqI`4l?S.*R7!
%SYDo8\nu[34i-`7eLKuJd'7&D\bhK3[D47]MRBg"9TfH/VYU7f=h`,1%^5']&&)W,M`dVMOZ271j2>^[cK-:^qDVW%dkX9iO7nT-
%K5No*it_[@XE(?Bb*#Ih+crP)H/,C.L68[IPegd47nH%!_2\ac7OaGkmX/32&qZ#V1)/KN&&mMHTMVpHGF+XC6lWS7FFW_YDgC%n
%42PrJpNV+M`AL;ohoG[4O;>RbET:Xcn99)gpr?K_5>Pf,GMR-mFW5@k%)VZgDi>LE_iR[]S\Q^t:FKgQr*:Op[$@sb9WNJ?X#A.1
%Z`8g7Gg:-fr%-l_Bs8]k89h&?=/V/S\h#Ck!.+quTNd;I-7N_SK=oWGoh!e&>`rVuCi9VTB<S/N@W8bn!%aso+cK_D/lU-)RaEU9
%dE'5Ka*_'1B_5.'GOIsn\uMcV.?=!gY"@sr(eL4,f?93qoj<X=[Y1.mU0)F;D\HO.h<X>U5Y-!RFB_[BV/7+SrkcOt[VCAU*^8L5
%53#2"4GP"JZ`&0elq&<2+=X1iRL6X#bpLp_?of?8i3`,2!)o8%Sh7V/?Y%K_3l;<"ShTMXb:JVZ>8o&)5dH:$7K$X.M+6%#iA?)g
%Wj[r<+_bU,K3lESIL0o@/gI9LX.\fMJ[4tuI]eq'gKg8.,=su,!NA[)DS-uQQZJ1C\k<BSK"p(WaJm6Z6d3"2[(^.A'o(WKX,A+*
%"BjgR&H8U2/5#W8/0pISk2&nc(Ort[_`U(E,n#\4<>iDo80S]c,BE-`$iY%c8G7m:%DTE]=a-fDnj51P8A?frFNDX8^eP/S7&A6J
%7G%'tZFYuB1ke`\%k1ce6>1bV@u_4E/AbgQc?IC1gMIlZnQof9/m7(e".<SaSiJ:D2-4k8N\lW7Pph.L^Xu.tcGW-2bFW?Lp:7qH
%0r?YkI0<tF%#/Z./9bsPF$KiX>u>Eo_a+Y^05s6SKjk-?N2^</#ieI3JX`YE9fd5b:E%t21_=%D_0_VojmJUQo&7WtZcXBX/1=7@
%HY.bJ@[?iu?gZ0XN;8)4Cqou+K]4J5<Nr-J];36L$)n-Y9kjL'f<OTof'5ems1kt@eaBbY=@/!GD9]*5LVU!rRWjM??.0*&GC&bp
%U\r:f?m)P/gC3(F<>OjY1Eb?/Ap(t$m!^n(oAU;Kcc=i%qX@Y:]+Y4T'28.@,0SQaeQ7#7lqo2khRZ5O!?.VN:[<g:aEJR"r)r2N
%aN^=fc(t\`?f]PL!kie"KFiS+:JKNiS->fjEV=GWL?D"Cl@'.rRsn,LV0&u:.uS23c+G0b6hPhE@FE&9%2p#!bHc=V.8.(d%uH04
%T.b1tG"rVu;%KNcIg2NC[7ckOR8u:5H.f[e;cg>o<-)f>7\I$^]r_Ii!bZ4'q/ZhEq)sT.mXAKEbV0W`W=$(>iZRtVq):b6]UOh(
%Q+cPgF)k)g4JXfcQcoNFf+p`*$_LuM'KTm<du+??7&h5sZhaL8CYRG+2m0Su+:&9J_ab;p1M)N8QirqIN'HJ+N!kHm/.<'$0'_7m
%;YY;aj2&<`3na<=l^l4E83ZE=nSi;[lWTgY7s>4Pe80#Ds#Q5;',7$#L4K-=X-Qa4/tA1FX47d,bW@>E`[jo-XBm]91AW@9e1s&"
%#!WpXnEhQG=45,a*W6$TPGOL^Z;Ej!0`t`'LM)R-i@Bpk)pQ8qXNW2B+HQW4>W.'bHG.CQ$4btZg!PN^&*./<3olNI2*c"`=/-!q
%/EmpI%/G&/*I_-Ta<CUYFlXc6-ZMQTrSiB=Q]jrR.cXPm*C(upa0Mc64!6sC`[,5SZ\VhibLu:O4oIdS)e15Jd2;rjK3(bV<Ehh*
%R1+`bn$oC\=\O/lQEnE_#ai%G(-m_u+.eue7+4m/?3ApZXnVT9faZK_F(tT>m"+%cSgTL/bTGKG%D1dLk#2BV^L:;6!2r6s_%@b/
%if)k'9jB5M&sW.l+B-h-Ne<.J(Kqta2P$W$Cag-Y_E[O^2:?o(U&bOg.V4iA\j1hGerBLLL0<*G>&+D5E"]B#J5"@XKb`6qVE^,-
%p!>Lh,L`=G"RPB-S<4eQmJt<H<]UM/.j^c@LmlB1Js"L#-JEXQ+g*2A0T"VH1h6%L7G-2NGn\\(r2UGPRq,G,n2pUGfQc)Q]'*cW
%3mM_3g#K.Cl^n(NC'W+f8.hc*0^NmC&1;(Fo+76K9.?cNOa]2M:l:c@XHI"CC/cs)FSeom/.81Ji@sjc0p,)]>D?*">98,cHN)nE
%1Ci)AGC-ZcF%)sg-dF,i/[lQScV37*'i_aRDM<:VG`PlWD?21g_"aNZTrW:8!-P7D;cc3g`GgE4,S>[`[q:g-kU7/MkutNS')$@3
%X_p^:6dVmY.)K0OFDStaA?>Wf60d:>6%!uX$8Y'G^T$Q8p(UO)k"<)NL7,SS/-7?KJh^+Pk<J=KU8#1&(2apag'Vaer1E@8N0Su9
%)WoYeLbaudDtKQ4m=*;T4oc'I\!.o/dbXrD47;SZd&T]$Dst?rj-#ZEY%TL]f'+,'SB-gI`%RFH?2%3>8(:J;,29Y+b4G_Y@:YAJ
%DFY;3V#Y]6\[Ur))ZGj`-^f+II;L+0YLRd^oRcS@%V?i5_HKZ^E4#`>m7Rc`7U?T1,p;UO2ka@>-hG%nEVCm@2'-sQ<6[:rqdKM:
%>h<$Pg?UPkZmBn6A>aloF$%o'6gNF_X]l0(@DqA:1%!%HmXrLD&U_sQiqm>?1:;.*a%[=Wc-0tE@68']&:-6Y3r.*gbPLXE?iiLE
%bK?=#/s'(f'[!Wh*AOdmGZ.'HXcYdH(*nI:gCU$eg3@GL`]9a.YJqG+Tr,A#:^41O;[)U.(AP_eCiMSGn>))*)LN6+"oa%U7P8+m
%e.)R,Ao[l:+gXdj5E;B&Y#`biKuR(HUbkQI[!"1\G1tE;]tWm6BmXJ,=c^I<q5A<I[.uE>1,PO@.+?aE?nPT<Xg6q+qTOo49ukKM
%Ou;0u`)RO-,6',CM4-C>YCo0@.WZ\j+>K+h2kWk`n0qYX.Pk1Q2<as+CBU1j3D;pf+qXCtXG+P.gRDW$[``Hg&pMHb;G!Lh)fN=S
%hff>LR6#.?^a0)F!*b9+ed?3$io%8!30hoL^l&q"58mDO;J`JK"Xk=JFH]jZW&aH/X2Z84Z!NEG&G:EeiCRgqMI+TIiP#psbXo@*
%M_3#6Y/A$#b8dg=If/C?g3p!\]e#I]Z9u.nfZ,"k\)$c@+32R=qH#k`^ZmGYq--)fR&nU6+Nn@^77>q<&srR'MYMlS)c38eTrNtM
%W5WbM!Aq/3.\bl;(kK4/>m'+X9.q\)"C!gG^!uC(>XU&E$Pf+H0'>):<`!ALo^!bgM1t,#S3r0$E'S/;$On7bq`"q4nR5gN,\`"+
%Ao2-"de3]+HA_K$.Dqj'@tc<p9JIod6,:X@EjgNu;p=VlR%nutq-lguM4jU3P.Eu5EASQB&)_JYZ=GB\H[/>\aCp%.LSYlC!)QX=
%H/52#%0ob1XW+BT5[*:2jk/NH#^^h:SOi:t\]36V&o_\3M)a]W56+p]g!NN+MZG-G2K1.&=@e2/@)q7RB&l+R$<#@M3()NC(1MKA
%S)_Bl5NUEH<N7MmW58Ca!$J7S,W-3$?1kds&o'*i6[cd1,OVej;Y!bR4k%tD+J<>:P6e5sVeD#^W[fF<#$(4r/Ju(t6?_Iu$ID\;
%*BlHo!LS,:+=T%%&AuVGakCPm4P=^8%<G2m;nV_Np1=DI@tt1Sp[0T`pNSbh_dSLiVo>S/'aWr:@KZCA:/r5Yok$mQ&S:KX)+.C+
%OBu!9S!g^N9"s!n6C-kg2QUR%p#/K4&'!gnA.`o>%YJE0aJEW-P.J]jJ>NgQ#J(k$m[C"Y`%?@NCN6c?ZtR[X=g_ms)83L-YXG6&
%!eN2o^>0o00R]6\l>j\=)Q07U1E[0323GD)qfpmt<UJ?2OI1coD6^XV7^qL=UHMf6?_Gp`2*2Es(27U=R@7Sa-Y#*$nrpO*47I`*
%U;]Va'hmccdkXai;83m@FZFIsH+)88_N2RZ]%/d,WqD7?T7$LQ"EE0$c*(C?4:AiK)&&;(.[)ZOU-p0#292([oTlu<mIkKu3T5q6
%NZjn>[iFB\jhtVjpjS6]AI_m?9h[5\;cFX?jja4p8mn!4$b<Hr")9@5QsBGB+]a`NlP.%u!&*&)pKko0Br,U;L2'7"ds"`[NgV`K
%Zs)sIRU_bdmBTY:4A8kVaJe\8BeHW!559"?&h9QLo_=GN:o69i4r\o64^Ib3U)E%s*r!Q2mF)aSY4bNudpefKnc/B8-//n<R??G+
%R6t1k^il"4+cY;Q&VqDA+2,c*!61_,/Xc-&n'8:`*b[H$lhe%*UhW_'C3DQ_&I]hb=@ZXEg$$>%YXm&>-)41tO'R&=Q$V$+NJQ`o
%L_e17d^.-j&KOirGkM1,3/eppP9!E_B*DO#"%\r18ohg,+]j!kJ6L^di?pAo<^AA'_nE_A2m$p_Cidh#H=-bO!j@cB>r5S-U`W8q
%DP3IYB6H(/`a+/kUU^CMW^b/cl7"$miMs]'>mYq3+'FK;I'!tXk\Cj\'#nB@\8C"qTE=$$-&>1QRfq#ENtu)V>r*Q>8X3f?4:sRi
%!B'+9Shg@<m5mPbYK]VUE.!DJJ?njknZgR;3''QZW_DdRB0U/f,/g)N*?t441*IF+0;Ggo;$54@><HbrYI,71)O(>]&9*REUB]_7
%/aRX&\*&Yi_DVKD*/l\W2-RPci>n'u_f5$l^Oa)0e1]ac8KSREg`"BO/6CJ->AJ5LbQUFGU:0(dB/!NX`%flLK/1DXKYU=SMbcuo
%n)$"M=h^4EJb&?SBM7@AqY>)lot[f_&q(jq9E$Df<+R6n>8=%9)XBtCkGR2$(CirG+n`7MbJOF`h0s&RR#>+-mpI_Tc_tX>UXKW]
%b%is&aSO@&>gX>(7In@C:[@MJg+b-18U;-R%:tu*@RiQ:KY+L,f&poe*nHjZ9cG6$EEY;*W]Fs8"$/#diTJ$fbRVXkEtI%$QqoU?
%i5'M]dbi6l@pKam2c_BinqXN:MZKaKU=ja][6GYo%Ofqj$EtS-G)#Q7;q4rTU*uM9QEg2L9P`sOXJ'1b'&>Vkd8hg&Urcp!(3<]$
%,Lk_u[(c]PW6LmtCnn[>Y(M?:o-j:uh?3);MXd`AmTO,V=k=$\'F!u1ZbJ)NgZ^XmhZ]cjb8`SEp*k!EeRRAp%Eu9T/W<ONe]366
%>q=b:NQ54#a8"kiN1:,KIKI[WPNM[M?PAC<Y[S,$'DV]mU,btQg/E+*c#J3$6jhLSYYJkL>RRH5Ym,C[D3_ri;KY4Teg$,BjZeeV
%f*3WTkEa<(ZAM'BS_#cQHTTm5M4c->B*Ba&B_Ug$>c+=F$;,O]nI0&1O23HRG^c,$n^\2r6ON)6-3W__I[K8XT:Tt?_lVnDp&n[Q
%iU&m=NV5DaDn:A2_V;*TerEK#r*@l;0/iLS:A#Bl9jf%I]mjZZk*tQ&o\8uV8Lr.H]QMX06b!p[Xd$B!iQFeC8:@==-`nLdRP.DS
%N34W_-gb;&3b\ijd7HEgh+<7Dog+n-#%K*k:)`IOppHX!K(*VA4)(pQFR,a]H]e+c3GI]F)D4cg@G9nq8OMCtG]D.=R1<:Gm4^RK
%-On4imHUK%.rfRWi*q@$:)^8EoBN-&8W^,Ng<k.edLPu7PBO2!:)_fT=!ru)hE+INK^Hh18^!Lt(FKZ53o4l)^gq@b-Og3pI!*jE
%1?j"Q1_u[t3b]nNI/%\Qgod9EP?(M7H/:SrYa9HSd\%uFY>3gA(QM6/1"',N%HNOgFj^U)W8'FJA78i91pVe<:)_&\gDqZD#`jE'
%d^H:trT^3oTinO))YuI$]X.`Fg;Q^;/_omE\.5ZJ)N<e;V<t^TQaW@o?J<6*]JS9\`Co6LhXT#(P@sX<ci`\#V'.kOmW`H"1&?fp
%B(YJKQU]R)*A=N;\:!ttO:Y,&0C:I*Na<WsqXa'M_:I&R9B3IGDnS![[pq'uhA.rtMjFY.Cq!^hG0/Ah?5ec:?G&,_VsW&.iu+0/
%?5d\Zih`3)b=ap#O'^PfI[FMkcX,up&H\?/?5d1\?bA4Eg6gL25d?(`0+IVO/m]HBEqG9V#34:MNL+5ZFRddeN:#W$h:og7H>-mr
%ka.<9g;/7/IM,$iHG-_!WPIrqbm:_JmO'1JI%-6:idTm@+[rI6<g^g$RF0t"&pZ)W)$0BdCg[93:N\BJ^]kAG*Qf3AL`-"B#\M&>
%A_m&\-o/3po:1-recM"R^>(eU(>*)#WP-(uccOi5.K_'qnEh5lkQkY=Hce;o^mHN5?Iq]G:-hNlH>9c>0(RSTV.4f_?.4PVQA@X.
%;^O(=E+FY)O+&C(VT3stBC-aeP@EQ`G*]Q3K_a-?SU'jT4Al]l!Tt]s-)OU@&K8-^l-sPG\t.;a-jc!6DC/l[2Xs$UoSnYu(/9Nt
%M3GfBZ=e882t<*:R50[ZYj<,)S=7&QH:g+MfRu0hA`[f,PK+SlSkiOR//D"[Cikuh%QQCgJqkr5piPp[2dZf%n$:]5NLY!'Vic;=
%fM="W+MCWimo'HQ;I!/E`<+28eW2gUT2@Mk:fs'-ia5?d)>oBNnBFN;g?iuN,U)g7lOh"<`U&*_qebitQ4:5gDVtHCbamV$gp/[b
%;j9JL*I+r`4rhGg<kRipqsbEh[=<T.PWa6;`pjcRp<uf[<o1>(gYAb>BY@@3OLa(@cU4#)heD7]5CH.b=ACfgS4TPJ>+7V[0BUa4
%GJ<e)+dMnmI`'E-HChnS:.ZhE*Ug^(gGnG_6,FCSYDRqJ_LXS;9Ud-AF6[9/Zl"55IPsLq`BhoW1Dsm7s*1bXcYmQ.eE!)lF[$u&
%lq5p.h"FfBfcA?T$upeJost_?"VMHfedoBKW0F'P>':$:$:@?6;DdcOXbiIFMDI\LLO.N4(^[[A4rq)g'1P/7Q*@Et)0NeA5^C$>
%&f'ZG[Qf]sSfNOuCpu!Xenk>klY$IW0TPDLID^4.DHL+bYMH@/-R6-:dkn%!G&@9*HFHr:bJ%P+G21lXVr17*AgB?pBX;W2EJ9F:
%A(ApBWV]=!0b0<A?%ZKVOE%9i*'Q#e*tI58jSo<#c5Ap&cap3Rd0)SV1HR#D0VI+bZ-q)["E*&7dRb><l_)OVp2*&F!(O1.b4/rG
%%tA9h$JdsTX,>@H/h8X%=i^?ck(nB%HrRA8>$JH^-@%gh.r]_L+[/nI;F7;V!cG01D+uG"mT"`;'YPIb?I]!%q'l&\LZ=p/U]Oo=
%+@*+@5cuuUh5V@CYnZYHr@p7?&rl2.*tZA7C72G\=gYaJfNd^QLCO^B_DnURIo=L)?^C,aK!q-g)Qg@goB[H.ih_PXLJjU']rbIL
%*nY8;?<jNOlc5A7#@"Z4GWKaO+MHpJZO2)4O,.@YF[KMdOYiVG2Trs@7-A_,arU1(LPbJ.-M2`kJRBPpSb3h6_>H,Xl1%oL7&FHZ
%OqFWC27D(3M7!h7am2u=BFc^X58l9WHU<+@WhUg+2d*<_=;U+-C.Ic6T:+ubfo0(ePoL6nishe^4Xa4?s-fR1:bXSsYG2\e=im'n
%#CAgYcT+:6@?o]V;l<cI!m?2LS`26ukp3H@muikT8@n-g_:b+phH8UoI&$cCceTC@6"g$7#@P<uT)&(E9j#$QkW:Fane%&@Y@i2N
%8D\clMTTBs1HMLs88T"JfSh6FJ=3l`?XC+>p:285bk5.oJr`Tj,"G\HeS15YfT#=*!iK_c_FFHR;$#`SR]/POKKsO5>5TCBi+sbc
%OkmTD@HBm4*=<.?15Lkla0[n?Rm.?IGW0-5n^JLRDtMI2i!Big13EkCcXPZAZL.-&K@))E1g<D_L0!*giOhIET'nRV#9oSF6#;X2
%3O6$6fb6UTE<;0<l`QkpCL$?#r%NR_i@3276S]bZ,YRl-7$:,5!BPd`b*<4HO]hsLJSKGK;,h9:<uHe2<+KN6E>_3jRWN-kaN0P<
%"]^N96UcP1q_?U+Ac:;>q@)LtY^.86oufUEAA5=t5G.>`cJqRDaqm1p!t/g`?n)7$F/@>Uk%/ae<C`J]E#6@-U]]TJOH^t3C)P+o
%6l2HOkgS^#7EeaiI_sgR;">!g7cp\#SIgD<EWFBb`Z.K1Lg(^cX9sPs(I[*9Y.uDq,5#>3,/dso\+ZM]GC(O`U:`Sd*+Y>G!IFKa
%F5r&!\%)Bjl[gh";]D,l;Te7UN^eLU*_JA7l\qTeIJ;^P<X7IHjU[t+@/TGIOn&FocThI.`t.(As6<ru4s!fDYWmX5rPsEcj84?'
%q"a*&qu3WL?9Wi0p[;HRMP+t<<+Kj5GJF%Ra7h7UcL$)[q:!sQI.d$!hnT3NbO>H&q<(Ulr8li6It.=kjh#H75CE7DhgbU\='oeD
%iW&]SY7^D^iJjK*)uBt+"'NLJ\XN8br7d9>rp(Z@eYCkds6]-Un%A>:f,t"Ds8MRbhW3#X7"<ZV^LEZ8p]'HL^\m*G5Q9*fn893H
%:uT"Q6uT`ka035Ups$SKdh#J$a7WA,s1r(-n%\kap&3(gY@O8B09l-">LS)re[IJurnUX_If&7(QiHm;q_,[/s4+Tnj;65tq4mFP
%4#m3:ER2Dl\+23JZM=#ud(eh[hQ66sGlQ%cf0?t=T?jmGms_'?)UX19P-P\9Ck\euG0l&B7i\4=3Thd6OS/_5Qf`i,=T>2qge;Z2
%b+!R(bNCh@re_U38=#`'eEI&Gp@G=NlJE;lY'*5:QCVpYk!QX5&X<f8C;i&m8CHJU1g'@Yb?e<J#Y)#[$u-P$2D>?q5#\Z0\IJcq
%99oEt:eV;;)OAd4h_=1th)N?@VEOXLhjG<3J2*#N`m'/$(Lo4DNOQ.Y):@M]&'(Lgg,%[l:nC6OpaS^@a'in_])$__\rL,;Mb@f=
%gslj7JW.b;&:gI<Mu'qHN17pCi"TD#d^-W3lA_h1_lj<,:for-c[9WlFrm2P4bqV,H$Rr$cU0?ZOdA%u7$i*Z^Hd0CA1ngWJuqYg
%'bHR+Ho>iJXEQ&i2eo\gg/OAU3gml5)_3qne\JKN;N;\:>HQ>\hPSYU1+EiFP/W%2F8"e$-5glIpb:gH.2,0(%7VN6QLX4fBej$c
%B(*&f=?G#X2;7_;Bcl[Ae_lbdXGN-M=TW,LBqri1Lpsu1Xr&>Z[%:C(B!9Ko\3,fq\^O5@2=Y_Y3X>OrVVV'Ll_`6fZ:a9jhp&&8
%BPjli\*U"/\8D3,pJEHJjkCU(mAKop!C@K<:QpG0oO^q1R.HO8F#sBLh]=/Wq>>ZMDh%^N&Em-9j7Im-qt\3-eg$Mc4)Q]L-EO(P
%I^Pf>0>kWBDq\!Z!XXDjYIfs+%qg+2^]5)'eUDuHp3WuK!c?LpI(GJbB(3%l:G"N2li^cs02Fi]Td%R4_u^<7FK-QRR\po^L&JX1
%3n("N!79hDlA1iYrc>FoM`<lWg4]rM*r"_u=,VSV>r&fjT<MWq0?akX21*t*^tEu`r$6jub:a3Yf/bl_aTY^1iK;@0ES4>ko]-bo
%(m>c*5\Y46W)H_BGmg,EYf0Fdp4UT(emWs]kQn:i`je,N^#Z)jL_<0\(r%!g&S6MY+[EZ>1^f(B+F9hX(.?8J0#k9=r_@Wrh".Xr
%&slDSQp1'Le(Qmno]Ol0dZ-JAP!q"(Y!U`a\DKPsmV'&3D^Z$'NJ2lr>mPVSP!oYIS2,iK]ZVF$TQqT?3qWErdLn$OK*4mg&gTLh
%MVAkf#%0bI8BRFNk`;oNH)%@Q^]a1J>%:8Ak#ilQVt2ROd4ofrUn/Y<HT`]o(;lG6n#ueZWXtJo-,aJ5D7r:KZn"/QK%6K`5B!2[
%Il?C>9V?o2/.#m]&p1(%mP'%BhU*gL!Y+jt(6m#*2A(Q\RrhK#;s%at/d31q+CI^e:i26)[m4KTfa)<-/==i4Sdt;(ZTU'n6"=cG
%6ma]Op;6)cP!7==1a;?IWeINHp2J'>1Ld7^<@!GMdC+7<c,1(L3Gm'(*TfgiLZ[rfL^hX&Y>WI[&XGf9am7p@M<cM@>-+'I-DS&S
%q+A+,cfO86X'd0uEr-3_lA(tg[iF32s0Bm/a.7)r9-icKB15pQA*4V_)dYu8\!#5n_c@bEEua,%OgF"\*Jq(;p,l^Lqc)<geGGbh
%SpHp9',[oX]`Fbm/2lJaV6:9"f7GZ,_]gQ_=`@Vc!5g*iL;#Q3F030_*nE&;kLW.0p3Yo84l#I<pX,?V+hoq^j_LP2>cG3H&9M#`
%\b3B$;USr%\-:P0F8=Bk#OZ]">8I]XmU^g8WC"+#>03\_.=7S'>uaSJHd4J`>ir.97je5H\H.1sB'(FY0+#+9p3\eBGY`tTf?6cQ
%Gbkf/dCLd_]O'sGau*7].7iIZ:RJs7;T1<s.SSf.5@N`Y5/6VG([mUr*m$1tJ9+^^MGpZf'nDn*'7aqWmBKrN!`^V@gQ8J$X*,_O
%)(;hW/XO4:bXrt37bF3,Nk].Kr=pk(')[IpqmKa8Z(lF@Uh]0!8;dd@%p@a;$nqi5np6\[Vs2_G6fg4*)fZUQA4\Km9+Q$Mi,gQL
%pi:_VEN8/DQ*5QiZC]^4\)?srC)P?!HP1RRmj9n'TX6,+JWDV&$En=:co^&[b5cI?jK^jQ[BuWo7]uW.KOk#=6_)]tr\/:BH`L#l
%065eA$>I$"!/YdQhmU/H5S6/Ehj)p7W(qS8$d5\JHbQngLC#gm0[)]rG_]C>#7bp\5JBU41HOB9T+C]XWtTZJ4HQ-&kBY&sbG1\B
%jII$-oNk>L^U4TMflajb>%'8:VOC:;#6.[.@U[fR=P*?@f)4LZXcn8nm/DlcPZ!Q4TW8:HTo7Dg?6c32A(UbkFQ;XH'?[&rcg(Dm
%QRF>gfY&0rgkm/u?E+sG1#G+!@##;MM[([I$(87PVO6V[(`9;R>r=9)OO0W4!B90^FEFf]g?8BL:hD9Onn.C=e)!1P1I.8"*l[Z%
%61p5(c2g^"mfTqC1)f-=eE%:ZHM'$W5TLg[W/i5=_RmBfNB44PY'mXR8DHSuVtl!dD-aG=54Joo\aJH4H36pb5!@]DnFoP0<WF3d
%q1D0hVpX%#Ob6-Xgq-!^^ltI:Rl_9$."8.RZ"p_i`P0'ZE>LL[VrW9I=I1u)]XJ*K2<nVl#]RR[69VGb5Tls`OGe9!>W_k+F'C45
%36-ulo,UR\'uPdVK#)%UKG,IYZ/+%lOe5YVZJ3$A^,=NVhS=W"j[nJ-[Hc<DD-(.LT<Kogl@30lDOR;jCkn$b(AhDIXM:qiWIF."
%Aq\P&cno7\XKhG<KO^JCn/Cd#!U"Wo*SAo.&Cb,<m9ALWc=+Hrm4pn/1U*tsem.'Tgm%I#Re=_7q7;XEo@bXm1mZn%]7<CuYYpFg
%;*ieoZqoE9%O!4<VTcFnVsWudS,'M0\0d1F.;aiN([PRF=!6isC3`.-_\lhc=kLk:j(Pe(12;KnRtoVN$`\qOA"Lm<R+3MF%eb^?
%W./(G8pn!YgM\j!T5/eLC2dI$Y]cdk>]/TuE:F2T2[=&L*BH1I@FLG=kY9qPfGeaTlcu.eOOIuTO+D$n-^i!B7ee)a:D;r;b6+,I
%bXg>jbJM2_W,<FMTM<iW3uG#`<I@[PbFXd#=U.%V@')"'O`,t_b!u2AG><A,.gte01iS/NF]A\S@.Jq;pZXLsPY6k8[&,).D3X7a
%g'2``2!jDdacd/T*'$5'dV=;AI0!.[,>3%9$f)2;S^jA"d`):?YcZHnE"e20B0W8Fj54:+GqIT\_Kqk0`-(_5Ao^kg",ZB`k^%ZM
%7+U9,;eM+[kA>gM@QL)7Y4JTV[PuQ3>J?)r!ubOe&!b4Ws'i(+l)I(^/d19T]gR.F,4FMCHaUN*N?,9ZVV*T]!)<p-6>YSLn,JtO
%k@tmKc8L0"BKh)hFdKAgDRSWtHoO;0Uu:3L[*8mNnN%prar8SIeraNK<>\qFDDWlESno/*Fb_97lm41GEpD\omIZ$Llo8R77Wl5]
%g5Xs$;m<D47;8nrLNtF^;f"7eN=%u$XOXRo8@Q4_q'L/"f512pfB]ogrd8Jl90i&]LJ(&0#KE"Z2Iq](0J8]n'\1C#\a3(9DuOQK
%^7E:]AF)&IHC^o!/\%Aj%Km*jc,C12dO__3Ak6/Fk3P?)Uqqn!P`Sfp%t?L,88/&GgDeCOBf@6b[sQ[Wh?.90iTb;&L?7Kc,NKfH
%N]ac.A^&tQCgH1Y+4eJ9BWeXlhMGMKY>JorV!Ghf6ML,lKX_7XTEJWJ4p?.sk\*2l5(T!RDdB37*>SKM?hPnYL;kV_QhKPVf<Pkd
%ZKe+$2a_COUCATflb-RFc:^6^rY(j&c$6b^Pj'Z`W)I&-]0&dRCUl9[>"rS`^-c-6Ojh3NqQfIFREZT2lCWpXdTXEs:[]CmS:QCC
%r.UWk`PIq#@c:jNAO$#TI(-NDgp^5XlIHs,J07<\QHr'@>19M:rlW_:p<K%FXuiM(CUbSFWZSMXE[jSKrVam^dG@U)&SQj*3(h=K
%2@4s1,4GVM,Bt#Y2'r/i%Y9BJDesc%mcIH/+jj-/-gesG4IGl7gl-;uLt.]jY#oRg'!/r(/j3?#_0kUl]#]<_^9"KSHg"(8)m!B;
%Xuri46WY>qVf0<*(Tus/W8L6O%s1e3;I6PM"Q6"!,3p:IJ'5!<T&45=?K(OKNk<laIb:4d'=%1*g(.P?YPjro#9(mJY9#)kqg'uh
%IjlVTPs9!'=]>0KM,%b]_=*qldCA!;_K(gaR>1"hG3=ZO,ElGtnX"FjYZ6Fcf,tZfHCf9ZXculh6)#m^2G&H%XEDap6ONfHK>YG`
%%>"8\(77m'OXI:C!b9u2QnC"N`JQm"/VUk=kt#3Q1VO6$(:B]*ED;GT>(*6R1:K3H]sg3W@1sL,EkG>q<uZ^n:]C)D;a"kCJ@W3?
%OD[9?<a_G6@scnef>%r>*:UikVEi)t<&_D(#96?Be(J"QGo1ai3VU8\K,"Ot]l/4WmRU!d%7A]o-'ooc1.gqRs4SqR@*DpP&7P3F
%EgOE^\X,A;RNAluQ.['Md]hO@7ddoe!`j^:@igNV=^(HqLM'h`@,R@2,137Gl*>Q@#+t?;bnKGd,)!I(Er4!Ra$>r1qQRD/\05ji
%[82b\g`h;i^%LLJe#-[tNBK7%]K</.E=jipqg'h?Xt*RIC*8T&GDoR\hJ1m?Tege8K.NHT@Lgq</bQP]M8a"*iJRL0*RW9>0RF#-
%.X5LDi7FU65&;*p8T-hq(1c#XHG8+LpJ*oU_R_AS%@Gt5f1s-Bffn6C#tTFEN?bWrGoASS32>6M\>J"cn`p)3l/s$=$RTG3g6B:`
%iS!)SC>t_-LasnoF3nO4Ed2@`h+YMok^q2f?M>;:JpCB#7+Z_c!AU`*.K(aK>R:g3I`G4d5-Za%0b=pPjus-Ng7@%J'm8<&]+uAW
%&0q(j@?tbm,P"%iW*.>'$S-teN4(d_i`oX@=`n66\';H=C#m(HkRt3P=MW32CHl$c"kZ3-f7u(S/!-*bFb6m$T*d/pmqcd]mhA='
%)3DK_1"+&K!]RR#`%Nce4..]jWjH)k$/=g1[nud@Bg^;I\ug@\Pc=r!8:(nraLT<'o?;Vc#1Rs$j&:gWDmoKr8c2n[/_iYP<&nZ_
%NQi4(#4"$k;MCfFg>"bc@_H--XDP3\fNn;b3`2Ad?b?d^n?(^@T6RA`ckhrFG%euX:7?0GI:t00QoXt0.$'qY`?2rrM!GQ&do;AM
%nl<N4NkkEc<Mj/IN$nP%_CsSK_-9'^-*BL@98E&.lf,c0kOY-gF2+Z,iU=3A(6j9Ufe?IdZ-KdADU^h;7kXp,&OSZL-`hZT\$s6V
%lk4b24a`'Ab+HHp$O^0(Sr+%Ul?NhYepPWJXkkMo@S9/so"REAF0W,2*+R&]AnY?F;X,d()I$Gu`3Lc_=P_(GM:/ugSOe.1LBP\H
%>2phY?t9#;1tVM%?W@`O_iUi;5q>u4b@Zc)NXA*?qqR+3]-#-o$uEc3A9$6EVH@)CgJD-r%hi]ZE,Mu3;]SWVGU8%NBM9r$f\kP2
%"4]=nkQq'h\W/fDN4*<7(u=03?G9Uqm1ue1G?Cb=1*@[Q/EI&^kbISC@pRLB@0gbpgj!uPmi?p#XrP"=Kcfde.U0U/gc`;$4/k?9
%mD$g_Q"2]H\^4T3M8ZG5=*g!l5;:[:]pi+Vmp[fW)*FmLAO#&C[MMk^hm_ui`un[SQMMc0b!2]$=;uU]*fs@(&W1V1V>E8EBTOsI
%HL\/"E!>a[rSj&tb#WF%FX_5MSPuo-k/aL@/]i=u?p8unmO7>nL4$?Mn)DB2hR:J')OPci3.l]U:Z`64k*.LIiarO'-Wp\1F<rI2
%0Z2:er.L*1FLPV#0HWWV+AL)mrAJTa,8c?'gfL;6XKFTZiC=AT#DJr&bJT);aePC\[Q&1lUP7,0\R$=0X1$`Uft?K^:[`h@E%3dW
%0DL'Q7\L>Wf6aX@.*Nm2mZC?`>?I"BTn\WJ6TFOF5L,@>aB62ghrAu0F'RafQ\P0jkJ>g99fT=YOnB`o'@jn".gBJA4S3S4iFK;2
%asp;sicuB9Y_NoESd2$W(co\.B[?!X$u8HdpY98R=6&/,#Q(LPi4HpC7.>"Wp?'3(pL`0"JpVDo"DmXGGIBX^]ltj?E0oG"o"U#;
%_d*'bcA].Jdcrd[bi8afo]9sSIIQX,E'lN/K^k;EH^0$@0%XO@rQ@(i)=aAmH5fMn*4t[frGQ1;b;]"/\ii1(66Lrt_u472?I=gW
%bi@%dL%8VI-<UbP#>!hJo+44@fs0u4gRWZ(>*l02-A'3s=JBsDi3E+u59d3>n"oFo=3H2e'TrLL'4hEf21=4O]cc:>^O]ICitaH<
%dBKbZ`1Crc7Lm/!p#&d\\,pq?ZL!$6X@G;,-YO2In9i@9*H;*,W_(qYYI2`ih82]V-1A'ki=<fBI__M@7T+F-K_[GpO0-06B*cq2
%[>2PN!FGOUrfP)5Q1%E6@j\bu0"04%/%Pr2_"4bt9shTO!W&"F4&9eI%$Yu'(P2p.\pa/um83eNj:1i[O1@s_B_50J@6m$S@0!5B
%lE\c6YiWLb8A2FA=r>6I]N/RRYhOeKMc*,+)A,VW53N5u27_`0><;l0qR,F'($:BK4,ZF(rbC2!GkJ=qVVi!1P-0FW)7R5O.72?^
%/D)rhTIgDj6T8Wg'Z*J_FghHkC"CK*@F^\uoi:n,Bb-Erc)+KFpjhY,I>.nK2[DC!dta$OJ]/#k\()o8<t9SKlS`5qF;Q<)Z,>++
%P]l(!gCF+<au^0+7X*<$14M#2;SpP)+=3QE:.jG[`'(%3okg\2;ff35d5qt[>bhMrY@NG"HeVt^:4!om#5u+F,&srP7)hiL0uX=T
%=KDX+n4ANl@B9Ttknu"`Was9"G[Mhflj$S.`NChrF4Hc:#6W!&DF]`;L&,qZ!DEj\1*KbEjbD1bHd:qcT5#YFf#sl%=[_F)oIp7M
%>!aD!E\0%83/M6M41aqpW$5'i2/i!t@/$[s$^AiBS(82a`=IT,(Ku(R&muekmEUZkd$>L!d:`ja`jn-[d1U,r.i_/^!c9Dm[o`qn
%HI@1R-.!Wia$WkAVX;?S(G"HRFB69#Hse7jm*83_rL1&*:2b;`-(I0:=UE.;'e/+k2$[$rW?49*G3El-,b2kdk9QS;d5_N2&U-YC
%BmLaY$)b>pS:o@m>CjWN'Knnt)$4*k:k(HUL3W7H+=+Ng(;kS.*3;SU<8Mu@^B"4:GDNNUh132BQmk$%V(IibG9(]:BH/O)\MsmX
%>gdX?N0?M:>N&gYrK'RS4PN:sJA$^Ap,#YKNG/QFV&2hbHLc$6/aS%p'$T!/&2Ua6gL;J!loQ`V@Q%9(l,T<ZE-e\i/`H=6s$(@M
%f<WT&C^FSF%K.CB9g]Zjm$:OI9!YY#V_9D7C`:or.@-YVfW3a@eJJ2QSKg<fK^sEFAIPV!E*.J2I._%81DDQQKV]t7?gDD48(XQD
%KVKVP0B),7cV$6P-flWoA*J7Fa.Rcc_D+DU?G\Ff@LJ-/k@k7C$r(FBa)(IVKO`m%XnfYkJ$l7D?b1_tVIhsFr6WQW5D"[$s/"ff
%fbi@.&T=R92]=3kLZnsKk5$:F6\pG.I(&5]NU&4[r:$0AIW$!eH27;Fd6Zl=nlB4T-Y1@_I?;M95_XaXg[\#ZW4U?1m/Vp5md$Mf
%2fFP.;/jFCpCO3+&>1jd^-(3%35@6217lb$N74<7Mlh$RF3sa=goJ>aK:KB8^C,C+J4'.T)a21ggN*qO%Z6B5N2,hK1Jr<6#\6_W
%?'7?p`UjLamUE_XABuRkYicXJfQ.;cI2k[0dV+F`pZKV+q;8AA#(>c"(G<;iNd1_lIjUET,eIFaYLdmo>X*uuQ[:q9Es'PUiJH/,
%"7*!@:1H0DL.#kBaJUbJ'tS)hg.mAg%9AN-F!Dt7ARc3=#=`>s8$+e%V^[BsN(iOkja]G?K!lZ76?\:?EeE)uLFoEh&GBh]NT<0u
%/U)fRjYE?C\W#"'bJ-MN0#(Ptjmm'2QHLB:`a%r%Cs9.'h3,sP9iE[*9JY`#.+4@'j%Vlh:QB86jdAM80$cO]B6f)@;f3`-ffl"p
%1L.4pa^LZO@%W/ne@>oX3,6QDmsi$!58a;Tj04S5`p'pK^D&`\c&)T_ka`57%X;OORMCTVk+,[*i8FBc'aL6BaG`)dM=@0-*5F_M
%eT>h;KhcVDiWSVna]B_T`57>RGV\8RfSm?<@l339HY"ESItSb\l!nGFjc7G@>jb&7E4N_t_r\_V2I%:pg2LcEBu8ubO\Ig\UY,7f
%Cnh#t->'^Dnf4P*Q6prp`h,?eGOqqa8::@2`cF*N!dK'AL']Z-Z:]\oTWN'2i7S^$pS:];cW7h,4t<LS<16qWUX>l8J9Q?OPlbc'
%V"T(7.I_-Fqr;*[43oA[80*GL<I3RPX&L"jO_rfOBkagbbjC7]o"l]EoW1r<2*"J&n4%SVGFDM;bT2(B0tr;_f(8(?ISgr02Ngk9
%*i.*<U]tK?9mV4mK;cgD"Ao]099Bj(6p1hDhh;jm-0ddKYP8DrSfS#q)NW)"ks=oSnZHFc]e0JV89%S"*X(7&h-n.K_hS\IA<!LB
%HDpRc3Mo-2lf@:rhJ:[9_cLAMOf'Q6AaHZElCfiu%')h_S5pF*+]%RFJuA@[Q)F?XQ)AhX_:&MSFEJ5hn@Hn.+]Ao_A[`>1JuC'Q
%COMe2H5N<ggn<&VAP\g1'(qoj<NBL+K;^.R-PH3-W7Onp3N6]Iir]^a?H,Rd'6130#*c+m[4Puj"]Gr\BgftDg,YNYmA57VQ'5uD
%/g*?lA$Q8f)!0\c\J\=AarrR&(ed(,%pmJg18\BE>\;k,N2bDTip:<(0_I-?3dl+de<@H+h.oDA/L]u#AjefGi6g7':Cj'uBs8FM
%%mkuAImI#62uZX^b-9C8rd=FmPNgClRN?S<,*_@<4UBeJ+jeVQ/eoiTWNhnb9[Pq0A*BUT3jFX:LZuKC(Cbs;hJ#oD_[(QD2`>_S
%Q(SAi^02A5B%>fI\XOYi%Y>bQT%c]0kXk_ho@&ksLSa;[O%ds=<4])nr03q2>1:2(8^Zi]@Z-YKL[!nW.WY0maSE@]AfSK:9?:<C
%NZR[^WipF7TU"ZV89`KKXcjR4i96`AEV/<4BH*Aj*j4f;<KNo0*ilqg)FG$^oDQu!pi>l;fi($J`K'l#N9<;WM#3UQaH(Sk&,Xeh
%kD/_/b`!lO`j=o`T85&Kms)8L^9mpK%,,[f<TtXefVq7]DT_(d\:CnR,.P]n!aKM&(c)n9K&H]F3_^a"2sJ/aP19Uhe5`%?P$j2l
%lc22m1Tp87psD+Lb]d/YO`cGAOeQXU-i@cb[tdc>3Pi`tVH//_mAU&:gMIR2,oq/Q\Jm[SmlU=XdLpsEL6.q4)"bo]i3hX'$)rA4
%>RgVK5,EID2r`e3dV?@h1&5MZOg!n@XTJbVM"6J,Z6K5AC%$##q3lGu;tRbX>7'af[VnV34p[Fb-aXe=_XmpGJu1E"U<qcIYF!`e
%p7H[++DMf,L8BTr:TtYYo7,_!jd_gM<^QFe>72cc.H^-e:.!l]3Bi\QMAPT#4Z4<^m-SW^iZ,bC/`5B<'+`=QhLV1A_AL]W:)E,N
%SKWl[Rs]3)PQ>aslGo2'>$B(0K\<a<)kcq&WiBoaQl#+,X9sc4cF^Z!.E*L-KhJdKh*J0@^Sl`F3W><iOiMM=V`uG9Zn_^s.)jJ]
%+!;aZ=uSO"@T6>@&Wh[qqm-()o$`kqS*(:1oR1bCXA[O:5sE^$HC)!#7%!UT;=UI`HRj"gK9p1>rj!:P/u@c]F1P25BO5"oj2CCA
%D&uLRjmn>3J>CYRiqEc'\]M$]C;=8$D-iXb`L4Y,O&FeB.!&uS)B_X51-$Npg$EC:C^F9g(u5a,O%^C?GbJFoRh[tE^h_=.=YDG7
%Ea]IbWB@kM?SE_)G=.Y_o`adB*M7<rec1*Y;iBZc35S*;Gom+=IU(QSU-=)"H,[ND;i^*Ud-0R2%bK/U]QED4S&EXURa.:i(ZcH"
%Or<S#O]='"2$Md,1_SR*k8nt<&F`26>e.K8_,p]&\iZ8TZ_>[ZRC=jD65BE(<882V)TR4[4'C*?A6h5jc3]$+VJjjW3>_^*LgR,K
%T-Mdn^Y3%q^[m`[/%=u'6%@,E^H78dn*a_r>mpOCa3W]rFAS;%U\\HFG2LhrJ7ig+F_fY?12,P%h8<DO9$F$!W\'3)e[)NR!IPip
%RDErOZ)cK'pnR^9^)1/,VF.N>)IP2XF+DII/^Q<c5HMO!muG:!3WKX&T3C4$<^MRN\-'@"L6mO@pb$eEqD(Na01egIj9)Ja4'EsE
%LM-@fM:qnr0-+k:1RldQ@]52>U+/jW2d!QT#Fr:q"eaP,!N%007/:)c3?l>jUP3$cY7[g2KV9f6,N?RcYHk@g?BjF9?ZJIgSdj7d
%:i#+s39Ps"nCkWu68#7qIAC13TNo*ig^fsgnAW(^6EU]EigpoYo=,@!TE8igKNqUFB^p%Q/bIP/77-hJHj<?EG>8E#.2Q8TQ4j<k
%8]i/F:.Q+oTV!p,&d%IAqG%@=?qt1Ppp&`:c,sZ36cN%;6\_#IE$bC?8IS[V/E@e*90?^fPRpAWhsZekX%$i;c=2$;H4$(ZJ0?E2
%P`SOSQ-Y[+i;K2Z,2bO/j9;hJ1Oes7Wd*(?lZ'pcD^IGiZ[&s6gmddHI7XaUP3c+hBE+&7!qo'/#k3WA&D#XehC0VgqFl;t^*s;8
%gD&NDJ;Q2OopHFjB.0"k,_5B,UUGp)nO<JIrW)4Z!q/:HqkD3[7CRNP@AE[_#FP-2%m9)P*k:N3$Kr?aVEYBgXX&pUn]atXWr=9Z
%Ecp:!9L7h:i7Y_\%b.*RhJ[::<q,2ObO.#^<VlGGlat<AIt'RbDJhN[5l"*M#act?9&NL+qAZ@5-,;^CNhulB!2#a`:Ke*%!b_'W
%-YOMDY2]SJ*W!%'JOTZ4i/8BPeXmQBin14/,XBMU,QUNRK;>.APQLR"oiLsK';PW)i1oh:ksCRslaHhH-NV?lG6(;:$QW6I5cI-N
%.7#BjVGcTn%u6Pf,V>sJ.FH0JebtjKq;JVM9XCjtNl\t+)O/#bjXs5,#SUbp%U"3g8V6Me;ekmeje$Nb:`d,>:s(==a^ZVuBM?9;
%\e-5:AL92b`uN+olMF9&pptqq\!0"Z8V-I-e>,A*_PoeGi3#>Ei9!KS!YGLZ)O&u&-j<rlLUUY+7P*3JeZ9#.Y[dr:Jl6R&0=_4^
%D@j(nM$2op5sg0$i5ng08l3Y=RuoTY@?(\92tRhE^[@WLV@&Ofq]1N4)Z%RnP2er1e50INT8L:R;"RZkS^_Q8-W#@l(F>V)W^(ig
%Z78\b#+c0dh^69#"j.>>i>"1H3m)5IqpAtXYH3%]Nq.LMG&VVhf.4o7bu%ddX9II7ePRqAoiT(0T(2/JIdfKf/E87PXo7&#&,>)t
%LN)i_'D!ULCo:h"b4#,qSuJ9QnE_blEH@HKCc!lj?!\+aA&t7uEemIHQ.DJe,-oHE/G"?YpU"3NKAJkL.E/W9a-BAIj\R2)$uL^)
%r5@hO(]!MR@F\SBQfq:+a/7_V4FMS"+\:oZcW6e0:E'N7=k5AQdi=-3.OFs]]2WW6FE*5NlHPSA]"HgH#D8%ua1b*cDAl?*XRK[,
%<GAu]bapO$`dMo5%bN2%rl4("(N'HC#JSu+!H:s2D+O(N^rp@#nr'&-??S_5[sC10ZTUA``N5B5nF$6^mf@1^)pUo4P[dA/FHmLM
%)RCq2n5A)R6]Ld`;.[;]W:VXX0pPj>\sJDBI7Y1I8rlZRW@hRs@:,7hCcW;-=.5%5CEo/X8kc^[MU]BWc[hQY[hcN/ChRGk<E%'Q
%i1uH-j`Xcr#ji,*Y$=GLD]f$)c@?Rm3d/9>"l_-0D_l;1?N%E'ECZ/-(@2rgEKlOp5ON,ac4\0koM-gO=TQ!p&u)L3\9ID3I(77$
%!gj<P/YN=J9H6%^np:`Q]0\PW/9X^WZ!UQEbd&,<$f4<E:cdT=<`g_V:-`GEg2='C%jie)5j!JF\>V4"h$SWuNH\3YJ,<O6<:500
%*dNAV!^+cmL%K;a@D=cT(HTBb]k_&@,5dbbeVLnAP(#9+M2MfsR1*s[\_$trMN>=`1d+,2-N<QO*![M=@PbQ5IXnPc0DMB.f`E[e
%"b;QPPK"g:GbAK8DJruYQ7GL71q@/;Bnt*uF!4+ZkbHsl_5l%[g(^BP%;s`Q2Ons<P@<Vi^eOd.EJ`M?_<5CF2ZMkjCaqk2#RgW\
%j4GFN24hW.]hZESnnt64n)@IRp^TMbWs0)GRCos'co'j9?RpA,GPcVe[4<10271CWW]4:nHO[3X$MW3=.Q4lEcl+a53`Nm6R>^0M
%&fX==-:`>3FU4XqaDU\Fl_O'od]LQt\'RL+@gErP^r"@NZ3i9%(U(c>i?NE.\)O,c&p`IHA!*A85eQjCH]jl1kP'<0rJXApi![7U
%=%QFJn%e(8OB#YT&Mfp1<3"R$<pH]V,2f*`]1lYB*'&'DRuOn=&ot/0\#p`3I\mETY$>+KX<+udWZ<lKRhMpQV3Y.EFgH76',L1P
%;akM@?f&c^%bYfG>8](eZ#-1$Ht;%6?T!:#j_ORI$7>`s!%CR&ZL37Hg"PcNSQ"+Q=d25^j\X:7"3uKeT&p/pD;%.=&62>'I>I6h
%;F95rR8tV6<FAF".:9Ej$Gn\PX^RW(!#sBb/LTlf,O[8F3U\T\be(cnm2ha5[;QFeG$gKt#Njccg)[upHH"0j!D6AmLA8:Z]H<`=
%dd(UkD'N(S0/h;IJBpQ3TVgNG9F%_th&Tlq]0#MHG5&k]MZr`LU(7IDHZ4>laN;&"`u"n^(U&L\QA&+EQ5V+\\tO/.f1?1J<BB8i
%3e"6(m#=%e5@rXODm@%KCm"B*U=YiV#I$$Wh(e4*^RS7m2#ft1D<OB$ILQLmnRQ%Y*UrqQ$"(%,"QT_joBtZa-TdoFGCoSAA^s!T
%YVHepoBla?<#a/q"3gBmcb!,;_-n#V3C2!'45c?IGMo':GPmomh&UF"o'VOan@ZBnK.ZQ[ka[l]QTNX:bX[G8k1qaQOa2/0UhAO)
%A+$mC`rnu%GK4Ojbe%BA\\WJ`dUX9uO4p`+/60a88dDf(f&2s?fSmtl0SJ^g@/jl;q"sNMpW)&Nfut;>;6'HKfc@'[*s$;W/i*/r
%Ng4R?C@7XC]q;iZ!o>k7&3T\^nARK+oX>ip6N3F#Vk?8ANiu<8:CKt2;fEbVG;"oSG6]1gG;!&smuAL]e@YW^.J*!&"O"I$TB_hg
%8%5;<];#m"oBtgZcb)>o-=u$Sj62nTH+Z<3m[+s8NL/g*m!WT^H1"t0ROS"!R)PYDQ`#2eP2H022`A[^J2-STGlF=R4?5gamf.+I
%:AYCM@%Oie/03;9[*>BM5rXhm.s)_kZX/%3+4!-_RNM43FpE]e/*Y=uZ3f5M%2mf58Hf+7`S?JXjYnrNPRYem3q24g_e\oDQgg7L
%K7K(KTqB/),ZVHSqk:;*+i92p%29MUId)LUI\`O5ll(2Z[RbR`NAf_-D<-Ir6nX2u.up=Y\.\^cNUZJKTC_4\\8T_hYPl@OfH=M7
%hcBOTN^:ca?&]5h1FG/Gr7Wc#'>]n1!;;MJdNh$X(X4_]njC=$1<#S_I_bEA)G?O\-Z@SE)\&7t#Oj`5I7n%8+7S!_XfGTRk_Rc7
%gTlM??1uXNi[#Xj*C3`1LN/?WYc6\JQ\b:^G4I1Ki"Uh91d?NhVAPeuq7SJZq7Ub_*d`Gf[<mL!o+Tp84J([_msDB3L8Oe*F'C$4
%Oa2E(_:Nke2Y6iWLoA!?1_`4P@N(K.q-i?BlT_4&5FjlHl=d2e'W(=E<jV^!N(JI9p)H;)M3XlF;jk7g>VIN#l"hOE_FuF.'(EKb
%8B$DX5rT!S7XI?^_)(`^;KMa9-J\gep]3$,WE#DIf-'WkQoV5s#QRr+(@F231;b^oPq^6SE)0a5,X6R`6#0,!"TVV`SE(]o[Mb9/
%miXghC@,R5U3Ar=+=oc/[78;p5J2WVi`U^1RH^43r.%9t[9G"2C^oOJk\6?fPj%kY2:G>dhZ,dh:M.*a,c4O*H*Kq<9MP3/)01't
%=B#1Z@onnO[o>TVgRF$69_FU#nGH]joogOD4%1t(AG'!OE#BDqI^puN1Au_`Vo08IA:erinReMfbd#mdEmQUFAF(0rd6p3Ldrj5>
%U*&lOP?P#DIKC"j;`2ru6'=j-kkDrZ[it3ZnNbJq5P_V$?(7gBdQ8&\\nlG!iQO:/5**If1J:.1pMgi2$/%Zb1>7?r0tDs0D/3qb
%P=LH#g&O=F%1ahg22+@&;$C7e()*!9D&H*E[L>6q9n$jIeu;&We2um,ESW`WO:u`V78-2nU)L58B_&!A$B`a@pmDGImV&""<$N7?
%fI!_-gSY8__Y$dB3?G%UNH*[&;5u0eg)AK1GGE6C((OI`0@!=,"4ehkWMHm%B8k%`D#gb3,>fn,!,5"M8fR9JBu;EumCDM$hfMJ[
%@"Xn0UpLGWnOBLB2?=3YJ<\LU!_I)>ge4gtl5IZo9#EmPM:-S*:2'eiD[P#DV+l`:73+p5PD'W=PZ$4G8sGDT2%'bfi(j[+O"$25
%^A98uV/p+/*7hWn^l"d7RN4Ql.p;O3BfiOeBm\g7XrY4R1JUQsJNK]&B$6bCCVrEgW(N:4RE.Nk`#@2C9]M)Fk]>cF]SLiD';t6m
%f#29LiT.?d\9$@,]I6:GS2LE&'skTu(`k@+G0r:%[KO]Sb%Usf$]P[;g&qp(Flg!p"qc3PE8'jk#tg\/@-;)o.;^iXK&E[G/CY[X
%PT_?N9rBBcCR!<!Us-r,)`h\8%]eelWCkdf?mrFN`L#(/&uSH*-*NHRBfede3GksN-`?@dK_WQ$Heoq[Hf@G`4%,Jr$QkK$Q-M/d
%3'A'<GU@s5gPITJBihnZ6fU9BJ/8<WUmV3pOY`c#!#laKKW;I%o^<[&,L&XG7EmcfR5?AKieMQ\]c<G,4K3*u?cWSc_Y+Qpf"qGZ
%2k%$G?6EAt#G,$E#OX,Vq)RVd(s><$1-qI@,$u+7>NM5CfA+Ta:l^D+@57jqHlDT.SRV^T80:GY_'hJ_Q_2HsQiJ4l2^kMi!2N^M
%:O>d>q,r1I3/LN.iKf9I3WW(`A"CSR["TAhiD)-/G_^sJP"Yk1al4;(-3\4Qc_2<lJ?1KhhWm1CR7;3jJCga>Tc=_rAb2Xl*"r?k
%VO9Ea7,Z)U0$5m\d*5\UR(P\)9Fa2+,Y-Ja!%3fK$Wi>p^rQ9tQX?qYGq@B$ElsY%$nBrf;3ZaV2RWj"2N0H'i:H2ZX"hdCo8Ze5
%$(uX!Ni/(7A=gg6<_4V>/jIODA!4)b1!+BDQt4hU-MgXTJ5_&V][olQKFAOiK[>WWNesnPZ@L1&P+K3Jh,=i57t`oE*j9Okp31'h
%00(@73/N`i-TSu`/6%W9^tQk-+icu?h5@Gt9EZo!(HW)d@aa'(r0(V7pr+`"at]#m[mT([,A7&n"76]G#!PWP;3&aQEK+K!_T4HW
%iT-.A9B^#Y*0V2A*"r?+Wm0:P!9!''D4G)[pgSGN4pa-2+;cNI7!>.o@OF/_JgWnUm9<YQC^T9kaOV0G9QEg;T=daF(647D&@k>G
%_;CL4-c\V&<TqSA?eo4^eaU:V)"289"CZ<>qX)4Ii+%KjXOZ2ME7a$U:>L%90L@eRn=WH[J"d(HqC`no/`u@IZ!K`9Z:M&]n3fN[
%o4DFj+5e-IafYJkBDO_SdW1h+JBq9SN2g5g:\aICdEE,?U=>g>KiEUXh,t'W^fmLZ9SDD;cS\C\;D1DO+r7*@[]%t^A#F?>I?Q-m
%<)na0qdT4\jjXBKM,3<)qA8RiHGF%=p@Mhsp#?8J*'*?A;tOQ8UF?!'PgW]n6M'eB;?BB2)P'O-k038_0?l"H"mB<^T^?_7RtE/B
%fu''Else*sI7t=+eIpGj@94-WU5s"p+Z)J,dtH&5K&>^#RPiiHiFJCEJW"SQSP6ACZ9oIa"o"pU`(An[V%`Ft-Vj*s*,'IMh$@SR
%J/h=]#Od;gb+).5lVEheF;&i<-CqhDaH_PoEopq"U;Z,PdC`/o(^Rt9n1mQ:"n.uDAO?'pOSlLb"^m>.-G#V,TWf862)c2al)AI\
%ANI&71'qd*GBP=X)Y3_hiRu>;EB9L7A;R%PJi]<1kUH3;:*qNZ*eb-SaY]-grXRE!P5D1^E)$^'I.&'>fB^;+Yn0NN1>PLU+9TJ*
%*4Z!RdYp5T17"J)-Q^R/grhqBiFL(jSP5D%(O%ZV1.fat?$"t86AA(mS=,QIhn<B5cu0lUiFL(US"37K>I0OX`5B]]EB9KfY/[$R
%.VhBrL,E\^ab8V]QA54&mM+l[NsXa?;I'!aYSDiG`I(AR%\&8<VE@5/P6q+ZTmt(P9E7Er=e/5^Vj<8-K5`SSMY9Sc;^^#s]sGGV
%6"sG]4-M'?\(AOE3=7nNFY[C!`U,.F9N[Q'Z"Zt14Nces3X7j=9OB-b=!nYJ8m]+egNR\;ML$8m9YG)3.2HIfh(>Jb*=Vg?`.21V
%*KJ4!lGI5j$-6C$be&gH>6m]<o'CeDZ`05Eq#N]23Ga[IXSNMngZcO(rs:pH1UZffSrLAr2_,D#=sUPGR>:0DnsUG.*f(i!T4hi.
%N'%P#ZeXW!*BBEBoBmn!Sfc6\P,;C7s-XSsB]U6gNBB%%)-8X>:Sie.dF"lKk<+/3GrT!lLA,06%BJIq._FL>*s8q?&6]iA6tlem
%,ZaL@9Xt\;jpc8]L23l`h1;i"pOOFXj,0MZ:O&o%rPHf%]Ft=gX*I?6lr7u-q9F4ri>PFdCn`(Ca/u0D@-cqi^oM`>Qp4Gph&aO)
%`P]HXVkmqGCTllK^rI7X/>_kWc\/@ScHeJNH/fpc`Pg2=.8Lb:-8@11;s6Bb#/j3Xn]QErnb`Q#L:k;tG`q:rh?RPeWm_K?fm0aL
%s/aZ<cm502i2gGU3rK$tb;QBkIRB[!W$"?nI_i39s20V[&E5JD!d7=Tb4Hd#P3J=!B4r?CRNZ">eeS*EftI[QI2'nKR==sF[l!,R
%*&$rpX%`Q@_+CO(_"6(O19`DAhgg<E?<.Wm>"sd$5]+]%0KCcD@ta-<i%j7TJ?H)SEH5>ccS^<SE!Ss+%4Qg&\WCLeh*+*O?LnpF
%XqY7EFiR`8\qt<eT/+rdQ*,Fb%mI(d;nVQW@h@%FL5uRQ?4i#n>g"#c+[V_pLa5R9)5*=OOI4M`ehsmE8dN>E,f!],Ci3a88a#Ar
%S7;1bX8P%DFH%F.<A!DWj(%mVij8?6He6F[iauI>o1)U/jjUh,C95VB^b<.$8H?D?T6n@&14'!SZTI,H",ZoA[?0m0Pk<jOr0aUK
%X!+-IJk[(+[t4L`-Z?EHr7rnrK&Ys[%PQ*R4al;BP-%'b9o%+Nmi'M`9[BF=M`Tus-!g;6#70a.D>%fO^<3ZU]1Hq084i+<)m3h=
%K$D+TetIU`.@""3\)4f',TaqYk@HHi"g(T<?D]&7cN0HCZGCoL\`ER>>]6au4^R,Z%O4+=//g/fkah.0]]nD@T@'TNrWAV/R!RV^
%cJ&Tkia.Z1o]+M8>J7]Xe/NCX9/U[<=Ta\fWWCB%D]FNLDC#;=n%::GXXi&7Zg?F;^\G0FGA,$FVOE[lWp7fK\.uD&^sA.]1?kCd
%I>_#JT1mDd^B]lkT75n%rbbr1FTA$qiI($^++%h<k/uTJjmW.qYOB<RZo9>$j1:m:J![3P_rasI$`6ig(7:q+XD0@6q.rt<?Icsu
%o4#]TN)7j@ink;#:Q'_tAgJ(dkM"hXeXG;3VslEN=7N]5NC54f@3Hh2J_WAR8VbP2/5GF7M_noWmDUtL=!"!gme"(H2ZGAVD"dC7
%Hre]2ARdUj12Pu[('AY)&T%6MNnBd.?VPX;D80+e)Y*4'm(H's'ZWc#d=Bj4^p*u;QQ?8f'#eme"Oh4&+Y.YU1U*Ym*+Vt=82,*(
%,=#W6goa`KG8`P[-:W_sSo,_0k#(mjgpT^9c21/Uc,*\(HTRe<&.MUfqjC)W6M3!.;IS3Ei#7-4G;*A]jt0nAqd=KU194,1Z#-Y,
%Ea+=2p/>-UTBkj)0A_?%WZk1#Y_aL9\SOFKg+Fr&,>=o8Qrff5kqdTm_)\X,11B$V)=OJa9Rdl7,o5kK8tg)d5QXHGG&KUM%c!+3
%O:9Wf69%s(Erm7=*+r@qIP*mZIeei^.hYno>G_Z2DYlIB%8P)WorhTEQG[RuDs7VPo>0ZlYGInm>u"%^obP,Q1<lM%5QZ7pl\#R.
%'mgFHgJ9@:30t6*]EL=NUb3HKdft^4YAR[3O41?dL5gbB:CeRb]4%BHJF</`n\L2:j5@@gosYD:N*4]LTCCmf9'uN[hEg7C]Q:qC
%nPRK]fN/E$%<mbLZhl_A.e\/BJ1gL'r+SCRN!IDr=&!EGLUII>*j97Gp)dQBAp1BH=3%t9*E@R569:JmQbRk&HXtKYh$(cYLR/;a
%^q:A=N%X(Y(0F9ec`]FZG[>t>'cef9lG?6QdY\FI]E,o]Mf6'VbQHa6fV5=A>)^p2i`4%e;UZ(A^8&#mV`d*gXV;k8c[ku-]qK8F
%mdRPM;PMkF-bO0M\df8CJ^i!@&[uq4s3SJd3fed]8cA2.c[)`Ms2:peKqF:`Zi0WH\&+le/Id+#R,3Cd5:'q+rKm;].4:!S<YUec
%8esg+R@pnj'm_.N/Z<p>kOIn[^2potFY9#1?JOl/XRZ%]`bm*u$NgH<KD2YqohGLu=u3Uk@Mr.\SVAdV'"Of*=0,D/HZi4Q3Gk_(
%"j:WTEe6'7jfMoN8Jk8h$\I>j&Yb_Ek./GT_s->9>arcuk/[h<L0nOMan>m1>5Bmj_/LBf]P!bE39KlkMQ]nmG7_t,`+MB1KF,E<
%l=R6"e1L%no=?U&DQt6=%lY9r?I:bS2oU@anK7#e*K+"&L)@=6\fDsG<c>gt*TBC0\e#_QHL_!AoDl)9B"Pa1h0)I)2ed7;ZsaWj
%9h1X2cj%/.qog-?brpX>G^*TnLc$g<X(%d\bI75J%bqiZmiN>/n)JeI3d(CA5#kZ18R#ZBE0p/:oeQg^`kbFP)h=5Z?+MO&0X:Q7
%ZFs?:]`!B8T!g+nU"Lo0P;32g0LK9B=\lL^*>C$[)n>>#%1==O0N2Js1__=6J>NMUKD[W7\F'YcDFAqD0T-q1p)rmj(Dm?g_L4<?
%IcEoTd^Q':UY`IS_mX&JBXPm>C\/ur.>]QB@FtBuE'r6++.uE?ERT;kLNgAd?Slk74LSkT4$I8HSZpnT(GG?&_M[j%HTHRM]rrf"
%5r,X3Vtl"jGWn\,Jh?[.5N2EkrR/EPYj%d?'/ok^50!(*Ap+$)+"-EAp>77!kdTBgetB3sl:`*7O"I,Ko"??q#-P]aRYI#4TBl3Q
%G<@+oHW=);^'omc/^`LG#$UtgA]91KffSOXr?a^p:N,0W>E4Cb>]b8#8iq2g]GodGAVRE4Pfrg^riH';f%eilF7sVN&Os$Icf!q[
%c5#j*lK?(8@U%#D#9H^koR(Q-iqN7hYtj=W.=r^PI*JSe]u8TPJo/K!B@tMm',726)oPVFb?O1P-n%G!T2=6b:c(6:]IcN4NPj]7
%_jfW9$Ra!8/r&\sFc+EV0=$P=8m('Q]nW16Nd",pBDDJ6ea!a-qj6B:^9Gej:)SJ_]PZ:sp""NV&SedM?2q-5%p#;DSq2H8-5R=u
%&aO#n4[$.>np*#C_B/0LLG.`C\uk^o`4(?-)$7<R?bQV0d7kp]A-]i\c)!If^TW?5!1Gr!][sQgnMMqe*!4#J#8=;OALDLQqJO=F
%'5.'JEVEuIKE?I\aa`haf$uMG@&#D>E/F(YFO-4]!GV?m$fV%<S?\89\f"Kg&i;FU>J8^Am5]DI4oHO`HLoLhkXbt)K/ac?GS:B$
%!K@8<Y10%oF/lfg$T/"cqe&F"S>-!mO!X2VZ!5XS/';M=3)tE1030SL/C)hX3'Q(H._sfMD2b#]"TPHSK4O7L1<\HVFO-kF1&0ZV
%(#d(SP+Wk_;Z;SJZ-)IadnXF;=Uq_31l#olA^SKI79WGORg?6*B(tVA3:7eo97O'A(':)6U,s\ehZKj&EPb>-O<<4>HW2jf50G?H
%#\SGi2jsQMY/Qq_PL`,kdXh+;qRsc5I>^51nTTI$hNaEHm/_=,\6/#?U\KAoid^MW[kFNI:SY'`[\TL(`G8>k?(o%k9LF5ec9K'j
%F5N/1Q4]35:lOEmd$$3GW4CQ2qqm^_mg45/CnXIC#bVc30m5;#6Ao(QHKgM,NkMH:S=$6[s7/B5CM'EqdK)uh9!NDVPEYo&H*'i.
%WJ$f?_d%uu)hD8VV.\AT_c'h)g4r`h4DDElE$?L#-[pJ@=57\YX^tW!iU`FCGl\Sp.MR[L5U<ZjAZV=%:Bd:r@qSVB=KFQL*_'`P
%@tu7udRB>dncpNMTL7=J':.!1LB(Rj"&#J97E@4#Q`S.3\N/+r(!!LkSjTY54:CEu#3_?.`NF,qTM>-_7X#$C>t<2EDP2'!2/R69
%KkkXoQ#`Q*G&H.1[BC*;NlGG_K&]K1@_Z9`o)ig2I)8V-DFGUbcp'Sa/^das',,ULojo241;`]J:.LibMjGt9R9`54b4Y;oS:a9t
%0/fN:P_YVjBhkRNG\NMHMWY2d'2ORF"+39<*6V^'@2Y(m!,68ah`/'"_NdtBE]NN@f,i_(+RRG8&n^h`*!]b%g`T<])Z=/+);-/$
%.b$@_%klLk"fQ!W+k,![P\ir8p(fb.:[SA/>3K#><oR-0>%iP+#,qdk/bgl_TU1Id")Pq0.h[omag64$&nZ[':fS$%3_aKa!aaZr
%HhYW\NL%);^mNDH3\.9q9MAe"#gW+_]Ia!^?JWI5GnKuY%c?7^GY:k;QSP+L;B+$74e4:D.cJZMkdIgL>l\elZ5%N&emj!(bN.Zq
%Kq[K`3m,WpcDsG[*4'R1Z/?#Fc.0ELTXj;pROZgGrj`nIM+-m5]5l*Wp9uHW#\-+-]4+C8QRhKnNU^G3TKnQm6aN-=^lp_:\[!@F
%Y5]f>]G08W2_RW!VsL6>rZlb6oI"n-IDrOZi`l;phd>8C6gK,R^sAX)"1E])[=mGJ="Xj(aLN^>j;To'6^`B'(D<aodi*p8bPSZ$
%&m8K7KTFb/O/>gJEnV9^'aYJb`S6<>h#O"<JFc/749p\[d]VUJ5Pqpo!7FZQ"Hi.K(bVq%TAkR*j=$@p@-A#[.D_h>?4?^hZ+Qfh
%(Jac3/^$igTN9&qSVP!d="6@\0c`Nh9Hnk5%d;d)a9"T@q/[ankM!Kbq1)-8R0nE^4Pbjpn:OH$6O0KRX]=Q/_5R8VU2W&2X[+O2
%K)Ssuc4@b-CV-LX/2&C]A\OiJ%$@-EEs/4<QUNK&\Q>f&0-"qY;OlCr_S",:f/5f:+PflM5O6+be'JX'\Mso-;-GR-q,2Y9HZbh=
%/'7a4&Wb[g+Pts`H__Zab/9m]Eoc"KZTq6ea-!N;)+=7'J0GpW*OuPRL2C0@l,ZV4EKM2t]PuY$[n'l?5fTF'\BkQDf.8E]B-'s-
%jCOsYbKnXl&Bc_BT[)P5-F4"VT*]kfRjEm_qn'iu3'OamOFlVZ7(0T"_"-ZG"(\='\@E`K7)njLDQY]kc^40)Zne-:lcW+,M/70;
%>rJD4mJh"g9f<Mb&O?bD;['5B;XUc%g'<8+;GMN`_!\kf]^%lcc&*@7LZ)qurp\M+#HMA)/gIH7*Jr(I20:k[FCdXP`PS23+p,75
%9'A,6Y\Hl$!C'Z!"_X'0kEk#/Y82jQ6Jl+s$Z!l+S"R#'9aGu&bJ`tk*IaT<)jh?#J=b?S"f#r%G8)[-DfK#,^%1:q09.7Xa%c;t
%ggmf?mYDBj:1/<qQTN0f'JEXo'&L-YCG?ZVAbqTf-48S.66PPoZU+/N#.T(5Ig(ESD^>Xk5%=>q9qU,VepuB+Kq$8f1JF"plW"s/
%17pV&c1ffLp4e9HAag3l&7!i[GkbV$6[^00%a;=NJ[)^/k'nO]h<qP+PljFbW7h$HZ\M>qWZMLa)Fe1bD`a/cG4B^_4S=Tc"!1&(
%=(q$SEP`)K-OgGZn@!K<(`84Z\B_a'EL+*9Zi4^qpV"Ph8L_*mhraP7aIB<%MnBG*`U2Q+88PPo7/d8.<F[7G3+)E'cH`c&9L#Wu
%03p-6Z,Fd."%k(d/m/;5VA0V;qiFVUHVB.Vbk=ieFp8G&VaM'"f]KP6na7#uN*eI^?%G6bfA!a(2/'Kk%^f&O9.guuTO/]_Ze$4`
%ZV%H2U9ut8[D_D<hQ0G;nS\3ddd#P(9?>#^qQ0rP(0=_F*>^64]S(o`kni756?'<$5"r%OC6O,W;b*!Mrj;CN.Q-5fP.:%(9iJA*
%<*,Pf?.0hl)u$Sug"#8'B>EmdPbN4NJPBWoJ+15rY'CSi`=t7TXGgNS%8ik3A)g]:noFT=Qf.2]K,=26(dSm(NpE:6d6Kk<hZhOr
%[<q+O)E!Ed^-F]sh'O9$]k!FrW5ZA=;hJW&=Uf:c`0WP+Z([PbJK+po*P:e1)Rn$Yrkg@YkDh(R@5l"o2DJIP@\O@:V=s,eb\iJD
%9'S/@L,#2<^?!9\I;e"pJ;G\@aKujJ8T*m1h?"5LXll+(I^3n@KpO*6=0h@+NANRR[RR'09";og[Gfc_oBi-^-P"9dM:^OlQ)g*L
%ebEDV9X\HJNH&A?0^**BjX2/;K^6@^gEjiW+8(6A;\K$gmS"p9!=1R\(`)Hr;5`duELBeQ?1(`.K%%pVJFNqWqQ[H`<Y5dc4c(YV
%0\)GHon4NQ9geT"68=YW[/dmF7!ceBHbRdfKK<skSs5t#"Z-'-,']&6_M-rb?ZC4C<+:m&(W86^9,HQjchtR2n\oss^&ZFo-\hKK
%=7Y'Ol;?,V"YknaZr/Q*[dWVHk,$V)1MEr.?e0bfU."/:eMI2HA'sBG#,RAJm<WB;m$:G.g!Yf/i$@Ql-Qu5Sou5kpb\O0;%Pli*
%4/9`M)!/&n?r68mpg-%kI0OEt5Ifk!:F&PF_&)JKc5r!#<oar0Y3%qrH.p&=/RGRp@`D!(Mgge/qh7uP"A'H\1'_)#!I[IA/>l.>
%K!_WVp2(7e)OYtW_L;Pm%""Ab(4YK5?V#*rB]6\9:6nG1$/!L8Z]'#"!h$AFpg?3(B`c%dKSC3^rX$X3D#F`J]kk@JeYF&<U.D:o
%he8]h^+cILicTI^eYGefk!W$0284Um2\Nn<N(?kk4cCm#6aN*`jNpnHQ5@ktmPA<jip2mn>*9PeOYX:sE!DF)@YsM+>R3:'cX-Sg
%?LAP'-n'8``mfu%BOZ14ZU2.HW1>$hF9nRu21&\s91jQYkJhXHKR"&`\rH)mnVmbQre0B.nq$[B#\Y,VU3\22'o@WM1!-U2.s6tQ
%UF[T,.gs>+LIK&)$b7,N*8!\5VH.ifNI_QEnI-C9"(:AufNlZdK!!Q-?lR3&Md=gSdAnmH-dE1)^FRcsB785:&+#%??<[dkVK"Vj
%O]W%DH9Jl'E>*75ga$$2,JIS*6VEbUB+XjPm9pLq1b%D8aC!1;bJ)2VDqZsp7WIQ8E00RZi7"AtB=1uo_@M.eQhK>9jJSPmk/Es2
%4@a'Q+3e9R5N+VCo;-krgn]E\^HVTf%ZfNqJm\!^5JR3(rV+q$ZGVkrMGf9$$IGPg6BU4.p-o,F(;5YZ@SD]C"\q8GU9VX`<"kQp
%(DX-32fUDs*7A0]9DE'-Cp"uh1?_5"h9,8SGj_*ObR^rQn[?7ASC[4spsI=`kEh^-%-MiYXo*]2>P&;@=!)t+LQA/Kpfq!4gNQjC
%@UkU9gnGs/K-#F,-HH)f3ht(gDrLMnqKdDK=CID&hd*#h8ZuEc4*&2bm_s)pjpMkUQ;fla98prRY\Ehl8)N9,;*C@sL%R3k>pRDF
%btp#W9_%a#2f'9ZYmqKeWsB#mYG_I%lss60G;;_b-gGu!Fde*t&%QH?D9l<VY*\ltT.*hH%Xp_:fa"jIVYkYnmKanZZb0oO4[HYN
%,te!L;T$u1>2pF1CDo>`"a&h39o'57)9LY/ddt61@tV-+L=pk:JL&KHB6&KgZ>H+b7YQq5RZ0'(c=$+&\*SKE)=.>VVbK7*>sRH(
%Ad3TXW]uof%_P;LYqjtnh>25/9,['rCU!`X@)pl9^ChH;*S<O/b=9/Q2/WpDFW`8me4G"3Cf6G;?j@O<57-\,GpFkj*KVe6P/.%u
%S\Y5ZeM6^u[3#8SF99)4Ml[\r@ZGYlN-aThUC1gA[)l[A^'t9!q<KdsVVsoE]1`hf:dkFI5Z^4n"Ep1nUfpo;!b+r,,gV=FmKGY(
%rICHUNZUoN2T',3>mQ;&Y#?dp.Nu%>Pe!/E@M`#qSp_^!"Ws=Y1Bk`=*loI7"A9X!!:*@F*uXFk)M(#C^T]KG!R=<(O>>Gh1>\<6
%lnZHs%72i&FlmQ8Z7(?2hi7%GUZMupmXcf]52Jj&9_.]rp!k9Y>ch3%c_(Lm/7;>M*M3jhJ[U@]68,Cg2+@p7nE6\:n":YD!I&'A
%.1mkYM8T>0Q,>5Ikp\]L>pd/3jb(H'De9`da^Ne(imV-]m..E1k>)e8l/(*@@?JDZ@rW(4A]QoDR$>B=$htpH4Y/\=.*L<fK,p/o
%L"/_&QT=2T;c)+XQ<fjG!lh(Q/9C@u,C\"p\g(D@'R&EVNMR>4!H7+VRX8;Tl@C."fO)-oIcVRcbo.b1bEq&?[Rjqpmb)T92s\LE
%XOT;[4q>B;q(d[4ae*3VLpBHb&3(mLe(fP:Ik,o3E!q[SP!QS8^kFhf6e!]T_<_q2pu*"438K2]23[nD^EB?(3q&Wu(`\WPT_lnp
%K0q-9qi065K1!/j^+Y4VE$Y0:?%_17Cf/n&nR!P$UeMO\l,S,aKb-qUF&?4qUU0=Di>N[b`QDJ=!s+b3hq)+c%qoNp%aX'`(`.BL
%FUSbIWoQ:0@rO9Y'8L(:TQK[r='Zi!UW)pu`ur0eiW!j*!k3]%3!KCe=eK^BSmXM^LF=MF4qSi$kR:XGXIo""1RN0."s7g.gT<+"
%%*HpeTU269&I"sbAY)1]M+[Be/ZI]/kYA0/B#O4UZ!t?()8qK$]PrR;E.H@oh&8&p+Jq_D<1%;PK@r&*io'r4h>A'KI=iE7EtHg^
%VT[;uK:%<N):rs@@NH%l7f!TD!Tj'AoXTAjm_M!tP'\m2BQaoXE4?-/:A:E3b@e#h#6A#%Wl$t*g_AGZ4U?!Jr$rdU&gtRW#^F]q
%0]sQ*6K&,]cG;>!%d2c3e4\rIWH/XB/$WF23B3,/9<)&Q#;JR^ZR=!X306:K^T<t_.Yh^`Wh.%2ZA0#@*54_,HP"B%`hl,tTWC`]
%:=VFna-b`"F5Xqtpc0M3H3]5\)b-E#3cT*>R'1bf^a4d.g80RcBNUC.mb1ORRC_>1;#jldR+bCBQr<f;T!b>"\8"M7HnI'9+&tBp
%^_piASOWa[Z.tC?4%`hHdY]Lp-!7"5R*njI?#!l\FHlDcA,+XGJd1Y$N"jlgKke9[(=H%[=/D4?P.sJGbi9rh,m.[(E@Dn3YYL(d
%ph<s&@!eKhKo(GHNWN<Tos7r#UE1Z?Lj$CPe:D7.E<dT:iq>UpLJ&u%o+sB_UO]r_PO,X&Z>f',Dj1(R1h#i.b!g"Si6@F.*S4Yh
%Oj(">\,;+T3pP7,P`Eni5$^6BIVqO\hW=2i9C!JfEA*fMSGmK(7cJOW.%)7X9>TE&I(Ja%/6A<NS$Ha#,Wif;*0p&q*;.1.812/1
%gtklhW+0a;b#.^ESSml\9;5+OVD],q`pG8oTL3jLIG4T>Op:;r_KOGs3/-mQp%^%q#CQ630HS"e?c%$mQoDL-+.M#AgZA_0IL5$@
%fJntt\H+?:@6AhonIihDq"ud0.:[Sf8LK\5><g3D[_"\1S"IQBd[.ZE5%M90#J9C<`kt?KodPh)SGj)fDZ,J-XGl]I<5s7pH\h=c
%ih>+2^Sk4t[Puu9KD-&6>JcG<%'#,Ub'4dg\$9W00CZ?^?*70G],SIr^6J0%:%)S=lW6J/o(LX#R<pCCafi.>1>_PYa7a[u=k_a-
%lERt[ea#jG:L<Gf<5ug'[II/7PK?X.b':LP5F(bL7dX+l&(nU'b'4/YpU>etqqHt^r[,DR;T:f,Qb:)TGFZg#o"k9QdX7)0fBo\3
%)*Gn[nO>:JD6a?lk(Rce!B-^na.CnEpKZR(P6Xm_*:Y^<GU'QPR`1[Y>CHfq@GaaA&\%cBDHQpt@uB@V0_'Us0Wg%GM4WF*;I:-r
%(nlj1Fc-5HX)_1';\tsd]dgi)@'bLt<Ug8+Lbu>Cp@f'CV1,Q(D]IW+@G`t\\eL`a?n$=h??r?F2CXFCgQ5[HV0h*s>8j,DF2J8R
%cFlFnjc=(<8e`.N#aIrF8fJ%5H$NV>FKhj9I$Q=i$sFbNZ3D;X0)PSRHhU,IaO`DE^;9_&Ae2W,H[p%7Yb\7K]fL8h@bqC:npX<=
%)dJ6nRZ=$+kL`#jl7c"fYHQpNM]Rg8%lkm]^gb\+l<]?P_oJs8!@+#W18^7d`p/I?1ub</R"(igLe6Ang]mNl/)#g3RFIE9YRb=X
%(O*^r08o^.D>*I(j>tC_;SbBK==a-RfYTc8;MH&uBbqY%gZfsd$6'5L6,2<UVO=>(JIck3G.s),Okc@f?6Ac?PJkq*:+la=HY'&]
%4h1qFoT2*Q918qS0ec5]9C$WHF!.=>Nkl4.DjhQ,Xjf75?ilg_+$(`R\.eGiOF7WKWXVX^nqS%)&;Kl/('Rg<;:0f9nqr(jDV>PX
%2*o\mi(0M>A.6d(DkL\5Ge^l"0NLU6P\KZ<G7-cIo'c$=g6UhEii&hu/P0-EJrPuQ)BQQl5+$Gg@cIO$dqNP4Ob%n#?7U?<e'u>Q
%2Z;fDV#t#Wf*<_qq%m8F)2UdHrr0h^g[4brffA6kC+qYQpEkBF6t,j+p;L.In(s0`c1pnQSRQF4C[Z77(M`OY*:1X]7c4&-@f,E?
%T(O76Qfl8_q/K5CdU\7604pbo>J,Ng&_p"NJBql=QrR@T54ah`q7VW72l942;<5>u@jZE*KHs.4RPYDciVL`j;8e5.pd=BLN=WEI
%CKsth."aNDPjfn]P]=]uR\]Phi^7sE7W)eULK][_bP9Ed\l<ahLK_hucgd\5VFRl/2*TM^k*`i$K'mKJnY'`.C!H8.$O5GcM@WuS
%KK=1%kX&lQ#l;W-mQt5OJ&R0qe6/[3,Q^@MQ32QC)Ba@1]0t^d"%3s&34\2a+M*YV9J<URLb?cgOOde?,(PtHE!1uIfDZ*g?+Bq+
%5dUO=#tBFN/VH5i"G/=JVS2O6IKYH^c2^^oUs42hLh,k_4%+T)$g-U:YQ.Oab#GPE&`uJd6Q%"=;^.gPP\@=3BRo:I).:_jU2*9A
%*Wne1bF:Pa_&ORYnH]8oDZ1$6!MTuY5_SAW6FU"u7$rWjlF=>uK8JBn.9_8c!QT?>g:lu^V_OYf64+:#&'Y-L'93&i`Yfm#=N`3[
%"Rs!3WdB9[g.*#-%1iOKElW?:doqP-&[m8;8@/AZlj[4;(*H5Uis63%4"L23J-b`s6msWPF<MGQ$m>h2A;2FB?O7:O_Xb"SmOD?Y
%3#QFaFg[9c*t.9I+MolanJ)HDadR=haT=kUN#<a!#<i2WT+g4"JEVU`F_^dPq8P3\>:N3MIg'KIp6X@$\Xi`a?uG-laa@LlL%WRC
%:AEdsqpPJ5\W,T@D9r^n?g42;]*+/S&(l1"U-6WT!dNO+^EW0?1FR;D@4`lj(3OsnA=,q2p&M5me1YURnagg!.ui&7YIKd<^>NTm
%T\@ehpltE1p;VO$/_k8=;DO),PK&8E%BDp1W&_:_[d1i7-*X;4*RB&i%)5hcSV-:LS05@DBP.HsIWUF(!C,N*S4N&IN)s7UJ(pGo
%_PRNY7G6!D3Bh*(S"Na>RG:PT%Kj(%Mq0*3Z.ml!Sk+rfl\881Oo\.e;ET\WZ&s9.AYr]c&oZSO;][2j<&a?+VbH(RhO%tg,i6+!
%!L+kd#B]LMK>`\OgWUa<&oX&`Z7e9\h3561h--a:7/H)aAMSdK,i3iG!9IVYesh=dBCXQB6*angSfh1K03DAi02Pfa09@_ki/Qj(
%N5f)\Fs)@^BY8ICL[Uo+9#[G%8`Q)92"a;t`AFjbP<n624#iFl`[c+c@<(>t!aKqo@.]WnO?DA.PK/TM5$-N%e-Nj:(&CLRa]f?!
%>;%<Vk05F8Zqe3gO"1Da(01@I5:ehD0-5&FWL.o!GUm$Y,c_cCpArHJP)SpUlV2`ni:194=3sabj-@0q<)VcHeiROFjRH\CX=-\4
%*cIUk%PSeSf#20tYZVe+SsS$*GOMjXh[bKQA'fHTb6hN?60#(FIe-"g`Ma7:m`_#`_+`lPEMN%*XMmK%n^^O8bVWY==UWX*k!/"8
%-.7&.Z%LhoT^cL/E18Q1GVKo(ETT[G.d7cS)3;8`3C>`M]N(he;g+/@>=JGL`T+oWX"<L%*j<dCWmMcH[uSP)-',OX7JE"d>B+)L
%!giG%!FDI$W]XU<FWDe1>6s":+n?+/j&7!P^?jk)*B`1.b'e`?at9P=5&D9TT4d*&0o=>3q_744I,W+C?Vu=D1H-o%[n=(hS4!dP
%jHDd:J)#-n\'\C'!3]#k$k#!Yiu79[GZ`bcrY?j%<J0!JcJiHP<E(%0bZd8i&iu46;ls1O3cr*']L.5g'[7\K(s]cnZUuQ=_33r-
%:"/2.>Y,@..t#1]#niiddP<d^dI3DZi:p_OiQ\P(Bm:pDm@^-B#CcPp!8P6&h*Tg\?UUo5n%Q-$M]2DEju5QuUWT%0k41f,UX4<&
%n.-Iu)SUZ/*Qo#)nI6())rhS%s)K@UiUlCOijRDE;1]$0bu0"Ad?t;*3isSR[=$hI&q4q7`n?b.-<!JVZHfNf2)('IXB0"->&U-/
%9iO"$cE(F1[ElQT(1Q$2?Tq,#79O3hbIfl7<t[^3pN&uPhrIBs_->2TL<</MJtS':(RKm#>8&K4e;k;r#7"E(X_'*F2t$Z[G-Jd>
%&LoGpWDU_G[b,+V=oq'_(<%gAMbnY1aKn.1n/WT&G?!d8,kV2/?@.?2$VZSZJZ:HY+qY]IpklPB5fUq[I)O/`c<**`+qbP?<fW6A
%b[-0/3P$Tn],E1Qcmq.K5K=$Mp)g;1m'eZ#$G%d7&M.%EOuA$i8.dFDSVeP_W%irD'coYRZoit$>+Y4'/O*\4i5V.&N'n'$j^Zq>
%5bl!4\FHdpZN83MO`hC:V]e3E^?-;Xm@h+&1\,Sn*=g*%5]X4O'h'ad5jX)W,rQFS;L]H^ir)k$=H8Og@8ppE8Cf@GnC<kB*L,ZA
%BR/i.+_7r"i5Ke<MjEB:)&/->3FI'`10>#?#RhJ"#?[l/Fs:#uge,pK=>&7fGA7MPT3qfG'7PVY:L&P7l,Ou]T&/f>R]"JfTR$Cl
%#b"9H*&7'7O^[FN/ruBF)P86fT#NO;k%W0eg`.!gLmb0_'J]29mG_<5[toD:HM3PCchmAh<)b;FD)$+]CJ&.p))IW=8i.tJAr^BZ
%9)5*EB*7sK&MqJ!2X>A!'6#jUIk>7BE!H![KB>.#0%qBc1C#g_?a?%Z^ra+u0lu7o@:RNoi*+NQUXbaBJ30p?.sbXQO`)Ca_,q;j
%6KTX4+nL@/+nHAVOEpaB,Ne70NehuWMMRXtmq'F"ohC=2Vf$%`4M!TUk%S@dLj9oYLmY(@O,/(M*Cn%19r6JF7kWn?&b@hFO,/(M
%bn2[+oD[C3h])CCLcNU^ln;7P-o5r;=3/#s1Z@oL=kV=/V&U[^TBthJT9ZJ]@ojI$?9*V[Y0LEe="!oR=.d"-WrY*kWJt0mcmi?C
%ltX2fgqI,6],KUM].IFWl;Ai--aTi]!pidO<nZ$eMSt:X]`q4uWjpUW%Tg=]h,\\Vaod@-Rp$7)2,+r;+h>1?8-5n@o`q8K:V@;)
%8\j%E9rdBF"JmpNhh55Dcl'bI=1>l1Js"1*#G+K9%HVlH3D=n;ZgFC>q$W_RC443*DQeF_&)5t7\BjE1m@>RmAnV^;>n)17(LEjS
%o!9WWFD1Y`I`KC0Ie=T3ebS#mYEkebbg';0[(KTRpDrMKW3(3U\_&=5'e2I<YEhW$)dLaj0rIQM:j+^2:c1^gNEr*kbcX_9_6,tA
%@opj7Gp'rEeTlA\jD'(]@UTor=6"?P,?$<2mrA65]sWi="EdosgB;o$G`:kL4LW<e=e]f=$D'B<e(LNY]2K8cT9\q!9f7F9,T*Yh
%9`i=CjK_Jdp/0?8+m.2I90E$cE\fqq8Y-7G9craupsDe6B<[N5_T+`Efj4Ljca$7u>R_nYCQb"O#!T*FG7L4C^jDB.Oj.2:4a8HF
%n0t22&dcfnS+%kI`1IR8dSigm2+G$P@]cH[FJ'=b!]llpkFt]A$<JC__^=4&%"3CoRhWa7b^aF9@MG_q"5'?0Ja\OD883q2#.tHR
%/Ls%OWhtI1\RmR-0X9=eSlon8m]8<sUQMa\X>YTGe)D^T%CiGPOjsXi3M)JcL(Bl./2=HaJG0rP"R9E$:ulj9UXSWoj%t5-[l65p
%o#&e]lt!L]<0/dkVT`djWi^WPg6sG$oA!AI)o1X2oYG9XU6n_pMKn5dP(+j[X[/\+nPg[4%60&iSCJroj7"It9u%C[CM1%4&WgoY
%X%gBLT<,I;8625<p[u@;CJs>N0po.hB!iYhZe>P`'Ur!$Ru[I?_.o/;';b*H,nBG?mZZ0JF5eI=^8Jp>CeAM?Ik!oZ@m]Qj[/kJ0
%&m9',:MtpWQ.:&.M:M=:a^30Hr"llLg()b<D).)C7+YF>),eaO<igIn8`*D>;Z]S^g%1K%oPOUhN3GDVK%6/O1pPb@0Ni5t:2O#4
%),jL8Rt*$Sb;cOsn/VO'AKbR!W9L+b2Slm`Ojtdt&j6k.S*g`JAK\(_4?G=!:%/m/Jq_`%o4p&i=]oSAY<npmZJ'DT7ZN#'g6u!o
%R>8iD(mXGWOnI'<f(XqY$e^Zm-Hkb9YAdO3Y"AXNA[NOgm&[YI^m!=BAO:cS[5DXPf/#V`k6jMU(?k@NqpU5@G`!^IYEOMp%CJ#l
%;$\He%EgWfMLC0I!/En$57/l@YaQjl#gd]"Etf42A*0.C>9Ydd=tQD9>p"!83;1T2>^KTFU@04.a\`&kgP@C9MV'&6>9X_LG<_&/
%jt+t8iW5pt=2p<US]'/FH!2*3Ofnl]a;7+-:@cJ-PF;b#bjUZIi&2T#nqF6IWFCAuZHp?Cb5pmaU',ILX,/J4G#C$`[JGT%P8LQ8
%n4W8/!JeN@0sAUoQnn))0R>P68$??:?=j'MIe76lfpfM1F:,ccD[J"TpX&+ujfDakhSds6`O*9:)lE0#m*-f``89jZDge7kGq@=l
%Rt73hr4+Pp@YkP`:lB?H]_ElPfHXog?CuR:`c#Eb3*mi>V48VEN;"hs!he_++4fWA'WOk<6cCFK]_(&7TqfT!&pfGEE7H?@.<S)\
%VAq@tTqACDmNJc6X>Ug_Fg4%tZP<]c/3Z0q/Rl0@B2F<,%G9@N/MW7",@IFVT9ARE]HY$./eW)r8'&OU-@h!uQ;n;4SRC@1IfbsR
%dctngE"2fgCD>?uR_r?YY,Q;7(99YHnBDZIVQ,X>$0.\r+;Lp_?'_k#p57^pMt=;jiYOY(LQ/9V/;>_hZQudBA*fqTb6tESF9dr<
%C#sCWO9Md>jT'T71Bl+ZYUROJH(&a"#eqecbM]p)lVPC*B>M7@8$!k<>$<Fo4o]i1+^^/BIorJ\ZebESE&3p)_g."RXgGddA+Y;s
%oFn6g9M0]q@,h&@>'+Q8U8r2"kbtHI>djAV780_-EP6q8d-:-qg1`o>O8.36&XYq\Uu-AlZBtVM"eLi%X]L/6ZM#Li$2I"J:amfl
%f0s)$BtRV4oYB[::U%$uh_,fI,O9kDBhR2T:qiNh*"q]&>\g%cVnP'J6-*l1mh8&-\KLNm!h]39W+10kE3OF)+8`?[)]s.G4HJ:$
%([$s+*h1s<5GunUc@'gt63;TkX@',tn9G2d6qd8K3&ZA&@S96aPE-,e(SFt!IQ^oq$6$#R4aH*icj"IFA*ItZ"p";-$Rl2YG@tlq
%3T&atPG(_0j91"4(:_d0!+(;GB]M8UpB'q38-nE/im+?EJPK4eE2KWT\5QDgeM]!LV5hVW<SBL0WW8qpSo[m3f'AP:5"=`q\tSc2
%?Fc7"CP^q#0+WT^J0pM%<Ih^&LiZRHV,F;Ke];f;<H;(pT"$7'fQnC?nYNq=!oVm!#OYo$$d(pViq^D#Z2&og9.P^[#8Ip3'QE0I
%9d42naY.Gnn/LF'P/o,g?&pqW1g"73aS$/Eg"dOm,[1G^PIE\O.k<P8`GOa*25\Su!C#_3g?,`s@?`fU76Y]K56/c*&Y-53DAel^
%HE#*t2pi#;+>48/OK9XNM7C-#.3LiNP)Jeb5!Y9217lT;0AP2snREiFj>Y7mQ2DLFX/,21=!dT8-EH3f,ZuGd34UMaF>?oDO!M7c
%H,rSKaR^X?<UsZE=X?kUE1GuP,(!H64=SOn_d4R<!G$_]`_kr1(#VB]<3D+K"0$O)IY8[N]R>pC,(!M_5aAAOn@C"P@3HM=P6;Za
%WlP3>R;T!7'g6\1-<@F0J<P&*A/2r:ET1LDJ14\kaXR?m5"W&;i-tKA[YfYN^/qbc$RAq&j-d%?_Nh6dJ'R:.q:.6+-%?0a.f#!n
%Y*+,ZkUO+fSZ\-&S:$Sa3gm17LQ[%M4Qtk,j;Du+f@"d#2Ajo'FHnsW1L2<QB@9fNbWg:6pK%:LXI:P[E;5CkI,W-=*/-i@%f@>;
%p<GA`iJ-K1>j$7&OKZUTbg_V^4Sr->>_(f=pN)hm]ZiZ2Xh59a'D+dulpf.Th?hZGmmkmM+&2KV]i!Xb#0Xm=2e3>Hg#!H56JCqt
%m5ZV1=Ig=/_G.m#\%V+81ZmTF.t'SSkf<q?4G]Fep0#f,Qs[$,5?p'Q#5%#W)-<P;5<JUV1&M,\)E%=BGXjXFq_)r)kP#MS>P`C>
%ViAU^rqu"d;"ZpKKTWfo`3#U):FH)<qM''(ID/%bO.V#7Y9&!Si\gI&--P@pIS3cb?o-sZ@_!-%)p#KGk)+e@8.1.JOiPAYC(]D^
%`&[VjW"fo-GE?jSdR(p(XJpIUY(7C><k)Xd8or"jUt7SJL6(1[`4<X0pVa>iN:dW5i[kbh4BN6GLG(p(U1j$)<.Se[&E'U(W!9m7
%aY!VX5ok?DKZDHW^,\:MLCM;kp1?F70d1P+Q$<ce1-KM4r=Ai$lHb=ZSngl=1Sp_'$EmJO$Fjlq3<"G!cW,!=g(SrB^h+IP+F>]`
%?3WSe\pM>Q\+Ef>eDJ^^8HJH?XZa(2]Jb9C8*`QFNAAU*;?HNEh4Aj?TOjR07)`rKE*9<JIG<<]cqC]]:C7i`mg!fef"i+q0k`du
%I[eNP208NnD]-t>.'/Y?hLOYEk=g"^]^R\`-_uj_[dh%"lUa?'Bn\Opj4d&t8\1rTQDYr3=.=ra[3$24j*_FJd'=Ra&$CprJ51a5
%hB5Z]J6jbd!EjL`GeG%T*kC*f)Bs%'2b6-oosp2IGeHb"4Y6M;5.kk\!d(o@DfXRK5k,hD=R0Du]Su5,4']0/Wf]KL(#=5BKi0`q
%KRT#%mAM%f%dm-eje*o!@RKgX(\$,1_c%r$F4-Mi&]SI,_i2A[Ri-RH`sr+2o'Hl#2;9f&k5N.A@e\%bE4i0JoCok<I_r4X06e.u
%%=l>gX5cjUr>H+NB_CT4FXa.TG!l4k)co&gpa3I#R1Xl9%/PobpYB0e:[4AUq5W3W\k)!"7BDlA0)gl:;@FWJ9t).VH*-cA)bbb9
%:G\"P0k]^$>L5c(/(fkV7^B;[h2L@$+ZX3>aQ5c_+Ud%kPcrLMj&ie4MXF=Te3WPpCT8h34C#!h'L:0,f3U,E;:68UM^rbgg]BH0
%blP!oF\`1Rpg,/9i@T!aj1;/O]O]<)hh#cb@>s1'6L(GW0J*$JHRr=^hVom=V'pkEQ9MqL\7Q"a+n[EkLpu<KG8MM$"c=SDYP2!<
%H5ln_?:mHB_?0UdmsA<J:9WY!GY(%S!W27s%&1@=r3PpT._"dZc:m+>-t0`K<=QolN&')%>%;NIQi5RfHPSkhGfUA."lXIL,3nO.
%H&_&5\qKr/*G!SG37k_-ICk5";/8k*eS,k:?f@S8PY?m/HfL0r8Wr;Hg%`m<2Y*!NC3@gN`3]"6V0t<%dm"k=GK-tCNM!EqkQa):
%@p`DhRq#!92MoJl*.)Y>D5Fs7IDkP`/29Tp4iJ:c!J_NTp>l(WNOc9@(KSq05sn"7^[1EG2taWXrkt:0=?(?goR0IN48[r(-uR,`
%Hee.#RqJAggD"In#A)9hM([pN,V`&4iO7)R:?B%RkJdk(g<T.p^WK-?hP")<&hF.<8cdMIKU/Ec@iVr-;$.)=j<$9Do;9nk72Hp$
%\6an$#1t,OLETV`1).69BP"FQ21A9P.F5:i5,Wl5=ihNd!U[;q!:Va;'C#i#R&.@lT5_m)pr8,VjIW+,<r![68eC^W9(QV3BAYoP
%]i_c_1De:&5OA]g<1i4IX!WLN'<@1<f9iqg]5+h]@D#tGR5hKRafAX[<SYU`C82gD3?Rs-)I=KrHNas;.iITWJ?=\O?K(UWVtpsB
%QW2opA*T=Cg^KZ='0a3dH/,qcM5)b&Mj9]LnPS#d%C]_5C?jSZ^^Do,+`J7e5p&b07m?b."jBKsF6L@6nclDY]NeRqg,#>0nBrQR
%oFmh*p+Ph1et2m*f\/-QpMg%`l)Xc=+3W]NrK#4:LA?(1mb$OQE@)%V.u8QLK<:O5gtRs&^>7GGXW>OEf61Xk[e:-kXZb]iCHlgp
%g4:,A/%0V3ZS0V_f\1nGr+Kp6!"7tuD=.+MCUtr:><<JbX_MWfmH=^(2\TDB_)eP*`n$/fUa*m&p4<^9l5R(ulkd((cCOoS!Q;@M
%,B>u.gT5qNAib-Z'N&`(Yj^q4*;6bG,6NPTOEU?5o+(bea=NqY*BkiaCAfOXf[l85Z$ciQ`a24t9cNum]KS:JaqE1d`\)t<%pZoT
%\<Zj/T&0"ifT.(H)gco*f\']5XCDp1GAAO;Hg^6coeDJ^^%t=SfeJD'56K?ZNb[=84*,4N0-EP[[ruS#cX>V_1S/ga'DJ%<5?H[V
%o:8&3/B?$gN+@+;mHd[U.LjG]fR;N-q\BNH9T3[W`B-KC*#GiK[Pk"K'^b:.,?aXJHA]K4%L_/d:18Z8`o*$p+kI.Zl>$3-/J(]>
%3Uefha3K1mW(F8._,EN5T=s8XA5R&JE!Fp>=aK_+q?N$>iG\h1bLMVJ#M<qNke,@d*2D?dlf#o=QYZG4$@5!jIB.k[QaK*Vph#Tp
%5GK&#Si2S'SY'k[]EQu=HSHZPW2bmFOA8Gij)ZEX/r3dg3S2;KIc/7:e?HW8_GbgbGdG%2`^`)hdR*ofo)TW<)7ejQfH0ED@jsR;
%:,"d3n@Fs)1CT<E0/L7K.^Z]^8%Q3+dNi0UQi\N<Sk!J]E3B1nV[1BP="=g>Nf0,k8>J%Z*o`-?!3_TX5)kX(CnmVg1VdEVo($B$
%Hs>R?oPc\dh%gTc@n9OOjM6iPqDjgI<a/poL;=n3XJrOC6+4&R)&I83@Cg#>,K%[2d'0d#CnWNP"k&R"7je\F@lnD1fa6l.ggep)
%W)eMP:O_'.(TW/e,G#];C?@Sd_]-&XDu8a6YPYNmZPaUKf3cA74/Q&-_NB^d+mp.1<W30[i&:HLC^/Hnr,@2trsrn</B4WW,[SWD
%fC4m%$N5S&O1'prJ(U+[`J@PWgaXOP9aaZXT]lgc_gUj;2;ms*iVR3tos/85M%a*"_Hdd/jZ_kjHc$!<I5c'q%VP96`]Z-WJ5GLo
%rh=QqK9CW0X2MnYH%J/loPg+l9RkR;k(Mik3Pic.-qjjB&PjeG$/<QQ*,'eUS]hU(/rk,qc&rL^3+.%h9AX_M:14/rBlA@^h`<#O
%GC;W5"=qYkN2%9$;9!rFNol;`Nu!&tr]IkLT!u)^c;/[KRO&R?p@VlbZ_UO%rgF^se*&sDKH,L.M)*J?nM9.#f85FP[*&9"r.<uE
%pr\Mc;K>oXG-4!m;Q@!#$@)Gs&6i_co=b89bC.pU`/cNHmJMJV]-7k!>T;Z-r+lTaaQo2d'7RT,C?Hs,n!>D>q^'%9B#!`"@-GY]
%N;KG^.)e6pr=WVSMD'5/![Sdo+8_eAE/cnC*\LLT/bVhJ.$aeB@:hXjR)k2Rj>uLZM770jAbs(:R%kb0\<&h%(mkUoDVUm?H`a[t
%n8g%-[f<csD?r,G%poq<I@j9a#Fn'lQl=6bE**T)Y#\*)P7b;l\H)RX*bp4P1EpIC.8Fgrf,Hek3>Maeh(N-3Md#BtRa-@Z?,NMj
%nI!PY`fVVF,!_?t7*nr@E<*T0j9%<%LqSN$f$$rVC&pEP>EXjg4l`]i*Z&5BQYG:EXqFA/5$Q;jn?0&1hD\@VTuV3N;SW9<AnH/:
%;$Q.,elP@V`)<Zn[T[PbVZb%Zo@@ih%$9nI@=r#(U8`>I-<T]5J]2!I6Ggq>qb+rfl4VJsckMI^-[^SUi+:T/Yi@AQ-bfmD3acQX
%NoUYP9/%R&;3&4shD]YVA)/3>=ZG4t&dNTZl2SpSH/QlP_dnWUs":"=I)6de<QtCm[r@?1RuAg'dHDBJ7.F@5QTr]uD"XMTQqj4(
%1+@,"e&bb!E9E)N-o7[6Dh7,WM^5jC11DLkQ5:&>1R$(,_hM`D_F_gh=qC%idW-@kU0opU)r4_F8YrGG)=cpWrOp*mn<>[:$UutM
%J2Ne$&r$Wlh!&6ORQ%i1kN(7s0h6YA6g$>D[F5H3<&GGtZ-gHD[Oi3>BTeI"NL@Bk0i6&dh)DC^V+pQ&LWs-u=j(g7F`,!IU<\eb
%>/'eiQgcEb'g8Gp4:/dIicEnmEP%/l5(!SCTR$uNa>_V7kNB^;#\WST]mQl+hYqsUr1;d4q$Gppl"WBtIQ*V,I#'TS\gg88G2UdH
%B1fT_-F-:]!8mcu7T%1FC9n3C,'RFm6c`A4dM-k@d2%qNfZi;]X*&j.96PZ_694QO>RMSXJZo<#]8k?+e\&._?,]U+HLGO`ZUMY1
%OV"UEbP(JbGD'0g56uS(YM`HO%Yr`E$0MA%nC\8CKjJ]NBdMP3b4%Cgm+Q$78V8uuHa/R1$m(,7[l@n]@HBJ2^"AJ:Am5376brH7
%:"^46]I.3j.e7h>]T>h[(*2Yi.:lf?f'<_\`!Z?CD-u,C2`sJ5%71kBV9X*bi0C-S?kjEUP]KpO7&*QVZ3F@b[UYZ8O:M,4QV.$e
%n?JB'?mf>CbSLs/`7>_UN?27f#YKP$SJm4D52tP++e_A4Y!`Ts55%1X>F3qA)*;)@7>XLL(`u,I"*$Lg?jiRt78_24YMn9#Ram!)
%5&1gE5\,UXnW6TiW&T5\+F)'u&7?g5=`,npHAQm:hhuu&b!-N%e-^-pS^!0KB)fY9pBsF0LXp_HrJ@!NYl*5Eod\Q7H!(c;CIp0K
%RQZ%P;@*`(8LS"A#q]>l-G9#`Y8EcJY*;R]ec;n#dc[@U$:\\"glrE4n4$el$.f1G9l?ZT"W?h$EWq?oPY\OskmCTqnh)HqPa:(E
%dQERhPjTG[m,CgYS&lG#j$\?\/lN]Q:`#!2L/Mm15LEb]\>4)P4.A^PH/f!;r;49H?Mo94QPX(&^NQ$6lg\Rhl)suS^S8;)2SSp.
%Qe0M#o)Sfp*MQl!A,=*q2TYe;.a39V0sV)AqjPM(\F]?@`rG,?mT2CAgTZ+^R)a8Kho/faR%t/Z(_@):%OsR^JGjnO*OlU(qO0VZ
%NalhKf>FhI(l%`bTdIip*?*?..04O<.FY+(GVp>J];>*"[RQ0LGdQ2A$l1>JL-"U_W6!VkmbS'>0SuF^p)EH3G8?6AajCpOZQY&P
%B"UBc_u0'@*,jg5bj_r9$N3q1D)%tP[8&G?XosN:!n.86pZ*Vf$^M56<Hqe>ndsn]BS\\FI^i</H*_nG&6k@m`QP;"4Lj#APo#at
%!2G5amc+585j\dCSHOuf]fL0%iYL]J$jO*1Hi"enc;MbuQocpMrA>`p1GY]20me5Vnme\R>"G*HT8Vpc6h:;Fp#:nrNnArH_I\jh
%'cZJG+`+98SRmsG^op(FT1DH9g3%!0QHM+h1m1T[g"3toECj.8=2:IU/Wjn8YFOtYW4<)E%A&o1o7p$t!b8XVcO6s:<\$st%N?ej
%hn!7j87WWfYr]_Xh$9SBQE$XK\7spbT=_al7s[$<D>6ti5N=M>qshKT3ICB.&p(6iJR)F7?'IDkS0[LZ1d[jWbZLa!W1nFfo!hc)
%WLG8l8A.eW^_p-H)sWf;T!*--e<J_hI#fCOg;=359fB%`'Sg4-0p/9=S""]0S:,ZAm09P_f3_m);bK@q,0#q4X_lF?F)Pt?AKIj]
%*8!t5R*`daJQ[_g:_>^+4ab=rY3iZ!Qo@Ct--i9rQuf3M6XUtW7!d"a9m@C:.('PuJ`Yk0b:=D:fUT'FV(h$>N4Lnb\,$($'=Z[B
%q<+P#h0QaR&l$@\*u?)'X'(n+Qn%p2F)W;XWHZ$#9u5fTEjV[T5T1^uDC-=lTu9s=g7sK=0<U[`Jts5RSkQC(VJ-8[_&M;PSZ2q_
%/T=%_*_2guH&mDmkhiKmBON]/&HR`IkCCsY_12=gY>U,&iKc*p>*X81egT8&b7P0po=J?t7K5Y<)0rTI]V;B`$FeKWa(TnC^6(p2
%APcQTE"f07T&n0HITbqib8EF+m(cuZ!--M;ob&PF_*W1W\UpGT/"W.sD^jPP*ghH31*P0>///rbL0YEob.W_e"i[4k):)WB0;J@R
%"*I#mb%DQi_sA=t[JYOd<+R=N)4LW>.%8NN]KB8&/F\?>+\I4IX&=2J>+L3Q>"4a#3:Wm>g$^kKGrWO5+CNROAUZbo,kl#UoO`;8
%.[m/;!;%cD>nRZK?-*8X#Q17\1K"KuI?@-o4`LsGUnW4jBt7sd2q<o9__=\"TGR!"!F>(b-GBci!\]NN6_]V9J0VR@+JXfGdYDDZ
%l8l!6([6QMKA3H^FI^.!-aU<W!4nI%qN45D3^O14\889r$a=Vi1c#SK2:2oP@JYcql:iqUP&sD!:%&.d'tj[@?kiD(&tBWF5:<+*
%Q1&Z<R"b&D5*1'g"c)['Yj'I2E#]$JLQf!@b?Vnh4ssrR1AN54!gs_<D:L4@<nt`]HqoNC=H3s4;UlrFD[N&o>k(Eb*Mm.g>a_2k
%e&7Kljjp^"#:P0U^O/d:NgsA3^/HEZ#`CS<L2jq62Pr(2URGV$1Ym$*r/SU6gt61kg+M:LJe51/I;WB3FXE/adp(_%n*`+2pEs8j
%;?)2S*`)l^#Lg8APm5SbNla\5*Y\#XQFPKIa+2_*gUWR"<cB=9@>bod>&K[aVaWP":<eSDKUQCs<3>0?/[RqcFGOKQ'5Whd/eK3,
%LK1hrT;u0K1.>.,;RN-D%b$cdSOY$]k?&:X#T"$/iSddW!LDDp4f=c!JZd,2m]!X;F-nV%8%uuLmWH9nQkOHdrm*9SSuq`/7K2a?
%rZC^Gs7%32huEY)GQ6^\rVM*Ba8b=Ps53eDQsTgOs'qp)q8`O&q1$`-RlK)Z>id&K9`A@/SY*Vb@Nq[FrPsEc:\]j:RfBjSc5+.:
%J4HB%j]1Cp,WRO(T0>F2Cd.k3*1'VbP6Oe7)i"R3WU\$V7>SZ,q"udZ\Vj(mNkm[0>AdV:AB9ma#qrKU!W4*V=FL\s9#I9*(6l!C
%gaY=3`W3(8[Q!Vn3lm^E#%eMi!SF8O#L@[Li[dI5>=fK<5igPbL#6jXXR7q04./,")G?#1J:$7A^N?c!'`Z)Nl[SgCs5h#p?iT^>
%s7JVVDu]-QqChlh5Q9!ErnY>?`qO;BqqqG6J,FfofDkE6s4@;4+91bYqOdc)++O4WJ,\@*\,Z;snF43ma8ZI,ra50pn1GNACh:Hn
%"KO44AK2YH*8.qKP4>V7H2"aQDXTT(s!_,U^nrS^%sZ_p(`-T3XGJ)FB,B*:3#fSu%KfIN3"+h"Pe[C*8t*RP2dNfti9g9ZHGQ4!
%mcJ.\`Y!)%jFY+%lrUu2@KS+&OrG$i*sT.thSC@Tg#_UMibV]FR>6MS1!-S9jk_'jkG_.:0:i#bO5l4Y(3-R=/_]hXN0#X?R-tU`
%YZl$AAE;r5$+V&QB8'`l:A?+=V7U2/]H4#AE1*BQ(YG55lE;2+M:&.']Rm:je8&dHf+83eJh0/?V"*)2&>kR5'K=E\*_X+hJLH8[
%M\Bu!_[%o/Lj6^;'$2(T=dT,V&u1c#r/%cAW`p#cHdOq&f;OGWNq1l>J+jLt\0oe?0;q;qQ>NUW4j1)gUc@)tNGg!HdL91n(;RQI
%2R90b``B<\lRA3'7^`)IZXjkV)j4A,]2A9)eM@:%@+4i&\ZCAA!][ST5u`k\e0P=J:cCSjk/r6?nPgsHp=Og:29ECiRZ?A/`06NV
%8deB(F(Kg<fs80c$RA2`pOk#g&tfS69,Qf0^&3'b,RXK%Yni)N7k\)*OIU06gd-V=pJ_j#O=N+p8ZDnMGLc9m2iN)53;cURW_rDD
%rV[[J]1kes9;hm3.pc]LDYS`f64js4Uit+,EF1OTF4KcqRoO\dI$mXh6cHHN)4'pEdTSV;Q\]_ags_:3:dTR,pjh&#P+p<C9=JKF
%K;PZcEk$5>I-KY*HPCJ.9\fkid?1\"]Pqq0G(*`G%3/B`T6;^/I7q=uPVK4^JDW[R^lqFW+i#Y=h+[d%Hcrm!l4TRR=9JC<](1U*
%Dpk2"C\.dtls%'F_+l%tr&f]\GS^<7]Net$_,s)I[_bpVF4elbRH_ZT'K?.I^Unp3s(1u6l&3:1;pDLWk5a^!U=f%5PQ1?qLuV4M
%724`S[;j.(6k,Y8M:"MrKlna`M]",B&HITPV&iIbD0"-!%1tH;+VEPd?MK,YA``Et1`3^IDKJZsH_H<"9SKd`(<co+g['C7+Gmc.
%].J[coFM,"63eR;W1qK?:sZOp=\3^#)DW@3gVI-R?XU<G-*pBnDAP;OnHq>U6$hGc+()YTDa,2'F.t:D96BV-Y8c#LP<qSC#3*B+
%hc^fRY2EJhG2;@\IIJG\1qS@kd-G9160A0$qfTgBK3-Re-oR'cV(5T:0:45VnBJ?8n`6i]!+5$^]5W24gp0DC3";'X@.DaC#&mQH
%`J'-8<2_8-n%u[0Xni]CX'/d@*Og]n.^*52U._ZKm2o]IphsMt\#9/ACok.Ss(M_gX]7Cd'%5]!PF"dKc-Z:#6in,SB#u>nQI4tG
%;7../.dB&1I'+7WpkH+d<S&+e""?!&nf#YA#?[iE\dMj4@GnK$qk4Ce?5N#BeI=a\j9!]qS]ut.@2?aqfhKcs2k_OfipD31Ct<ED
%#TTkXN\+>A0N9`i`:\%sr3m1]K^[I#$hFk9\7?GQi/t>FTSLnl-GApE)F/h1_8,=+m(KVdh0N'k/O0tE*#f6K[R#>YCfb>C6R)>8
%oLU>7[qOm]O`Def:#\>gIShCg9Ke`@NSJs58R3Y8%,l?4TtT/;L*FULMf%8scWQq/d<tikJD$rKf[+7h[jG#o$@(Pk$U9"4DndhI
%Oo+_:lLp)TR&@paV$bGPIF/+!V@ZUt]<7>91K)+T7Ju,p-ah_'bK/k=W4-NLd%Gfmf@6'`9FD?Q-'B\Y>N`$8T=h\DEHbWu40#6?
%?]7f%XVs;I3P>c2:jJWI3TBp6YSeO]@]W7(ru97<XVO(r9gfBM/Z(Qb.gAj'94*#?^VOO9/EZL#"IQU*$:2F':Ob[L)RoFEK3G!u
%5u_^Dg(9iHo+;d>3M(W$:#/9^F^s6U_qD?[fb?EjDI(B(pF+[i@H,CTSX3^`[X3[hmq?heTX[s%m%i)Cg-j>*g'%"NnJ,B^bI1;A
%X/Un.Nn?s2Yd\uVq;(G,!j.:5LMM`5ijTEsgV%O"h^`'_+;V?OVV!L99E>XrJ7;gT4CgK'(H__=SS2,(AiDt;=$.</X=XnSiA[d!
%4MKe2n?eon(G[5SQ\)]N<1aP!:K\%9CsODJPdVD^j:#])r0$*q:0Q9_VXjb78ekoaJ?A$N1^L(r*!/*Y#lX\BAPpW(0\a!_TBG;h
%U"IL\<#o4cQ/m%9lf>h:4FQ@o9Pg6fcoI1b]TKrPL5M3'^2/-_g5,%o&#lZ\(OfnCBOQOe24XXh%mDLA%<-PV]C1*=\2UM@.^?ml
%?L?i#eC00kCU+1/LT)(q`KLr%r567D\=nKW1\W0eV71q3URH'6ij-=g=[5?e:&qb(3e[;bMH-q\L9kH4:nm9A\qE<Q2k/"$KqEek
%[gsZ89R9E&:3`\k#3h-0]kprrnm?88C;FTR2il^0ZDk,l\8)n%Y=MiThY_+f5lQLbb=tV\%JVN5\J"b@'1@*1ipDA65\[Xsi#M+M
%>DmsQ"BdoSi+o;Q]M^O_/d$p5WFjqIMC-LK%mt[_F4WbA?XReRagBK;.f1hO@Fd85kq=.3G9?iDn:Y^9/7Ch3+SnkipU9KMpur_K
%Q[bD\43b-u!fH,S].R=!6C(eiQu/*8#PcMN5JKC%2XFLVaX(k?ntf"P?#Of!WSO4CHGOUk3T#!5C9"o=0=Ti-?TkEBeR4+_ZZ74q
%+WCh2/5"I5U1plbI,\sEO'M<_'=Nb37G.l?ogO>ojhH-bEHP8e9EYGU[+#%35P\?V6,Y3QFaljKY(I(oaVG4eLT5(3D.m/YQHNXK
%hV3J%+#'2?hGmRc=S`BinQ;_G.YjI;QFW8d_d^B:=5E"Ma*TE4(cFdT2%7!Jj<^]a#QoD%6/5u]`J18/UE`CCC_XYBCfo._&1u;Z
%D0_&9H];cdRsX,M`IIJ-6ID[q+gE?;XCDNKNQ'DE`:'h7.l-.o_*uMceLD.Xh;iMZaHd1$Iga;i\luECp2;o0<eeMRZt?kNM!DKq
%+2pdd6@tB17>d2)Nta+ON0Ui`q^=L7,%qh6+]#,oE(S$j3H*ci.m-Q7lAk0+?\m67-&+(W2qj-Zk9N>c(]$%g9.,/]mGGXE@]#M1
%&!LFiAKs'=/Js6+lKpN]b9a9$k".`^^tU'Fi*31%$sjaHhr3Dc`N/tcmOco>JP'J4!7=]NL5dOd7AObN*M"srQTk,.hs).=/Dp#q
%eWqVH9>2qWB_?aXkH[^+dI\B*WH?:3ib[8#G0kG;S[*JJo*umJ/KOJ[QiA!5jKNlIQV?F70DJN:^<r#q>J^b3QL=S$AYpQ"74[I_
%L*8BGbR;.rqR[Z[W.c&cNI/jXk)DK(]fM)=2)N&%d"g/ai*2t4o&MD>7rgX&"NA;ON9%F7EYhSP)p.8$UOf.4R(\+-lF@`P_QGCY
%nr8"69+.Jgo4G$]P1'h@+o)ila`f]D2fQLAo#F`A::4"4=rC80C_biIfuAeXnY4m,#Ce9o]KGthV@3XiA'+QO=Nj28h.!-5J&$J&
%_j7,"ItFVnl!'PD$j/)I]7fPL\R!,O[[-_`O>)*l#a:XQ1eQs_&!IFrkr`V0/EW1d>EbH>L*]"#"8BYW['QmtSp>18SMerqJ`9)/
%YC,Tp^NUOpkO/PUs8Q5)s!C1q=YB:5[R76,/;XUdJ(ncbBVJXD?\DFa&M9t50:NJ]8eRPBq-qkuET2SN/uR5Ir%Eb^M4NVHPn4^[
%?Q$oj6hRE+=DR4#6"J(Fp.0I=%>TbpdF9BP`LsoU1&_jL.K5kqAgP:u+(Sf^FUnS(K>#NfeJ+p79(DMM"uJc\$a"mOl/0.2Dhe#T
%kF+5hfD_]Aj;N>TLq.,FN$Y@U2Y[p54tI'd2`LMD?plQm:3A0Rqm2Nkr^6_`%9om^EqL?feG/SL!akGhFGq](f>\9&-DpiP%*]Rl
%CDanls&-@qTO\kZh_T./f`a<:DSl;cbo,VsK$AM-%b;HK>;aq9>Uq*07:&4`%c#-_/aQ->rnZ^Q#E`8G@LVpr@c/;#_Z^hgU+[:n
%Qi)qVW/<p"!iUFZKPcOR5Uj)Z\D9,=J*:7S@;f+t_t`^QG7UX,>,`k02+TP?*%j*9n`Qa<F'qS&B=4);VKq262DP.]E!Jf)#P"sr
%%b)Yq(:A";-5_B3=Nr`$"nkEfIP_,3;Eb)qD^A7+GmHphQX9W[`sl4QlH2QnIOh`s<8I4X6U:XV5X"12[%]Wi]n=EMW;4W2Uk<!9
%"&KLX#SJ#7itJgYD\JnY0`VJoioc)cIBW^VWg0Hp%,,m*r\qC5lL9Zlbd<?GeZ*bF+lacqC9?-I-+E^dN;GM"rS9(JT<P`g#6Ln0
%M[pOU?ucRPpFD3QO"UCCpIL*i=nb12n^aNprJ5a]$4:Ef*OI8L`hb>C3-9-!^a5l2e)7'[R+]F>6.6Z95=L^Z5P3:ZYdHO:1']7.
%2IX86X_0'!r`FV'N%M#?8.d6j[Mo\W)iLkp1tg*+QF76o&p&hbWSCLt0A+qH*aX0HM*R*3i4d"`VOdH*,)<-?5Aua"6+Qgfa1"hB
%]8$ibL;qNsP!lPK:ReCcPYB;4]7+1PdX.;4b?LjtZfs>/=1VKa$hI29Z5t6>'[)=/s&O>%Xc_C((qqZiJ!c.T%Vhun;BHRYJUen(
%j;uNWDuuNbi!g"gpX/S5<DVB;>_4!KP>0;\\tpmA<*sPaOCLu))SchZ3rpD[9b_+oaJ9mSUKYM:hs6<0K\bcB%hXNG[-f,J[(%Y5
%@6G4u.ol[)A1e6XA>,9>77@g7fio:8OF>UY(BLg27;mLdZO!X5Z1@^b^+e:[%N/3g;?k75hh&:3n_gda8L3pgT1mcQAS&6TYJmRc
%K'I4?jpt?Xp,6Ogj;@K/0[(f;g>dNrbG70D[B\p7J!)1c2Pl$aha,`PHu%4V=C-rZd<KLn4;Y&V&U5$!BEJ1uTf9YfkAtBs3VD$,
%`iQUbOHr6S:,6Dlf(A(7<o(fHdhbt(ED=sobqIBn3Nu[q&rF;M1FZ$8J1;MHgI.eM,!(C7X(nJ-UkI'#XFEM/;7EmJr@rotg2)XH
%RG46^hITTU_g?@)H1.N2>/qU5gs'!$f%RR$p!PJ*OBZ$Z>69hSbVR#o*0=Z00?+)`>.RSa)@fVJC%8X%N`Phlc+eC6p;ul(Bb"Gs
%4=*S\=@;Qj=8ObRZA4m8<3QacS<N:nQ?LolK?ph+V[8Ce;VbthF>\:4'Y,udc1i1#Ls.P^hJu8M@fUjLEFWH]g;ZK.#X`bC-KhB:
%;:!1A>u=AhD6j;"5*>=T!I"ALQ@.<[=7-]hrj."he9]g$,a2>=('CAn:;F"8IEa#>j4E9G=f]:ji,_#2W(?Mu2S0f3)]O]Kj9p`U
%Od$%8@QoflZCsD_R@8c?:fb[a(e;l9UAYeE8W>S<(AMI[,,oe&/6dTAb@5Yp%.G]N+#C]0_l&b,j@`KRNiK0-`%CMJ^*a'_IQJn6
%4sDp/?Y?DYe4N;Z5b;$F:C_Zt)<^W7.ud/#C'Bis2qVH]J_^`kj<SGB%>p(9X)d>LUr^]QobP'T26PM4][c%=@Sc2]L(o.\B1'f\
%RtSEabB(#p-Tr('<[(B!FsqhW`4g_\=iHIi(<NIub\3l:>;:,li#V&QFH1H?9Pu2`4K4V4"(Ws'"t!VQJ<T#=3(5/Eg*C=g@,lJ@
%*$*fbZ[]6!Qn5-[`na2HBElt2GA=0?+J:&4'f-H0OZ.4+pcJ,[W<hh&Q^od7`B5+r"Q*$6RipAuhacHReYWWf>EQ*BQ&F\<Z6U;I
%2Ta"59l9r5&;=&X'sc,-co.8jUQrH6:<Z)=Y%Zj(FqZG_::/ZUit0%T8m-kr-&`Lkd$%]L[[I'-oma0sjY`.Fem(7s?8&1f?kFPb
%@tdL9FtL,%:bR5CEN=K"E(XE]VV^Z&-X;GUH4`8T3j,#aYs$eOg@YVY<M5ee,$S&/,IG$:Ak2S\e*YU3rYs\NA=M73*\r\Mnmi(*
%42c^"(=mtK@fGV&ZS!u=S\u*a>iXJm<kPQ8q2dg#a84d7#[E8H2,Hs4*_N]&[m]Y.aejhnAQ-'J2n!*qA!j\F]:j>s@%j.bb'B)3
%1B$om>cf"$oeue&k.0MlC\'B;7R4B"X,TK`<7Te%,_/t%Yb^HNcSps^*biS[7a\f<\tMI@Pe>UHkh=^HZgue1(ALmJA,g715HTsC
%2lCr/3>Eo6Inec#3tO9;(VsVp3!;Hc\H=>H^E_`e&Nne/pK\UZE=p*_Q6uo`(8_H)<a>]L`#LY8gB]aS-DdQ"2o%O+E>=l$g'2tf
%[X:IgLIDr)q[n4qmsT[(a;\YqWSm`\h&)[SI(aE(PKDF,b?<K,>D#9"[e,[1qFe3;eZa/r;fCN9D,Xp>Sd<J-dnFoeO;8SCQA0]t
%^?A0782<(q:JYZ.j`9WE#67lf5cUMQ)up+t!)#6=8`?CaH9themG.ZoB59.h(slH)EN#[5[Mu'eo8\QfpjB>QQTN*4V[=X9TS!\[
%[5I<3V</b<63pcmam(%`DB^Mu-Xth@='=iI^aA9eQ/>!ON?O9>^_d4G2J':pX;<'NBdVBCpWEiqY9)=p4Z5Q@E<Dq]W0@jL1+T8;
%:Sc3%Z"b4$mjJ(jPt'#I-Qj3pR042$_t'&eI+_he;>^B3^DWYnrE]Bdh8c.+n,>L8>[J#YeIQluk8tf6If457Gl-Y&oA-&%e(r'*
%N-tVQHuurL3.Lqfe&2"Rq3Om,6/b>g&$E(lIK/]h2u`kZ"C6-~>
%AI9_PrivateDataEnd
